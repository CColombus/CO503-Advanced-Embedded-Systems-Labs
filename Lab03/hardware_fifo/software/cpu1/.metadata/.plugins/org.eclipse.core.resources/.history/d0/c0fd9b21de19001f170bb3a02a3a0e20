/*
 * 	Template of consumer application using FIFO
 *
 *  	DATE		: 18-08-2016
 *      AUTHOR	: Isuru Nawinne
 */


#include "FIFO_1.h"

#include <io.h>
#include "system.h"
#include "sys/alt_timestamp.h"
#include <stdio.h>
#include <stdlib.h>


//void delay(int n);
int consumer();

int main()
{
  if(alt_timestamp_start() < 0) // starts the timestamp timer
  {
	printf("Please add the high resolution timer to the timestamp timer setting in the syslib properties page.\n");
	exit(1);
  }

	consumer();

	while(1) { }

	return 0;
}

int consumer()
{

	alt_u32 start_time, stop_time;

	printf("Consumer starting..\n");

//	FIFO_1_INIT(); // Initialize the producer-consumer fifo

	int j = 0;
	int k = 5;
	int count = 0;

	start_time = alt_timestamp();

	while(count <= 1000)
	{
		count++;
		READ_FIFO_1(&j);  // Read from the producer-consumer fifo
		if(j==k)
			printf("Consumer succefully received [%i]\n",j);
		else
			printf("Expected [%d] but got [%d]\n",k,j);
		k+=11;
	}
	stop_time = alt_timestamp();

	printf("Consumer finished..\n");

	printf("Consumed %d data in %.2f ms.\n", count-1, 1000*((float)(stop_time-start_time)) /((float)alt_timestamp_freq()));
	return 0;
}


//void delay(int n)
//{
//	int i;
//	for(i=n; i>0; i--)
//	{
//		continue;
//	}
//}
