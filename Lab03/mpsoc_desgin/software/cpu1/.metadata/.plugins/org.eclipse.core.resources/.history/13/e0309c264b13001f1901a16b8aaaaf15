/*
 * 	Template of consumer application using FIFO
 *
 *  	DATE		: 18-08-2016
 *      AUTHOR	: Isuru Nawinne
 */


#include "FIFO_1.h"

#include <io.h>
#include "system.h"
#include <stdio.h>
#include <stdlib.h>


void delay(int n);
int consumer();

void testreader(int offset,int *pvar);

int main()
{
	consumer();
//	IOWR_32DIRECT(0x00079000,0,0);
//	while(IORD_32DIRECT(0x00079000,0)!=1){}
//
//	for (int var = 32; var <= 400; var += 32) {
//		int num;
//		testreader(var,&num);
//		printf("Read [%d] from shared memory!\n",num);
//	}

//	printf("Read %d from shared memory",IORD_32DIRECT(0x00079000,0));
	
	while(1) { }

	return 0;
}

void testreader(int offset,int *pvar){
	*pvar = IORD_32DIRECT(0x00079000,offset);
	printf("--%d--\n",(int)*pvar);
}


int consumer()
{
	printf("Consumer starting..\n");

	FIFO_1_INIT(); // Initialize the producer-consumer fifo

	int j = 0;
	int k = 5;
	while(k<500)
	{
		READ_FIFO_1(&j);  // Read from the producer-consumer fifo
		if(j==k)
			printf("Consumer succefully received [%i]\n",j);
		else
			printf("Expected [%d] but got [%d]\n",k,j);
		k+=11;
	}

	printf("Consumer finished..\n");
	return 0;
}


void delay(int n)
{
	int i;
	for(i=n; i>0; i--)
	{
		continue;
	}
}
