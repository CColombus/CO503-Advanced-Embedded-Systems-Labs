
1d_r.elf:     file format elf32-littlenios2
1d_r.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00060230

Program Header:
    LOAD off    0x00001000 vaddr 0x00060000 paddr 0x00060000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00060020 paddr 0x00060020 align 2**12
         filesz 0x000108b4 memsz 0x000108b4 flags r-x
    LOAD off    0x000118d4 vaddr 0x000708d4 paddr 0x00072478 align 2**12
         filesz 0x00001ba4 memsz 0x00001ba4 flags rw-
    LOAD off    0x0001401c vaddr 0x0007401c paddr 0x0007401c align 2**12
         filesz 0x00000000 memsz 0x00000368 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00060000  00060000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00060020  00060020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000102c4  00060230  00060230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003e0  000704f4  000704f4  000114f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001ba4  000708d4  00072478  000118d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000368  0007401c  0007401c  0001401c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_controller 00000000  00074384  00074384  00013478  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00013478  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f18  00000000  00000000  000134a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023d1e  00000000  00000000  000143b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000925e  00000000  00000000  000380d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b77b  00000000  00000000  00041334  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002488  00000000  00000000  0004cab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003cc1  00000000  00000000  0004ef38  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  00052bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006a468  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  0006a478  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006f3fe  2**0
                  CONTENTS, READONLY
 18 .cpu          00000006  00000000  00000000  0006f401  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006f407  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006f408  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006f409  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006f40d  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006f411  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000c  00000000  00000000  0006f415  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000c  00000000  00000000  0006f421  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000c  00000000  00000000  0006f42d  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000008  00000000  00000000  0006f439  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001f  00000000  00000000  0006f441  2**0
                  CONTENTS, READONLY
 29 .jdi          0001a8cc  00000000  00000000  0006f460  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     001b57e3  00000000  00000000  00089d2c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00060000 l    d  .entry	00000000 .entry
00060020 l    d  .exceptions	00000000 .exceptions
00060230 l    d  .text	00000000 .text
000704f4 l    d  .rodata	00000000 .rodata
000708d4 l    d  .rwdata	00000000 .rwdata
0007401c l    d  .bss	00000000 .bss
00074384 l    d  .sdram_controller	00000000 .sdram_controller
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../1d_r_bsp//obj/HAL/src/crt0.o
00060268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 queue_wrapper.c
00000000 l    df *ABS*	00000000 queue.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0007061a l     O .rodata	00000010 zeroes.4404
00062f40 l     F .text	000000bc __sbprintf
0007062a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00063150 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00064ca8 l     F .text	00000008 __fp_unlock
00064cbc l     F .text	0000019c __sinit.part.1
00064e58 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0007098c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00070dd0 l     O .rwdata	00000020 lc_ctype_charset
00070db0 l     O .rwdata	00000020 lc_message_charset
00070df0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0007065c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000681e4 l     F .text	000000fc __sprint_r.part.0
00070780 l     O .rodata	00000010 zeroes.4349
00069820 l     F .text	000000bc __sbprintf
00070790 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0006d840 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0006d954 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0006d980 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0006da74 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0006db5c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0006dc48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0006de24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00072468 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0006e098 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0006e1d4 l     F .text	00000034 alt_dev_reg
000713d8 l     O .rwdata	00001060 jtag_uart_1d
00000000 l    df *ABS*	00000000 altera_avalon_fifo_util.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0006e9d8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0006ebe4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0006f21c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0006f45c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0006f8bc l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0006fa1c l     F .text	0000003c alt_get_errno
0006fa58 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00074058 g     O .bss	00000004 alt_instruction_exception_handler
00067828 g     F .text	00000074 _mprec_log10
00067914 g     F .text	0000008c __any_on
00069dd4 g     F .text	00000054 _isatty_r
00070668 g     O .rodata	00000028 __mprec_tinytens
0006dd60 g     F .text	0000007c alt_main
00060adc g     F .text	000000c0 _puts_r
00074284 g     O .bss	00000100 alt_irq
00070920 g     O .rwdata	0000000c q1c
00069e28 g     F .text	00000060 _lseek_r
00060580 g     F .text	00000118 quantization
0006e538 g     F .text	0000005c altera_avalon_fifo_write_almostfull
00072478 g       *ABS*	00000000 __flash_rwdata_start
0006c218 g     F .text	00000088 .hidden __eqdf2
00074384 g       *ABS*	00000000 __alt_heap_start
00060aa0 g     F .text	0000003c printf
0006a040 g     F .text	0000009c _wcrtomb_r
000680a4 g     F .text	0000005c __sseek
00065008 g     F .text	00000010 __sinit
00069ee8 g     F .text	00000140 __swbuf_r
00065adc g     F .text	0000007c _setlocale_r
00064e60 g     F .text	00000078 __sfmoreglue
00070974 g     O .rwdata	0000000c q5
0006de00 g     F .text	00000024 __malloc_unlock
00066664 g     F .text	0000015c memmove
0006e2b0 g     F .text	00000098 altera_avalon_fifo_init
00064ff0 g     F .text	00000018 _cleanup
0006e5f0 g     F .text	00000058 altera_avalon_fifo_write_fifo
000668e8 g     F .text	000000a8 _Balloc
0006c2a0 g     F .text	000000dc .hidden __gtdf2
0006fe44 g     F .text	00000024 altera_nios2_gen2_irq_init
00060000 g     F .entry	0000000c __reset
0006e78c g     F .text	00000028 altera_avalon_fifo_read_backpressure
00060020 g       *ABS*	00000000 __flash_exceptions_start
00069d78 g     F .text	0000005c _fstat_r
0007403c g     O .bss	00000004 errno
00068020 g     F .text	00000008 __seofread
00000000 g       *ABS*	00000000 __alt_mem_sdram_controller
00074044 g     O .bss	00000004 alt_argv
0007a438 g       *ABS*	00000000 _gp
0006e47c g     F .text	00000060 altera_avalon_fifo_clear_event
00071258 g     O .rwdata	00000180 alt_fd_list
0006fe68 g     F .text	00000090 alt_find_dev
00060928 g     F .text	00000148 memcpy
00064cb0 g     F .text	0000000c _cleanup_r
0006d658 g     F .text	000000dc .hidden __floatsidf
0006f9a0 g     F .text	0000007c alt_io_redirect
0006c37c g     F .text	000000f4 .hidden __ltdf2
000704f4 g       *ABS*	00000000 __DTOR_END__
00060b9c g     F .text	00000014 puts
000700c4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00070950 g     O .rwdata	0000000c q2
00067f04 g     F .text	00000074 __fpclassifyd
00067784 g     F .text	000000a4 __ratio
00069804 g     F .text	0000001c __vfiprintf_internal
0006eddc g     F .text	0000021c altera_avalon_jtag_uart_read
00060a70 g     F .text	00000030 _printf_r
0006aee0 g     F .text	00000064 .hidden __udivsi3
0006dab0 g     F .text	000000ac isatty
000706b8 g     O .rodata	000000c8 __mprec_tens
00065b58 g     F .text	0000000c __locale_charset
00074038 g     O .bss	00000004 __malloc_top_pad
00060304 g     F .text	0000027c initialize_quantization_tables
00072440 g     O .rwdata	00000004 __mb_cur_max
00065b88 g     F .text	0000000c _localeconv_r
00066d1c g     F .text	0000003c __i2b
0006548c g     F .text	000004c8 __sfvwrite_r
00067f78 g     F .text	00000054 _sbrk_r
00074084 g     O .bss	00000080 Temp
00069e88 g     F .text	00000060 _read_r
00072460 g     O .rwdata	00000004 alt_max_fd
00069a6c g     F .text	000000f0 _fclose_r
00064c78 g     F .text	00000030 fflush
00074034 g     O .bss	00000004 __malloc_max_sbrked_mem
0006af9c g     F .text	000008ac .hidden __adddf3
0006752c g     F .text	0000010c __b2d
0006a824 g     F .text	000005c4 .hidden __umoddi3
0006dc84 g     F .text	000000dc lseek
00072438 g     O .rwdata	00000004 _global_impure_ptr
000679a0 g     F .text	00000564 _realloc_r
00074384 g       *ABS*	00000000 __bss_end
0006f7cc g     F .text	000000f0 alt_iic_isr_register
0006fd3c g     F .text	00000108 alt_tick
0006a228 g     F .text	000005fc .hidden __udivdi3
00069cd4 g     F .text	00000024 _fputwc_r
00070690 g     O .rodata	00000028 __mprec_bigtens
00066b00 g     F .text	00000104 __s2b
0006d734 g     F .text	000000a8 .hidden __floatunsidf
0006726c g     F .text	00000060 __mcmp
00065028 g     F .text	00000018 __fp_lock_all
0006f780 g     F .text	0000004c alt_ic_irq_enabled
0006fca0 g     F .text	0000009c alt_alarm_stop
0007404c g     O .bss	00000004 alt_irq_active
000600fc g     F .exceptions	000000d4 alt_irq_handler
00071230 g     O .rwdata	00000028 alt_dev_null
0006f43c g     F .text	00000020 alt_dcache_flush_all
00066c04 g     F .text	00000068 __hi0bits
00074104 g     O .bss	00000040 Lqt
0006d5d8 g     F .text	00000080 .hidden __fixdfsi
0006e4dc g     F .text	0000005c altera_avalon_fifo_write_ienable
00072478 g       *ABS*	00000000 __ram_rwdata_end
0006e3ec g     F .text	0000002c altera_avalon_fifo_read_almostempty
00072458 g     O .rwdata	00000008 alt_dev_list
0006e0d4 g     F .text	00000100 write
000708d4 g       *ABS*	00000000 __ram_rodata_end
0006d9bc g     F .text	000000b8 fstat
0006c37c g     F .text	000000f4 .hidden __ledf2
00074020 g     O .bss	00000004 INIT_USAGE_DEQ
0006076c g     F .text	0000003c RECV2
00066fe4 g     F .text	00000140 __pow5mult
000682f8 g     F .text	0000150c ___vfiprintf_internal_r
0007402c g     O .bss	00000004 __nlocale_changed
0006af44 g     F .text	00000058 .hidden __umodsi3
00074384 g       *ABS*	00000000 end
0006e918 g     F .text	000000c0 altera_avalon_jtag_uart_init
000601d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0006e418 g     F .text	0000003c altera_avalon_fifo_read_event
000704f4 g       *ABS*	00000000 __CTOR_LIST__
00080000 g       *ABS*	00000000 __alt_stack_pointer
0006f294 g     F .text	0000007c alt_avalon_timer_sc_init
0006d7dc g     F .text	00000064 .hidden __clzsi2
0006eff8 g     F .text	00000224 altera_avalon_jtag_uart_write
00065018 g     F .text	00000004 __sfp_lock_acquire
0006e6b4 g     F .text	0000004c altera_avalon_fifo_read_fifo
00066580 g     F .text	000000e4 memchr
00060c48 g     F .text	000022dc ___vfprintf_internal_r
0006517c g     F .text	00000310 _free_r
00065b64 g     F .text	00000010 __locale_mb_cur_max
00070340 g     F .text	00000180 __call_exitprocs
0006026c g     F .text	00000098 DSP_Division
00074028 g     O .bss	00000004 __mlocale_changed
00072444 g     O .rwdata	00000004 __malloc_sbrk_base
00060230 g     F .text	0000003c _start
00074050 g     O .bss	00000004 _alt_tick_rate
00067124 g     F .text	00000148 __lshift
000607f0 g     F .text	0000008c enqueueINT32
00074054 g     O .bss	00000004 _alt_nticks
0006de60 g     F .text	00000104 read
0006e240 g     F .text	00000070 alt_sys_init
00070228 g     F .text	00000118 __register_exitproc
0007092c g     O .rwdata	0000000c q1d
0007095c g     O .rwdata	0000000c q3
00066d58 g     F .text	0000028c __multiply
0006ec84 g     F .text	00000068 altera_avalon_jtag_uart_close
00060900 g     F .text	00000028 .hidden __mulsi3
000708d4 g       *ABS*	00000000 __ram_rwdata_start
000704f4 g       *ABS*	00000000 __ram_rodata_start
0007405c g     O .bss	00000028 __malloc_current_mallinfo
00067638 g     F .text	0000014c __d2b
00070944 g     O .rwdata	0000000c q1
0006e7b4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00070000 g     F .text	000000c4 alt_get_fd
0006993c g     F .text	00000054 _close_r
000701ac g     F .text	0000007c memcmp
0006e874 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00074384 g       *ABS*	00000000 __alt_stack_base
0006e8c4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00062ffc g     F .text	00000154 __swsetup_r
0006e348 g     F .text	0000003c altera_avalon_fifo_read_status
0006b848 g     F .text	000009d0 .hidden __divdf3
00064ed8 g     F .text	00000118 __sfp
0006789c g     F .text	00000078 __copybits
00070e28 g     O .rwdata	00000408 __malloc_av_
00065024 g     F .text	00000004 __sinit_lock_release
0006c470 g     F .text	0000086c .hidden __muldf3
00067fcc g     F .text	00000054 __sread
0006e760 g     F .text	0000002c altera_avalon_fifo_read_other_info
0006fef8 g     F .text	00000108 alt_find_file
0006f498 g     F .text	000000a4 alt_dev_llist_insert
0006dddc g     F .text	00000024 __malloc_lock
0006dfe8 g     F .text	000000b0 sbrk
00064c1c g     F .text	0000005c _fflush_r
00069990 g     F .text	000000dc _calloc_r
0007401c g       *ABS*	00000000 __bss_start
000667c0 g     F .text	00000128 memset
00060698 g     F .text	00000080 main
00074144 g     O .bss	00000080 ILqt
00074048 g     O .bss	00000004 alt_envp
00074030 g     O .bss	00000004 __malloc_max_total_mem
0006e814 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0006e454 g     F .text	00000028 altera_avalon_fifo_read_level
0006a028 g     F .text	00000018 __swbuf
00068100 g     F .text	00000008 __sclose
00080000 g       *ABS*	00000000 __alt_heap_limit
00069b5c g     F .text	00000014 fclose
00063378 g     F .text	00001688 _dtoa_r
00065d74 g     F .text	0000080c _malloc_r
0006a19c g     F .text	00000030 __ascii_wctomb
00060718 g     F .text	00000054 RECV1
00072464 g     O .rwdata	00000004 alt_errno
00070914 g     O .rwdata	0000000c q1b
00065954 g     F .text	000000c4 _fwalk
0006ade8 g     F .text	00000084 .hidden __divsi3
00065058 g     F .text	00000124 _malloc_trim_r
000704f4 g       *ABS*	00000000 __CTOR_END__
00068108 g     F .text	000000dc strcmp
000704f4 g       *ABS*	00000000 __flash_rodata_start
000704f4 g       *ABS*	00000000 __DTOR_LIST__
0006c218 g     F .text	00000088 .hidden __nedf2
0006e208 g     F .text	00000038 alt_irq_init
0006df64 g     F .text	00000084 alt_release_fd
000707a0 g     O .rodata	00000100 .hidden __clz_tab
00074024 g     O .bss	00000004 _PathLocale
00070160 g     F .text	00000014 atexit
000698dc g     F .text	00000060 _write_r
00070980 g     O .rwdata	0000000c q6
00065b94 g     F .text	00000018 setlocale
000607a8 g     F .text	00000048 SEND
0007401c g     O .bss	00000004 INIT_USAGE_ENQ
0007243c g     O .rwdata	00000004 _impure_ptr
00074040 g     O .bss	00000004 alt_argc
00064a00 g     F .text	0000021c __sflush_r
0006f59c g     F .text	00000060 _do_dtors
00065b80 g     F .text	00000008 __locale_cjk_lang
000741c4 g     O .bss	00000040 Cqt
000708d4 g     O .rwdata	00000040 zigzag_table
00060020 g       .exceptions	00000000 alt_irq_entry
000674c8 g     F .text	00000064 __ulp
00065040 g     F .text	00000018 __fp_unlock_all
00070938 g     O .rwdata	0000000c q1e
00072450 g     O .rwdata	00000008 alt_fs_list
00060020 g       *ABS*	00000000 __ram_exceptions_start
00065bac g     F .text	0000000c localeconv
0006e700 g     F .text	00000060 altera_avalon_fifo_write_other_info
0006f61c g     F .text	00000050 alt_ic_isr_register
00072478 g       *ABS*	00000000 _edata
00074384 g       *ABS*	00000000 _end
00069b70 g     F .text	00000164 __fputwc
00060230 g       *ABS*	00000000 __ram_exceptions_end
0006ecec g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0006f6f4 g     F .text	0000008c alt_ic_irq_disable
00068028 g     F .text	0000007c __swrite
00072448 g     O .rwdata	00000004 __malloc_trim_threshold
00065b74 g     F .text	0000000c __locale_msgcharset
00070174 g     F .text	00000038 exit
00065a18 g     F .text	000000c4 _fwalk_reent
000672cc g     F .text	000001fc __mdiff
0006ae6c g     F .text	00000074 .hidden __modsi3
0006e384 g     F .text	0000003c altera_avalon_fifo_read_ienable
00080000 g       *ABS*	00000000 __alt_data_end
00060020 g     F .exceptions	00000000 alt_exception
0006501c g     F .text	00000004 __sfp_lock_release
00074204 g     O .bss	00000080 ICqt
000704c0 g     F .text	00000034 _exit
0006f310 g     F .text	0000012c alt_alarm_start
0006e3c0 g     F .text	0000002c altera_avalon_fifo_read_almostfull
00065bb8 g     F .text	000001bc __smakebuf_r
00070968 g     O .rwdata	0000000c q4
00060bb0 g     F .text	00000098 strlen
0006fb44 g     F .text	0000015c open
0006e648 g     F .text	0000006c altera_avalon_read_fifo
0006c2a0 g     F .text	000000dc .hidden __gedf2
0006087c g     F .text	00000084 dequeueINT32
0007244c g     O .rwdata	00000004 __wctomb
000682e0 g     F .text	00000018 __sprint_r
0006f5fc g     F .text	00000020 alt_icache_flush_all
0007246c g     O .rwdata	00000004 alt_priority_mask
0006f66c g     F .text	00000088 alt_ic_irq_enable
00062f24 g     F .text	0000001c __vfprintf_internal
0006a1cc g     F .text	0000005c _wctomb_r
0006ccdc g     F .text	000008fc .hidden __subdf3
00066c6c g     F .text	000000b0 __lo0bits
0006e594 g     F .text	0000005c altera_avalon_fifo_write_almostempty
00072470 g     O .rwdata	00000008 alt_alarm_list
0006f53c g     F .text	00000060 _do_ctors
0006a0dc g     F .text	000000c0 wcrtomb
0006d87c g     F .text	000000d8 close
0006dbc4 g     F .text	00000084 alt_load
00069cf8 g     F .text	00000080 fputwc
00065020 g     F .text	00000004 __sinit_lock_acquire
000669b8 g     F .text	00000148 __multadd
00066990 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00060000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   60000:	004001b4 	movhi	at,6
    ori r1, r1, %lo(_start)
   60004:	08408c14 	ori	at,at,560
    jmp r1
   60008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00060020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   60020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   60024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   60028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   6002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   60030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   60034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   60038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   6003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   60040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   60044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   60048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   6004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   60050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   60054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   60058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   6005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   60060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   60064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   60068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   6006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   60070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   60074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   60078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   6007c:	10000326 	beq	r2,zero,6008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   60080:	20000226 	beq	r4,zero,6008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   60084:	00600fc0 	call	600fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   60088:	00000706 	br	600a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   6008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   60090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   60094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   60098:	00601d00 	call	601d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   6009c:	1000021e 	bne	r2,zero,600a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   600a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   600a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   600a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   600ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   600b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   600b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   600b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   600bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   600c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   600c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   600c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   600cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   600d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   600d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   600d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   600dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   600e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   600e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   600e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   600ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   600f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   600f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   600f8:	ef80083a 	eret

000600fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   600fc:	defff904 	addi	sp,sp,-28
   60100:	dfc00615 	stw	ra,24(sp)
   60104:	df000515 	stw	fp,20(sp)
   60108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   6010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   60110:	0005313a 	rdctl	r2,ipending
   60114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   60118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   6011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   60120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   60124:	00800044 	movi	r2,1
   60128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   6012c:	e0fffb17 	ldw	r3,-20(fp)
   60130:	e0bffc17 	ldw	r2,-16(fp)
   60134:	1884703a 	and	r2,r3,r2
   60138:	10001426 	beq	r2,zero,6018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   6013c:	008001f4 	movhi	r2,7
   60140:	1090a104 	addi	r2,r2,17028
   60144:	e0fffd17 	ldw	r3,-12(fp)
   60148:	180690fa 	slli	r3,r3,3
   6014c:	10c5883a 	add	r2,r2,r3
   60150:	10c00017 	ldw	r3,0(r2)
   60154:	008001f4 	movhi	r2,7
   60158:	1090a104 	addi	r2,r2,17028
   6015c:	e13ffd17 	ldw	r4,-12(fp)
   60160:	200890fa 	slli	r4,r4,3
   60164:	1105883a 	add	r2,r2,r4
   60168:	10800104 	addi	r2,r2,4
   6016c:	10800017 	ldw	r2,0(r2)
   60170:	1009883a 	mov	r4,r2
   60174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   60178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   6017c:	0005313a 	rdctl	r2,ipending
   60180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   60184:	e0bfff17 	ldw	r2,-4(fp)
   60188:	00000706 	br	601a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   6018c:	e0bffc17 	ldw	r2,-16(fp)
   60190:	1085883a 	add	r2,r2,r2
   60194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   60198:	e0bffd17 	ldw	r2,-12(fp)
   6019c:	10800044 	addi	r2,r2,1
   601a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   601a4:	003fe106 	br	6012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   601a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   601ac:	e0bffb17 	ldw	r2,-20(fp)
   601b0:	103fdb1e 	bne	r2,zero,60120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   601b4:	0001883a 	nop
}
   601b8:	0001883a 	nop
   601bc:	e037883a 	mov	sp,fp
   601c0:	dfc00117 	ldw	ra,4(sp)
   601c4:	df000017 	ldw	fp,0(sp)
   601c8:	dec00204 	addi	sp,sp,8
   601cc:	f800283a 	ret

000601d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   601d0:	defffb04 	addi	sp,sp,-20
   601d4:	dfc00415 	stw	ra,16(sp)
   601d8:	df000315 	stw	fp,12(sp)
   601dc:	df000304 	addi	fp,sp,12
   601e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   601e4:	00bfffc4 	movi	r2,-1
   601e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   601ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   601f0:	d0a70817 	ldw	r2,-25568(gp)
   601f4:	10000726 	beq	r2,zero,60214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   601f8:	d0a70817 	ldw	r2,-25568(gp)
   601fc:	e0fffd17 	ldw	r3,-12(fp)
   60200:	e1bffe17 	ldw	r6,-8(fp)
   60204:	e17fff17 	ldw	r5,-4(fp)
   60208:	1809883a 	mov	r4,r3
   6020c:	103ee83a 	callr	r2
   60210:	00000206 	br	6021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   60214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   60218:	0005883a 	mov	r2,zero
}
   6021c:	e037883a 	mov	sp,fp
   60220:	dfc00117 	ldw	ra,4(sp)
   60224:	df000017 	ldw	fp,0(sp)
   60228:	dec00204 	addi	sp,sp,8
   6022c:	f800283a 	ret

Disassembly of section .text:

00060230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   60230:	06c00234 	movhi	sp,8
    ori sp, sp, %lo(__alt_stack_pointer)
   60234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   60238:	068001f4 	movhi	gp,7
    ori gp, gp, %lo(_gp)
   6023c:	d6a90e14 	ori	gp,gp,42040
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   60240:	008001f4 	movhi	r2,7
    ori r2, r2, %lo(__bss_start)
   60244:	10900714 	ori	r2,r2,16412

    movhi r3, %hi(__bss_end)
   60248:	00c001f4 	movhi	r3,7
    ori r3, r3, %lo(__bss_end)
   6024c:	18d0e114 	ori	r3,r3,17284

    beq r2, r3, 1f
   60250:	10c00326 	beq	r2,r3,60260 <_start+0x30>

0:
    stw zero, (r2)
   60254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   60258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   6025c:	10fffd36 	bltu	r2,r3,60254 <__alt_data_end+0xfffe0254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   60260:	006dbc40 	call	6dbc4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   60264:	006dd600 	call	6dd60 <alt_main>

00060268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   60268:	003fff06 	br	60268 <__alt_data_end+0xfffe0268>

0006026c <DSP_Division>:
INT16 Temp[BLOCK_SIZE];

// TODO: This look okay as is
/*	This function implements 16 Step division for Q.15 format data */
UINT16 DSP_Division(UINT32 numer, UINT32 denom)
{
   6026c:	defffc04 	addi	sp,sp,-16
   60270:	df000315 	stw	fp,12(sp)
   60274:	df000304 	addi	fp,sp,12
   60278:	e13ffe15 	stw	r4,-8(fp)
   6027c:	e17fff15 	stw	r5,-4(fp)
	UINT16 i;

	denom <<= 15;
   60280:	e0bfff17 	ldw	r2,-4(fp)
   60284:	100493fa 	slli	r2,r2,15
   60288:	e0bfff15 	stw	r2,-4(fp)

	for (i = 16; i > 0; i--)
   6028c:	00800404 	movi	r2,16
   60290:	e0bffd0d 	sth	r2,-12(fp)
   60294:	00001406 	br	602e8 <DSP_Division+0x7c>
	{
		if (numer > denom)
   60298:	e0bffe17 	ldw	r2,-8(fp)
   6029c:	e0ffff17 	ldw	r3,-4(fp)
   602a0:	18800b2e 	bgeu	r3,r2,602d0 <DSP_Division+0x64>
		{
			numer -= denom;
   602a4:	e0fffe17 	ldw	r3,-8(fp)
   602a8:	e0bfff17 	ldw	r2,-4(fp)
   602ac:	1885c83a 	sub	r2,r3,r2
   602b0:	e0bffe15 	stw	r2,-8(fp)
			numer <<= 1;
   602b4:	e0bffe17 	ldw	r2,-8(fp)
   602b8:	1085883a 	add	r2,r2,r2
   602bc:	e0bffe15 	stw	r2,-8(fp)
			numer++;
   602c0:	e0bffe17 	ldw	r2,-8(fp)
   602c4:	10800044 	addi	r2,r2,1
   602c8:	e0bffe15 	stw	r2,-8(fp)
   602cc:	00000306 	br	602dc <DSP_Division+0x70>
		}
		else
			numer <<= 1;
   602d0:	e0bffe17 	ldw	r2,-8(fp)
   602d4:	1085883a 	add	r2,r2,r2
   602d8:	e0bffe15 	stw	r2,-8(fp)
{
	UINT16 i;

	denom <<= 15;

	for (i = 16; i > 0; i--)
   602dc:	e0bffd0b 	ldhu	r2,-12(fp)
   602e0:	10bfffc4 	addi	r2,r2,-1
   602e4:	e0bffd0d 	sth	r2,-12(fp)
   602e8:	e0bffd0b 	ldhu	r2,-12(fp)
   602ec:	103fea1e 	bne	r2,zero,60298 <__alt_data_end+0xfffe0298>
		}
		else
			numer <<= 1;
	}

	return (UINT16)numer;
   602f0:	e0bffe17 	ldw	r2,-8(fp)
}
   602f4:	e037883a 	mov	sp,fp
   602f8:	df000017 	ldw	fp,0(sp)
   602fc:	dec00104 	addi	sp,sp,4
   60300:	f800283a 	ret

00060304 <initialize_quantization_tables>:

// TODO: Gonna need some changes here.
/* Multiply Quantization table with quality factor to get LQT and CQT */
void initialize_quantization_tables(void)
{
   60304:	deffd904 	addi	sp,sp,-156
   60308:	dfc02615 	stw	ra,152(sp)
   6030c:	df002515 	stw	fp,148(sp)
   60310:	dc002415 	stw	r16,144(sp)
   60314:	df002504 	addi	fp,sp,148
	UINT16 i, index;
	UINT32 value;

	UINT8 luminance_quant_table[] =
   60318:	008001f4 	movhi	r2,7
   6031c:	10813d04 	addi	r2,r2,1268
   60320:	e0ffde84 	addi	r3,fp,-134
   60324:	1009883a 	mov	r4,r2
   60328:	00801004 	movi	r2,64
   6032c:	100d883a 	mov	r6,r2
   60330:	200b883a 	mov	r5,r4
   60334:	1809883a 	mov	r4,r3
   60338:	00609280 	call	60928 <memcpy>
			18, 22, 37, 56, 68, 109, 103, 77,
			24, 35, 55, 64, 81, 104, 113, 92,
			49, 64, 78, 87, 103, 121, 120, 101,
			72, 92, 95, 98, 112, 100, 103, 99};

	UINT8 chrominance_quant_table[] =
   6033c:	008001f4 	movhi	r2,7
   60340:	10814d04 	addi	r2,r2,1332
   60344:	e0ffee84 	addi	r3,fp,-70
   60348:	1009883a 	mov	r4,r2
   6034c:	00801004 	movi	r2,64
   60350:	100d883a 	mov	r6,r2
   60354:	200b883a 	mov	r5,r4
   60358:	1809883a 	mov	r4,r3
   6035c:	00609280 	call	60928 <memcpy>
			99, 99, 99, 99, 99, 99, 99, 99,
			99, 99, 99, 99, 99, 99, 99, 99};

	// TODO: This line checks out! here we are referring to q4.txt
	// TODO: Before this RECV call main func also does call RECV1 for getting count
	UINT32 quality_factor = (UINT32)RECV1();
   60360:	00607180 	call	60718 <RECV1>
   60364:	e0bfdd15 	stw	r2,-140(fp)

	for (i = 0; i < 64; i++)
   60368:	e03fdb0d 	sth	zero,-148(fp)
   6036c:	00005a06 	br	604d8 <initialize_quantization_tables+0x1d4>
	{
		index = zigzag_table[i];
   60370:	e0ffdb0b 	ldhu	r3,-148(fp)
   60374:	008001f4 	movhi	r2,7
   60378:	10823504 	addi	r2,r2,2260
   6037c:	10c5883a 	add	r2,r2,r3
   60380:	10800003 	ldbu	r2,0(r2)
   60384:	10803fcc 	andi	r2,r2,255
   60388:	e0bfde0d 	sth	r2,-136(fp)

		/* luminance quantization table * quality factor */
		value = luminance_quant_table[i] * quality_factor;
   6038c:	e0bfdb0b 	ldhu	r2,-148(fp)
   60390:	e0ffde84 	addi	r3,fp,-134
   60394:	1885883a 	add	r2,r3,r2
   60398:	10800003 	ldbu	r2,0(r2)
   6039c:	10803fcc 	andi	r2,r2,255
   603a0:	e17fdd17 	ldw	r5,-140(fp)
   603a4:	1009883a 	mov	r4,r2
   603a8:	00609000 	call	60900 <__mulsi3>
   603ac:	e0bfdc15 	stw	r2,-144(fp)
		value = (value + 0x200) >> 10;
   603b0:	e0bfdc17 	ldw	r2,-144(fp)
   603b4:	10808004 	addi	r2,r2,512
   603b8:	1004d2ba 	srli	r2,r2,10
   603bc:	e0bfdc15 	stw	r2,-144(fp)

		if (value == 0)
   603c0:	e0bfdc17 	ldw	r2,-144(fp)
   603c4:	1000031e 	bne	r2,zero,603d4 <initialize_quantization_tables+0xd0>
			value = 1;
   603c8:	00800044 	movi	r2,1
   603cc:	e0bfdc15 	stw	r2,-144(fp)
   603d0:	00000506 	br	603e8 <initialize_quantization_tables+0xe4>
		else if (value > 255)
   603d4:	e0bfdc17 	ldw	r2,-144(fp)
   603d8:	10804030 	cmpltui	r2,r2,256
   603dc:	1000021e 	bne	r2,zero,603e8 <initialize_quantization_tables+0xe4>
			value = 255;
   603e0:	00803fc4 	movi	r2,255
   603e4:	e0bfdc15 	stw	r2,-144(fp)

		Lqt[index] = (UINT8)value;
   603e8:	e0ffde0b 	ldhu	r3,-136(fp)
   603ec:	e0bfdc17 	ldw	r2,-144(fp)
   603f0:	1009883a 	mov	r4,r2
   603f4:	008001f4 	movhi	r2,7
   603f8:	10904104 	addi	r2,r2,16644
   603fc:	10c5883a 	add	r2,r2,r3
   60400:	11000005 	stb	r4,0(r2)
		ILqt[i] = DSP_Division(0x8000, value);
   60404:	e43fdb0b 	ldhu	r16,-148(fp)
   60408:	e17fdc17 	ldw	r5,-144(fp)
   6040c:	01200014 	movui	r4,32768
   60410:	006026c0 	call	6026c <DSP_Division>
   60414:	1009883a 	mov	r4,r2
   60418:	008001f4 	movhi	r2,7
   6041c:	10905104 	addi	r2,r2,16708
   60420:	8407883a 	add	r3,r16,r16
   60424:	10c5883a 	add	r2,r2,r3
   60428:	1100000d 	sth	r4,0(r2)

		/* chrominance quantization table * quality factor */
		value = chrominance_quant_table[i] * quality_factor;
   6042c:	e0bfdb0b 	ldhu	r2,-148(fp)
   60430:	e0ffee84 	addi	r3,fp,-70
   60434:	1885883a 	add	r2,r3,r2
   60438:	10800003 	ldbu	r2,0(r2)
   6043c:	10803fcc 	andi	r2,r2,255
   60440:	e17fdd17 	ldw	r5,-140(fp)
   60444:	1009883a 	mov	r4,r2
   60448:	00609000 	call	60900 <__mulsi3>
   6044c:	e0bfdc15 	stw	r2,-144(fp)
		value = (value + 0x200) >> 10;
   60450:	e0bfdc17 	ldw	r2,-144(fp)
   60454:	10808004 	addi	r2,r2,512
   60458:	1004d2ba 	srli	r2,r2,10
   6045c:	e0bfdc15 	stw	r2,-144(fp)

		if (value == 0)
   60460:	e0bfdc17 	ldw	r2,-144(fp)
   60464:	1000031e 	bne	r2,zero,60474 <initialize_quantization_tables+0x170>
			value = 1;
   60468:	00800044 	movi	r2,1
   6046c:	e0bfdc15 	stw	r2,-144(fp)
   60470:	00000506 	br	60488 <initialize_quantization_tables+0x184>
		else if (value > 255)
   60474:	e0bfdc17 	ldw	r2,-144(fp)
   60478:	10804030 	cmpltui	r2,r2,256
   6047c:	1000021e 	bne	r2,zero,60488 <initialize_quantization_tables+0x184>
			value = 255;
   60480:	00803fc4 	movi	r2,255
   60484:	e0bfdc15 	stw	r2,-144(fp)

		Cqt[index] = (UINT8)value;
   60488:	e0ffde0b 	ldhu	r3,-136(fp)
   6048c:	e0bfdc17 	ldw	r2,-144(fp)
   60490:	1009883a 	mov	r4,r2
   60494:	008001f4 	movhi	r2,7
   60498:	10907104 	addi	r2,r2,16836
   6049c:	10c5883a 	add	r2,r2,r3
   604a0:	11000005 	stb	r4,0(r2)
		ICqt[i] = DSP_Division(0x8000, value);
   604a4:	e43fdb0b 	ldhu	r16,-148(fp)
   604a8:	e17fdc17 	ldw	r5,-144(fp)
   604ac:	01200014 	movui	r4,32768
   604b0:	006026c0 	call	6026c <DSP_Division>
   604b4:	1009883a 	mov	r4,r2
   604b8:	008001f4 	movhi	r2,7
   604bc:	10908104 	addi	r2,r2,16900
   604c0:	8407883a 	add	r3,r16,r16
   604c4:	10c5883a 	add	r2,r2,r3
   604c8:	1100000d 	sth	r4,0(r2)

	// TODO: This line checks out! here we are referring to q4.txt
	// TODO: Before this RECV call main func also does call RECV1 for getting count
	UINT32 quality_factor = (UINT32)RECV1();

	for (i = 0; i < 64; i++)
   604cc:	e0bfdb0b 	ldhu	r2,-148(fp)
   604d0:	10800044 	addi	r2,r2,1
   604d4:	e0bfdb0d 	sth	r2,-148(fp)
   604d8:	e0bfdb0b 	ldhu	r2,-148(fp)
   604dc:	10801030 	cmpltui	r2,r2,64
   604e0:	103fa31e 	bne	r2,zero,60370 <__alt_data_end+0xfffe0370>
			value = 255;

		Cqt[index] = (UINT8)value;
		ICqt[i] = DSP_Division(0x8000, value);
	}
	for (i = 0; i < 64; i++)
   604e4:	e03fdb0d 	sth	zero,-148(fp)
   604e8:	00000b06 	br	60518 <initialize_quantization_tables+0x214>
	{
		SEND(Lqt[i]);
   604ec:	e0ffdb0b 	ldhu	r3,-148(fp)
   604f0:	008001f4 	movhi	r2,7
   604f4:	10904104 	addi	r2,r2,16644
   604f8:	10c5883a 	add	r2,r2,r3
   604fc:	10800003 	ldbu	r2,0(r2)
   60500:	10803fcc 	andi	r2,r2,255
   60504:	1009883a 	mov	r4,r2
   60508:	00607a80 	call	607a8 <SEND>
			value = 255;

		Cqt[index] = (UINT8)value;
		ICqt[i] = DSP_Division(0x8000, value);
	}
	for (i = 0; i < 64; i++)
   6050c:	e0bfdb0b 	ldhu	r2,-148(fp)
   60510:	10800044 	addi	r2,r2,1
   60514:	e0bfdb0d 	sth	r2,-148(fp)
   60518:	e0bfdb0b 	ldhu	r2,-148(fp)
   6051c:	10801030 	cmpltui	r2,r2,64
   60520:	103ff21e 	bne	r2,zero,604ec <__alt_data_end+0xfffe04ec>
	{
		SEND(Lqt[i]);
	}
	for (i = 0; i < 64; i++)
   60524:	e03fdb0d 	sth	zero,-148(fp)
   60528:	00000b06 	br	60558 <initialize_quantization_tables+0x254>
	{
		SEND(Cqt[i]);
   6052c:	e0ffdb0b 	ldhu	r3,-148(fp)
   60530:	008001f4 	movhi	r2,7
   60534:	10907104 	addi	r2,r2,16836
   60538:	10c5883a 	add	r2,r2,r3
   6053c:	10800003 	ldbu	r2,0(r2)
   60540:	10803fcc 	andi	r2,r2,255
   60544:	1009883a 	mov	r4,r2
   60548:	00607a80 	call	607a8 <SEND>
	}
	for (i = 0; i < 64; i++)
	{
		SEND(Lqt[i]);
	}
	for (i = 0; i < 64; i++)
   6054c:	e0bfdb0b 	ldhu	r2,-148(fp)
   60550:	10800044 	addi	r2,r2,1
   60554:	e0bfdb0d 	sth	r2,-148(fp)
   60558:	e0bfdb0b 	ldhu	r2,-148(fp)
   6055c:	10801030 	cmpltui	r2,r2,64
   60560:	103ff21e 	bne	r2,zero,6052c <__alt_data_end+0xfffe052c>
	{
		SEND(Cqt[i]);
	}
}
   60564:	0001883a 	nop
   60568:	e6ffff04 	addi	sp,fp,-4
   6056c:	dfc00217 	ldw	ra,8(sp)
   60570:	df000117 	ldw	fp,4(sp)
   60574:	dc000017 	ldw	r16,0(sp)
   60578:	dec00304 	addi	sp,sp,12
   6057c:	f800283a 	ret

00060580 <quantization>:

// TODO: Gonna need some changes here.
/* multiply DCT Coefficients with Quantization table and store in ZigZag location */
void quantization(UINT16 *const quant_table_ptr)
{
   60580:	defffb04 	addi	sp,sp,-20
   60584:	dfc00415 	stw	ra,16(sp)
   60588:	df000315 	stw	fp,12(sp)
   6058c:	df000304 	addi	fp,sp,12
   60590:	e13fff15 	stw	r4,-4(fp)
	INT16 i;
	INT32 value;

	for (i = 0; i <= 63; i++)
   60594:	e03ffd0d 	sth	zero,-12(fp)
   60598:	00002306 	br	60628 <quantization+0xa8>
	{
		// TODO: This RECV2 call should be from the previous stage in pipeline
		value = (INT16)RECV2() * quant_table_ptr[i];
   6059c:	006076c0 	call	6076c <RECV2>
   605a0:	10ffffcc 	andi	r3,r2,65535
   605a4:	18e0001c 	xori	r3,r3,32768
   605a8:	18e00004 	addi	r3,r3,-32768
   605ac:	e0bffd0f 	ldh	r2,-12(fp)
   605b0:	1085883a 	add	r2,r2,r2
   605b4:	1009883a 	mov	r4,r2
   605b8:	e0bfff17 	ldw	r2,-4(fp)
   605bc:	1105883a 	add	r2,r2,r4
   605c0:	1080000b 	ldhu	r2,0(r2)
   605c4:	10bfffcc 	andi	r2,r2,65535
   605c8:	100b883a 	mov	r5,r2
   605cc:	1809883a 	mov	r4,r3
   605d0:	00609000 	call	60900 <__mulsi3>
   605d4:	e0bffe15 	stw	r2,-8(fp)

		value = (value + 0x4000) >> 15;
   605d8:	e0bffe17 	ldw	r2,-8(fp)
   605dc:	10900004 	addi	r2,r2,16384
   605e0:	1005d3fa 	srai	r2,r2,15
   605e4:	e0bffe15 	stw	r2,-8(fp)

		Temp[zigzag_table[i]] = (INT16)value;
   605e8:	e0fffd0f 	ldh	r3,-12(fp)
   605ec:	008001f4 	movhi	r2,7
   605f0:	10823504 	addi	r2,r2,2260
   605f4:	10c5883a 	add	r2,r2,r3
   605f8:	10800003 	ldbu	r2,0(r2)
   605fc:	10c03fcc 	andi	r3,r2,255
   60600:	e0bffe17 	ldw	r2,-8(fp)
   60604:	1009883a 	mov	r4,r2
   60608:	008001f4 	movhi	r2,7
   6060c:	10902104 	addi	r2,r2,16516
   60610:	18c7883a 	add	r3,r3,r3
   60614:	10c5883a 	add	r2,r2,r3
   60618:	1100000d 	sth	r4,0(r2)
void quantization(UINT16 *const quant_table_ptr)
{
	INT16 i;
	INT32 value;

	for (i = 0; i <= 63; i++)
   6061c:	e0bffd0b 	ldhu	r2,-12(fp)
   60620:	10800044 	addi	r2,r2,1
   60624:	e0bffd0d 	sth	r2,-12(fp)
   60628:	e0bffd0f 	ldh	r2,-12(fp)
   6062c:	10801010 	cmplti	r2,r2,64
   60630:	103fda1e 	bne	r2,zero,6059c <__alt_data_end+0xfffe059c>

		value = (value + 0x4000) >> 15;

		Temp[zigzag_table[i]] = (INT16)value;
	}
	for (i = 0; i <= 63; i++)
   60634:	e03ffd0d 	sth	zero,-12(fp)
   60638:	00000e06 	br	60674 <quantization+0xf4>
	{
		SEND(Temp[i]);
   6063c:	e0fffd0f 	ldh	r3,-12(fp)
   60640:	008001f4 	movhi	r2,7
   60644:	10902104 	addi	r2,r2,16516
   60648:	18c7883a 	add	r3,r3,r3
   6064c:	10c5883a 	add	r2,r2,r3
   60650:	1080000b 	ldhu	r2,0(r2)
   60654:	10bfffcc 	andi	r2,r2,65535
   60658:	10a0001c 	xori	r2,r2,32768
   6065c:	10a00004 	addi	r2,r2,-32768
   60660:	1009883a 	mov	r4,r2
   60664:	00607a80 	call	607a8 <SEND>

		value = (value + 0x4000) >> 15;

		Temp[zigzag_table[i]] = (INT16)value;
	}
	for (i = 0; i <= 63; i++)
   60668:	e0bffd0b 	ldhu	r2,-12(fp)
   6066c:	10800044 	addi	r2,r2,1
   60670:	e0bffd0d 	sth	r2,-12(fp)
   60674:	e0bffd0f 	ldh	r2,-12(fp)
   60678:	10801010 	cmplti	r2,r2,64
   6067c:	103fef1e 	bne	r2,zero,6063c <__alt_data_end+0xfffe063c>
	{
		SEND(Temp[i]);
	}
}
   60680:	0001883a 	nop
   60684:	e037883a 	mov	sp,fp
   60688:	dfc00117 	ldw	ra,4(sp)
   6068c:	df000017 	ldw	fp,0(sp)
   60690:	dec00204 	addi	sp,sp,8
   60694:	f800283a 	ret

00060698 <main>:

int main(void)
{
   60698:	defffd04 	addi	sp,sp,-12
   6069c:	dfc00215 	stw	ra,8(sp)
   606a0:	df000115 	stw	fp,4(sp)
   606a4:	df000104 	addi	fp,sp,4
	

	while (1)
	{
		// TODO: Here we are receiving count from q4.txt
		UINT32 count = (UINT32)RECV1();
   606a8:	00607180 	call	60718 <RECV1>
   606ac:	e0bfff15 	stw	r2,-4(fp)
		initialize_quantization_tables();
   606b0:	00603040 	call	60304 <initialize_quantization_tables>

		for (; count > 0; count--)
   606b4:	00000c06 	br	606e8 <main+0x50>
		{
			quantization(ILqt);
   606b8:	010001f4 	movhi	r4,7
   606bc:	21105104 	addi	r4,r4,16708
   606c0:	00605800 	call	60580 <quantization>
			quantization(ICqt);
   606c4:	010001f4 	movhi	r4,7
   606c8:	21108104 	addi	r4,r4,16900
   606cc:	00605800 	call	60580 <quantization>
			quantization(ICqt);
   606d0:	010001f4 	movhi	r4,7
   606d4:	21108104 	addi	r4,r4,16900
   606d8:	00605800 	call	60580 <quantization>
	{
		// TODO: Here we are receiving count from q4.txt
		UINT32 count = (UINT32)RECV1();
		initialize_quantization_tables();

		for (; count > 0; count--)
   606dc:	e0bfff17 	ldw	r2,-4(fp)
   606e0:	10bfffc4 	addi	r2,r2,-1
   606e4:	e0bfff15 	stw	r2,-4(fp)
   606e8:	e0bfff17 	ldw	r2,-4(fp)
   606ec:	103ff21e 	bne	r2,zero,606b8 <__alt_data_end+0xfffe06b8>
		{
			quantization(ILqt);
			quantization(ICqt);
			quantization(ICqt);
		}
		break;
   606f0:	0001883a 	nop
	}

	// TODO: Close the queues


	printf("\n Done ! \n");
   606f4:	010001f4 	movhi	r4,7
   606f8:	21015d04 	addi	r4,r4,1396
   606fc:	0060b9c0 	call	60b9c <puts>
   60700:	0005883a 	mov	r2,zero
}
   60704:	e037883a 	mov	sp,fp
   60708:	dfc00117 	ldw	ra,4(sp)
   6070c:	df000017 	ldw	fp,0(sp)
   60710:	dec00204 	addi	sp,sp,8
   60714:	f800283a 	ret

00060718 <RECV1>:
#include <stdlib.h>

#include "../lib/q_mem_obj_def.h"

int RECV1()
{
   60718:	defffd04 	addi	sp,sp,-12
   6071c:	dfc00215 	stw	ra,8(sp)
   60720:	df000115 	stw	fp,4(sp)
   60724:	df000104 	addi	fp,sp,4
    // dequeue from queue and convert to int
    // return atoi(dequeue(q4r));
	int temp = dequeueINT32(q4);
   60728:	008001f4 	movhi	r2,7
   6072c:	10825a04 	addi	r2,r2,2408
   60730:	11000017 	ldw	r4,0(r2)
   60734:	11400117 	ldw	r5,4(r2)
   60738:	11800217 	ldw	r6,8(r2)
   6073c:	006087c0 	call	6087c <dequeueINT32>
   60740:	e0bfff15 	stw	r2,-4(fp)
	printf("Got %d from q4.\n",temp);
   60744:	e17fff17 	ldw	r5,-4(fp)
   60748:	010001f4 	movhi	r4,7
   6074c:	21016004 	addi	r4,r4,1408
   60750:	0060aa00 	call	60aa0 <printf>
	return temp;
   60754:	e0bfff17 	ldw	r2,-4(fp)
//    return dequeueINT32(q4);
}
   60758:	e037883a 	mov	sp,fp
   6075c:	dfc00117 	ldw	ra,4(sp)
   60760:	df000017 	ldw	fp,0(sp)
   60764:	dec00204 	addi	sp,sp,8
   60768:	f800283a 	ret

0006076c <RECV2>:

int RECV2()
{
   6076c:	defffe04 	addi	sp,sp,-8
   60770:	dfc00115 	stw	ra,4(sp)
   60774:	df000015 	stw	fp,0(sp)
   60778:	d839883a 	mov	fp,sp
    // dequeue from queue and convert to int
    // return atoi(dequeue(qi1c));
    return dequeueINT32(q1c);
   6077c:	008001f4 	movhi	r2,7
   60780:	10824804 	addi	r2,r2,2336
   60784:	11000017 	ldw	r4,0(r2)
   60788:	11400117 	ldw	r5,4(r2)
   6078c:	11800217 	ldw	r6,8(r2)
   60790:	006087c0 	call	6087c <dequeueINT32>
}
   60794:	e037883a 	mov	sp,fp
   60798:	dfc00117 	ldw	ra,4(sp)
   6079c:	df000017 	ldw	fp,0(sp)
   607a0:	dec00204 	addi	sp,sp,8
   607a4:	f800283a 	ret

000607a8 <SEND>:

void SEND(int data)
{
   607a8:	defffd04 	addi	sp,sp,-12
   607ac:	dfc00215 	stw	ra,8(sp)
   607b0:	df000115 	stw	fp,4(sp)
   607b4:	df000104 	addi	fp,sp,4
   607b8:	e13fff15 	stw	r4,-4(fp)
    // enqueue data to queue
    // char str[10];
    // sprintf(str, "%d", data);
    // enqueueINT32(qo1d, str);
//	printf("%d\n",data);
    enqueueINT32(q1d, data);
   607bc:	008001f4 	movhi	r2,7
   607c0:	10824b04 	addi	r2,r2,2348
   607c4:	e1ffff17 	ldw	r7,-4(fp)
   607c8:	11000017 	ldw	r4,0(r2)
   607cc:	11400117 	ldw	r5,4(r2)
   607d0:	11800217 	ldw	r6,8(r2)
   607d4:	00607f00 	call	607f0 <enqueueINT32>
}
   607d8:	0001883a 	nop
   607dc:	e037883a 	mov	sp,fp
   607e0:	dfc00117 	ldw	ra,4(sp)
   607e4:	df000017 	ldw	fp,0(sp)
   607e8:	dec00204 	addi	sp,sp,8
   607ec:	f800283a 	ret

000607f0 <enqueueINT32>:

int INIT_USAGE_ENQ = 0;
int INIT_USAGE_DEQ = 0;

int enqueueINT32(Queue queue, int data)
{
   607f0:	defffa04 	addi	sp,sp,-24
   607f4:	dfc00515 	stw	ra,20(sp)
   607f8:	df000415 	stw	fp,16(sp)
   607fc:	df000404 	addi	fp,sp,16
   60800:	e13ffc15 	stw	r4,-16(fp)
   60804:	e17ffd15 	stw	r5,-12(fp)
   60808:	e1bffe15 	stw	r6,-8(fp)
   6080c:	e1ffff15 	stw	r7,-4(fp)

    // Wait if the fifo is full
	while (altera_avalon_fifo_read_status(queue.ctrl_base,1<<0) != 0)
   60810:	0001883a 	nop
   60814:	e0bffe17 	ldw	r2,-8(fp)
   60818:	01400044 	movi	r5,1
   6081c:	1009883a 	mov	r4,r2
   60820:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   60824:	103ffb1e 	bne	r2,zero,60814 <__alt_data_end+0xfffe0814>
	{}

    if (INIT_USAGE_ENQ == 0){
   60828:	d0a6f917 	ldw	r2,-25628(gp)
   6082c:	1000051e 	bne	r2,zero,60844 <enqueueINT32+0x54>
        INIT_USAGE_ENQ = 1;
   60830:	00800044 	movi	r2,1
   60834:	d0a6f915 	stw	r2,-25628(gp)
        printf("First time using enqueueINT32\n");
   60838:	010001f4 	movhi	r4,7
   6083c:	21016504 	addi	r4,r4,1428
   60840:	0060b9c0 	call	60b9c <puts>
    }

	// Write the data to FIFO
	return altera_avalon_fifo_write_fifo(queue.mem_base_in,queue.ctrl_base,(int)data);
   60844:	e0bffc17 	ldw	r2,-16(fp)
   60848:	1007883a 	mov	r3,r2
   6084c:	e0bffe17 	ldw	r2,-8(fp)
   60850:	1009883a 	mov	r4,r2
   60854:	e0bfff17 	ldw	r2,-4(fp)
   60858:	100d883a 	mov	r6,r2
   6085c:	200b883a 	mov	r5,r4
   60860:	1809883a 	mov	r4,r3
   60864:	006e5f00 	call	6e5f0 <altera_avalon_fifo_write_fifo>
}
   60868:	e037883a 	mov	sp,fp
   6086c:	dfc00117 	ldw	ra,4(sp)
   60870:	df000017 	ldw	fp,0(sp)
   60874:	dec00204 	addi	sp,sp,8
   60878:	f800283a 	ret

0006087c <dequeueINT32>:


int dequeueINT32(Queue queue)
{
   6087c:	defffa04 	addi	sp,sp,-24
   60880:	dfc00515 	stw	ra,20(sp)
   60884:	df000415 	stw	fp,16(sp)
   60888:	df000404 	addi	fp,sp,16
   6088c:	e13ffd15 	stw	r4,-12(fp)
   60890:	e17ffe15 	stw	r5,-8(fp)
   60894:	e1bfff15 	stw	r6,-4(fp)

	// Wait if the fifo is empty
	while (altera_avalon_fifo_read_status(queue.ctrl_base,1<<1) != 0)
   60898:	0001883a 	nop
   6089c:	e0bfff17 	ldw	r2,-4(fp)
   608a0:	01400084 	movi	r5,2
   608a4:	1009883a 	mov	r4,r2
   608a8:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   608ac:	103ffb1e 	bne	r2,zero,6089c <__alt_data_end+0xfffe089c>
	{}

    if (INIT_USAGE_DEQ == 0){
   608b0:	d0a6fa17 	ldw	r2,-25624(gp)
   608b4:	1000051e 	bne	r2,zero,608cc <dequeueINT32+0x50>
        INIT_USAGE_DEQ = 1;
   608b8:	00800044 	movi	r2,1
   608bc:	d0a6fa15 	stw	r2,-25624(gp)
        printf("First time using dequeueINT32\n");
   608c0:	010001f4 	movhi	r4,7
   608c4:	21016d04 	addi	r4,r4,1460
   608c8:	0060b9c0 	call	60b9c <puts>
    }

	// Read the data
	int data = altera_avalon_fifo_read_fifo(queue.mem_base_out,queue.ctrl_base);
   608cc:	e0bffe17 	ldw	r2,-8(fp)
   608d0:	1007883a 	mov	r3,r2
   608d4:	e0bfff17 	ldw	r2,-4(fp)
   608d8:	100b883a 	mov	r5,r2
   608dc:	1809883a 	mov	r4,r3
   608e0:	006e6b40 	call	6e6b4 <altera_avalon_fifo_read_fifo>
   608e4:	e0bffc15 	stw	r2,-16(fp)

	return data;
   608e8:	e0bffc17 	ldw	r2,-16(fp)
}
   608ec:	e037883a 	mov	sp,fp
   608f0:	dfc00117 	ldw	ra,4(sp)
   608f4:	df000017 	ldw	fp,0(sp)
   608f8:	dec00204 	addi	sp,sp,8
   608fc:	f800283a 	ret

00060900 <__mulsi3>:
   60900:	0005883a 	mov	r2,zero
   60904:	20000726 	beq	r4,zero,60924 <__mulsi3+0x24>
   60908:	20c0004c 	andi	r3,r4,1
   6090c:	2008d07a 	srli	r4,r4,1
   60910:	18000126 	beq	r3,zero,60918 <__mulsi3+0x18>
   60914:	1145883a 	add	r2,r2,r5
   60918:	294b883a 	add	r5,r5,r5
   6091c:	203ffa1e 	bne	r4,zero,60908 <__alt_data_end+0xfffe0908>
   60920:	f800283a 	ret
   60924:	f800283a 	ret

00060928 <memcpy>:
   60928:	defffd04 	addi	sp,sp,-12
   6092c:	dfc00215 	stw	ra,8(sp)
   60930:	dc400115 	stw	r17,4(sp)
   60934:	dc000015 	stw	r16,0(sp)
   60938:	00c003c4 	movi	r3,15
   6093c:	2005883a 	mov	r2,r4
   60940:	1980452e 	bgeu	r3,r6,60a58 <memcpy+0x130>
   60944:	2906b03a 	or	r3,r5,r4
   60948:	18c000cc 	andi	r3,r3,3
   6094c:	1800441e 	bne	r3,zero,60a60 <memcpy+0x138>
   60950:	347ffc04 	addi	r17,r6,-16
   60954:	8822d13a 	srli	r17,r17,4
   60958:	28c00104 	addi	r3,r5,4
   6095c:	23400104 	addi	r13,r4,4
   60960:	8820913a 	slli	r16,r17,4
   60964:	2b000204 	addi	r12,r5,8
   60968:	22c00204 	addi	r11,r4,8
   6096c:	84000504 	addi	r16,r16,20
   60970:	2a800304 	addi	r10,r5,12
   60974:	22400304 	addi	r9,r4,12
   60978:	2c21883a 	add	r16,r5,r16
   6097c:	2811883a 	mov	r8,r5
   60980:	200f883a 	mov	r7,r4
   60984:	41000017 	ldw	r4,0(r8)
   60988:	1fc00017 	ldw	ra,0(r3)
   6098c:	63c00017 	ldw	r15,0(r12)
   60990:	39000015 	stw	r4,0(r7)
   60994:	53800017 	ldw	r14,0(r10)
   60998:	6fc00015 	stw	ra,0(r13)
   6099c:	5bc00015 	stw	r15,0(r11)
   609a0:	4b800015 	stw	r14,0(r9)
   609a4:	18c00404 	addi	r3,r3,16
   609a8:	39c00404 	addi	r7,r7,16
   609ac:	42000404 	addi	r8,r8,16
   609b0:	6b400404 	addi	r13,r13,16
   609b4:	63000404 	addi	r12,r12,16
   609b8:	5ac00404 	addi	r11,r11,16
   609bc:	52800404 	addi	r10,r10,16
   609c0:	4a400404 	addi	r9,r9,16
   609c4:	1c3fef1e 	bne	r3,r16,60984 <__alt_data_end+0xfffe0984>
   609c8:	89c00044 	addi	r7,r17,1
   609cc:	380e913a 	slli	r7,r7,4
   609d0:	310003cc 	andi	r4,r6,15
   609d4:	02c000c4 	movi	r11,3
   609d8:	11c7883a 	add	r3,r2,r7
   609dc:	29cb883a 	add	r5,r5,r7
   609e0:	5900212e 	bgeu	r11,r4,60a68 <memcpy+0x140>
   609e4:	1813883a 	mov	r9,r3
   609e8:	2811883a 	mov	r8,r5
   609ec:	200f883a 	mov	r7,r4
   609f0:	42800017 	ldw	r10,0(r8)
   609f4:	4a400104 	addi	r9,r9,4
   609f8:	39ffff04 	addi	r7,r7,-4
   609fc:	4abfff15 	stw	r10,-4(r9)
   60a00:	42000104 	addi	r8,r8,4
   60a04:	59fffa36 	bltu	r11,r7,609f0 <__alt_data_end+0xfffe09f0>
   60a08:	213fff04 	addi	r4,r4,-4
   60a0c:	2008d0ba 	srli	r4,r4,2
   60a10:	318000cc 	andi	r6,r6,3
   60a14:	21000044 	addi	r4,r4,1
   60a18:	2109883a 	add	r4,r4,r4
   60a1c:	2109883a 	add	r4,r4,r4
   60a20:	1907883a 	add	r3,r3,r4
   60a24:	290b883a 	add	r5,r5,r4
   60a28:	30000626 	beq	r6,zero,60a44 <memcpy+0x11c>
   60a2c:	198d883a 	add	r6,r3,r6
   60a30:	29c00003 	ldbu	r7,0(r5)
   60a34:	18c00044 	addi	r3,r3,1
   60a38:	29400044 	addi	r5,r5,1
   60a3c:	19ffffc5 	stb	r7,-1(r3)
   60a40:	19bffb1e 	bne	r3,r6,60a30 <__alt_data_end+0xfffe0a30>
   60a44:	dfc00217 	ldw	ra,8(sp)
   60a48:	dc400117 	ldw	r17,4(sp)
   60a4c:	dc000017 	ldw	r16,0(sp)
   60a50:	dec00304 	addi	sp,sp,12
   60a54:	f800283a 	ret
   60a58:	2007883a 	mov	r3,r4
   60a5c:	003ff206 	br	60a28 <__alt_data_end+0xfffe0a28>
   60a60:	2007883a 	mov	r3,r4
   60a64:	003ff106 	br	60a2c <__alt_data_end+0xfffe0a2c>
   60a68:	200d883a 	mov	r6,r4
   60a6c:	003fee06 	br	60a28 <__alt_data_end+0xfffe0a28>

00060a70 <_printf_r>:
   60a70:	defffd04 	addi	sp,sp,-12
   60a74:	2805883a 	mov	r2,r5
   60a78:	dfc00015 	stw	ra,0(sp)
   60a7c:	d9800115 	stw	r6,4(sp)
   60a80:	d9c00215 	stw	r7,8(sp)
   60a84:	21400217 	ldw	r5,8(r4)
   60a88:	d9c00104 	addi	r7,sp,4
   60a8c:	100d883a 	mov	r6,r2
   60a90:	0060c480 	call	60c48 <___vfprintf_internal_r>
   60a94:	dfc00017 	ldw	ra,0(sp)
   60a98:	dec00304 	addi	sp,sp,12
   60a9c:	f800283a 	ret

00060aa0 <printf>:
   60aa0:	defffc04 	addi	sp,sp,-16
   60aa4:	dfc00015 	stw	ra,0(sp)
   60aa8:	d9400115 	stw	r5,4(sp)
   60aac:	d9800215 	stw	r6,8(sp)
   60ab0:	d9c00315 	stw	r7,12(sp)
   60ab4:	008001f4 	movhi	r2,7
   60ab8:	10890f04 	addi	r2,r2,9276
   60abc:	10800017 	ldw	r2,0(r2)
   60ac0:	200b883a 	mov	r5,r4
   60ac4:	d9800104 	addi	r6,sp,4
   60ac8:	11000217 	ldw	r4,8(r2)
   60acc:	0062f240 	call	62f24 <__vfprintf_internal>
   60ad0:	dfc00017 	ldw	ra,0(sp)
   60ad4:	dec00404 	addi	sp,sp,16
   60ad8:	f800283a 	ret

00060adc <_puts_r>:
   60adc:	defff604 	addi	sp,sp,-40
   60ae0:	dc000715 	stw	r16,28(sp)
   60ae4:	2021883a 	mov	r16,r4
   60ae8:	2809883a 	mov	r4,r5
   60aec:	dc400815 	stw	r17,32(sp)
   60af0:	dfc00915 	stw	ra,36(sp)
   60af4:	2823883a 	mov	r17,r5
   60af8:	0060bb00 	call	60bb0 <strlen>
   60afc:	10c00044 	addi	r3,r2,1
   60b00:	d8800115 	stw	r2,4(sp)
   60b04:	008001f4 	movhi	r2,7
   60b08:	10817504 	addi	r2,r2,1492
   60b0c:	d8800215 	stw	r2,8(sp)
   60b10:	00800044 	movi	r2,1
   60b14:	d8800315 	stw	r2,12(sp)
   60b18:	00800084 	movi	r2,2
   60b1c:	dc400015 	stw	r17,0(sp)
   60b20:	d8c00615 	stw	r3,24(sp)
   60b24:	dec00415 	stw	sp,16(sp)
   60b28:	d8800515 	stw	r2,20(sp)
   60b2c:	80000226 	beq	r16,zero,60b38 <_puts_r+0x5c>
   60b30:	80800e17 	ldw	r2,56(r16)
   60b34:	10001426 	beq	r2,zero,60b88 <_puts_r+0xac>
   60b38:	81400217 	ldw	r5,8(r16)
   60b3c:	2880030b 	ldhu	r2,12(r5)
   60b40:	10c8000c 	andi	r3,r2,8192
   60b44:	1800061e 	bne	r3,zero,60b60 <_puts_r+0x84>
   60b48:	29001917 	ldw	r4,100(r5)
   60b4c:	00f7ffc4 	movi	r3,-8193
   60b50:	10880014 	ori	r2,r2,8192
   60b54:	20c6703a 	and	r3,r4,r3
   60b58:	2880030d 	sth	r2,12(r5)
   60b5c:	28c01915 	stw	r3,100(r5)
   60b60:	d9800404 	addi	r6,sp,16
   60b64:	8009883a 	mov	r4,r16
   60b68:	006548c0 	call	6548c <__sfvwrite_r>
   60b6c:	1000091e 	bne	r2,zero,60b94 <_puts_r+0xb8>
   60b70:	00800284 	movi	r2,10
   60b74:	dfc00917 	ldw	ra,36(sp)
   60b78:	dc400817 	ldw	r17,32(sp)
   60b7c:	dc000717 	ldw	r16,28(sp)
   60b80:	dec00a04 	addi	sp,sp,40
   60b84:	f800283a 	ret
   60b88:	8009883a 	mov	r4,r16
   60b8c:	00650080 	call	65008 <__sinit>
   60b90:	003fe906 	br	60b38 <__alt_data_end+0xfffe0b38>
   60b94:	00bfffc4 	movi	r2,-1
   60b98:	003ff606 	br	60b74 <__alt_data_end+0xfffe0b74>

00060b9c <puts>:
   60b9c:	008001f4 	movhi	r2,7
   60ba0:	10890f04 	addi	r2,r2,9276
   60ba4:	200b883a 	mov	r5,r4
   60ba8:	11000017 	ldw	r4,0(r2)
   60bac:	0060adc1 	jmpi	60adc <_puts_r>

00060bb0 <strlen>:
   60bb0:	208000cc 	andi	r2,r4,3
   60bb4:	10002026 	beq	r2,zero,60c38 <strlen+0x88>
   60bb8:	20800007 	ldb	r2,0(r4)
   60bbc:	10002026 	beq	r2,zero,60c40 <strlen+0x90>
   60bc0:	2005883a 	mov	r2,r4
   60bc4:	00000206 	br	60bd0 <strlen+0x20>
   60bc8:	10c00007 	ldb	r3,0(r2)
   60bcc:	18001826 	beq	r3,zero,60c30 <strlen+0x80>
   60bd0:	10800044 	addi	r2,r2,1
   60bd4:	10c000cc 	andi	r3,r2,3
   60bd8:	183ffb1e 	bne	r3,zero,60bc8 <__alt_data_end+0xfffe0bc8>
   60bdc:	10c00017 	ldw	r3,0(r2)
   60be0:	01ffbff4 	movhi	r7,65279
   60be4:	39ffbfc4 	addi	r7,r7,-257
   60be8:	00ca303a 	nor	r5,zero,r3
   60bec:	01a02074 	movhi	r6,32897
   60bf0:	19c7883a 	add	r3,r3,r7
   60bf4:	31a02004 	addi	r6,r6,-32640
   60bf8:	1946703a 	and	r3,r3,r5
   60bfc:	1986703a 	and	r3,r3,r6
   60c00:	1800091e 	bne	r3,zero,60c28 <strlen+0x78>
   60c04:	10800104 	addi	r2,r2,4
   60c08:	10c00017 	ldw	r3,0(r2)
   60c0c:	19cb883a 	add	r5,r3,r7
   60c10:	00c6303a 	nor	r3,zero,r3
   60c14:	28c6703a 	and	r3,r5,r3
   60c18:	1986703a 	and	r3,r3,r6
   60c1c:	183ff926 	beq	r3,zero,60c04 <__alt_data_end+0xfffe0c04>
   60c20:	00000106 	br	60c28 <strlen+0x78>
   60c24:	10800044 	addi	r2,r2,1
   60c28:	10c00007 	ldb	r3,0(r2)
   60c2c:	183ffd1e 	bne	r3,zero,60c24 <__alt_data_end+0xfffe0c24>
   60c30:	1105c83a 	sub	r2,r2,r4
   60c34:	f800283a 	ret
   60c38:	2005883a 	mov	r2,r4
   60c3c:	003fe706 	br	60bdc <__alt_data_end+0xfffe0bdc>
   60c40:	0005883a 	mov	r2,zero
   60c44:	f800283a 	ret

00060c48 <___vfprintf_internal_r>:
   60c48:	deffb804 	addi	sp,sp,-288
   60c4c:	dfc04715 	stw	ra,284(sp)
   60c50:	ddc04515 	stw	r23,276(sp)
   60c54:	dd404315 	stw	r21,268(sp)
   60c58:	d9002d15 	stw	r4,180(sp)
   60c5c:	282f883a 	mov	r23,r5
   60c60:	302b883a 	mov	r21,r6
   60c64:	d9c02e15 	stw	r7,184(sp)
   60c68:	df004615 	stw	fp,280(sp)
   60c6c:	dd804415 	stw	r22,272(sp)
   60c70:	dd004215 	stw	r20,264(sp)
   60c74:	dcc04115 	stw	r19,260(sp)
   60c78:	dc804015 	stw	r18,256(sp)
   60c7c:	dc403f15 	stw	r17,252(sp)
   60c80:	dc003e15 	stw	r16,248(sp)
   60c84:	0065b880 	call	65b88 <_localeconv_r>
   60c88:	10800017 	ldw	r2,0(r2)
   60c8c:	1009883a 	mov	r4,r2
   60c90:	d8803415 	stw	r2,208(sp)
   60c94:	0060bb00 	call	60bb0 <strlen>
   60c98:	d8803715 	stw	r2,220(sp)
   60c9c:	d8802d17 	ldw	r2,180(sp)
   60ca0:	10000226 	beq	r2,zero,60cac <___vfprintf_internal_r+0x64>
   60ca4:	10800e17 	ldw	r2,56(r2)
   60ca8:	1000fb26 	beq	r2,zero,61098 <___vfprintf_internal_r+0x450>
   60cac:	b880030b 	ldhu	r2,12(r23)
   60cb0:	10c8000c 	andi	r3,r2,8192
   60cb4:	1800061e 	bne	r3,zero,60cd0 <___vfprintf_internal_r+0x88>
   60cb8:	b9001917 	ldw	r4,100(r23)
   60cbc:	00f7ffc4 	movi	r3,-8193
   60cc0:	10880014 	ori	r2,r2,8192
   60cc4:	20c6703a 	and	r3,r4,r3
   60cc8:	b880030d 	sth	r2,12(r23)
   60ccc:	b8c01915 	stw	r3,100(r23)
   60cd0:	10c0020c 	andi	r3,r2,8
   60cd4:	1800c326 	beq	r3,zero,60fe4 <___vfprintf_internal_r+0x39c>
   60cd8:	b8c00417 	ldw	r3,16(r23)
   60cdc:	1800c126 	beq	r3,zero,60fe4 <___vfprintf_internal_r+0x39c>
   60ce0:	1080068c 	andi	r2,r2,26
   60ce4:	00c00284 	movi	r3,10
   60ce8:	10c0c626 	beq	r2,r3,61004 <___vfprintf_internal_r+0x3bc>
   60cec:	d8c00404 	addi	r3,sp,16
   60cf0:	050001f4 	movhi	r20,7
   60cf4:	d9001e04 	addi	r4,sp,120
   60cf8:	a5018684 	addi	r20,r20,1562
   60cfc:	d8c01e15 	stw	r3,120(sp)
   60d00:	d8002015 	stw	zero,128(sp)
   60d04:	d8001f15 	stw	zero,124(sp)
   60d08:	d8003315 	stw	zero,204(sp)
   60d0c:	d8003615 	stw	zero,216(sp)
   60d10:	d8003815 	stw	zero,224(sp)
   60d14:	1811883a 	mov	r8,r3
   60d18:	d8003915 	stw	zero,228(sp)
   60d1c:	d8003a15 	stw	zero,232(sp)
   60d20:	d8002f15 	stw	zero,188(sp)
   60d24:	d9002815 	stw	r4,160(sp)
   60d28:	a8800007 	ldb	r2,0(r21)
   60d2c:	10028b26 	beq	r2,zero,6175c <___vfprintf_internal_r+0xb14>
   60d30:	00c00944 	movi	r3,37
   60d34:	a823883a 	mov	r17,r21
   60d38:	10c0021e 	bne	r2,r3,60d44 <___vfprintf_internal_r+0xfc>
   60d3c:	00001406 	br	60d90 <___vfprintf_internal_r+0x148>
   60d40:	10c00326 	beq	r2,r3,60d50 <___vfprintf_internal_r+0x108>
   60d44:	8c400044 	addi	r17,r17,1
   60d48:	88800007 	ldb	r2,0(r17)
   60d4c:	103ffc1e 	bne	r2,zero,60d40 <__alt_data_end+0xfffe0d40>
   60d50:	8d61c83a 	sub	r16,r17,r21
   60d54:	80000e26 	beq	r16,zero,60d90 <___vfprintf_internal_r+0x148>
   60d58:	d8c02017 	ldw	r3,128(sp)
   60d5c:	d8801f17 	ldw	r2,124(sp)
   60d60:	45400015 	stw	r21,0(r8)
   60d64:	1c07883a 	add	r3,r3,r16
   60d68:	10800044 	addi	r2,r2,1
   60d6c:	d8c02015 	stw	r3,128(sp)
   60d70:	44000115 	stw	r16,4(r8)
   60d74:	d8801f15 	stw	r2,124(sp)
   60d78:	00c001c4 	movi	r3,7
   60d7c:	1880a916 	blt	r3,r2,61024 <___vfprintf_internal_r+0x3dc>
   60d80:	42000204 	addi	r8,r8,8
   60d84:	d9402f17 	ldw	r5,188(sp)
   60d88:	2c0b883a 	add	r5,r5,r16
   60d8c:	d9402f15 	stw	r5,188(sp)
   60d90:	88800007 	ldb	r2,0(r17)
   60d94:	1000aa26 	beq	r2,zero,61040 <___vfprintf_internal_r+0x3f8>
   60d98:	8d400044 	addi	r21,r17,1
   60d9c:	8c400047 	ldb	r17,1(r17)
   60da0:	0021883a 	mov	r16,zero
   60da4:	00bfffc4 	movi	r2,-1
   60da8:	0025883a 	mov	r18,zero
   60dac:	dc002905 	stb	r16,164(sp)
   60db0:	d8002785 	stb	zero,158(sp)
   60db4:	d8002b05 	stb	zero,172(sp)
   60db8:	d8802a15 	stw	r2,168(sp)
   60dbc:	d8003115 	stw	zero,196(sp)
   60dc0:	04c01604 	movi	r19,88
   60dc4:	05800244 	movi	r22,9
   60dc8:	9021883a 	mov	r16,r18
   60dcc:	4039883a 	mov	fp,r8
   60dd0:	ad400044 	addi	r21,r21,1
   60dd4:	88bff804 	addi	r2,r17,-32
   60dd8:	98833236 	bltu	r19,r2,61aa4 <___vfprintf_internal_r+0xe5c>
   60ddc:	100490ba 	slli	r2,r2,2
   60de0:	00c001b4 	movhi	r3,6
   60de4:	18c37d04 	addi	r3,r3,3572
   60de8:	10c5883a 	add	r2,r2,r3
   60dec:	10800017 	ldw	r2,0(r2)
   60df0:	1000683a 	jmp	r2
   60df4:	0006199c 	xori	zero,zero,6246
   60df8:	00061aa4 	muli	zero,zero,6250
   60dfc:	00061aa4 	muli	zero,zero,6250
   60e00:	000619bc 	xorhi	zero,zero,6246
   60e04:	00061aa4 	muli	zero,zero,6250
   60e08:	00061aa4 	muli	zero,zero,6250
   60e0c:	00061aa4 	muli	zero,zero,6250
   60e10:	00061aa4 	muli	zero,zero,6250
   60e14:	00061aa4 	muli	zero,zero,6250
   60e18:	00061aa4 	muli	zero,zero,6250
   60e1c:	000610a4 	muli	zero,zero,6210
   60e20:	000618ac 	andhi	zero,zero,6242
   60e24:	00061aa4 	muli	zero,zero,6250
   60e28:	00060f68 	cmpgeui	zero,zero,6205
   60e2c:	000610c8 	cmpgei	zero,zero,6211
   60e30:	00061aa4 	muli	zero,zero,6250
   60e34:	00061118 	cmpnei	zero,zero,6212
   60e38:	00061124 	muli	zero,zero,6212
   60e3c:	00061124 	muli	zero,zero,6212
   60e40:	00061124 	muli	zero,zero,6212
   60e44:	00061124 	muli	zero,zero,6212
   60e48:	00061124 	muli	zero,zero,6212
   60e4c:	00061124 	muli	zero,zero,6212
   60e50:	00061124 	muli	zero,zero,6212
   60e54:	00061124 	muli	zero,zero,6212
   60e58:	00061124 	muli	zero,zero,6212
   60e5c:	00061aa4 	muli	zero,zero,6250
   60e60:	00061aa4 	muli	zero,zero,6250
   60e64:	00061aa4 	muli	zero,zero,6250
   60e68:	00061aa4 	muli	zero,zero,6250
   60e6c:	00061aa4 	muli	zero,zero,6250
   60e70:	00061aa4 	muli	zero,zero,6250
   60e74:	00061aa4 	muli	zero,zero,6250
   60e78:	00061aa4 	muli	zero,zero,6250
   60e7c:	00061aa4 	muli	zero,zero,6250
   60e80:	00061aa4 	muli	zero,zero,6250
   60e84:	00061160 	cmpeqi	zero,zero,6213
   60e88:	00061228 	cmpgeui	zero,zero,6216
   60e8c:	00061aa4 	muli	zero,zero,6250
   60e90:	00061228 	cmpgeui	zero,zero,6216
   60e94:	00061aa4 	muli	zero,zero,6250
   60e98:	00061aa4 	muli	zero,zero,6250
   60e9c:	00061aa4 	muli	zero,zero,6250
   60ea0:	00061aa4 	muli	zero,zero,6250
   60ea4:	000612d4 	movui	zero,6219
   60ea8:	00061aa4 	muli	zero,zero,6250
   60eac:	00061aa4 	muli	zero,zero,6250
   60eb0:	000612e0 	cmpeqi	zero,zero,6219
   60eb4:	00061aa4 	muli	zero,zero,6250
   60eb8:	00061aa4 	muli	zero,zero,6250
   60ebc:	00061aa4 	muli	zero,zero,6250
   60ec0:	00061aa4 	muli	zero,zero,6250
   60ec4:	00061aa4 	muli	zero,zero,6250
   60ec8:	00061764 	muli	zero,zero,6237
   60ecc:	00061aa4 	muli	zero,zero,6250
   60ed0:	00061aa4 	muli	zero,zero,6250
   60ed4:	000617d0 	cmplti	zero,zero,6239
   60ed8:	00061aa4 	muli	zero,zero,6250
   60edc:	00061aa4 	muli	zero,zero,6250
   60ee0:	00061aa4 	muli	zero,zero,6250
   60ee4:	00061aa4 	muli	zero,zero,6250
   60ee8:	00061aa4 	muli	zero,zero,6250
   60eec:	00061aa4 	muli	zero,zero,6250
   60ef0:	00061aa4 	muli	zero,zero,6250
   60ef4:	00061aa4 	muli	zero,zero,6250
   60ef8:	00061aa4 	muli	zero,zero,6250
   60efc:	00061aa4 	muli	zero,zero,6250
   60f00:	00061a48 	cmpgei	zero,zero,6249
   60f04:	000619c8 	cmpgei	zero,zero,6247
   60f08:	00061228 	cmpgeui	zero,zero,6216
   60f0c:	00061228 	cmpgeui	zero,zero,6216
   60f10:	00061228 	cmpgeui	zero,zero,6216
   60f14:	000619e8 	cmpgeui	zero,zero,6247
   60f18:	000619c8 	cmpgei	zero,zero,6247
   60f1c:	00061aa4 	muli	zero,zero,6250
   60f20:	00061aa4 	muli	zero,zero,6250
   60f24:	000619f4 	movhi	zero,6247
   60f28:	00061aa4 	muli	zero,zero,6250
   60f2c:	00061a08 	cmpgei	zero,zero,6248
   60f30:	0006188c 	andi	zero,zero,6242
   60f34:	00060f74 	movhi	zero,6205
   60f38:	000618c4 	movi	zero,6243
   60f3c:	00061aa4 	muli	zero,zero,6250
   60f40:	000618d0 	cmplti	zero,zero,6243
   60f44:	00061aa4 	muli	zero,zero,6250
   60f48:	00061934 	movhi	zero,6244
   60f4c:	00061aa4 	muli	zero,zero,6250
   60f50:	00061aa4 	muli	zero,zero,6250
   60f54:	00061954 	movui	zero,6245
   60f58:	d8c03117 	ldw	r3,196(sp)
   60f5c:	d8802e15 	stw	r2,184(sp)
   60f60:	00c7c83a 	sub	r3,zero,r3
   60f64:	d8c03115 	stw	r3,196(sp)
   60f68:	84000114 	ori	r16,r16,4
   60f6c:	ac400007 	ldb	r17,0(r21)
   60f70:	003f9706 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   60f74:	00800c04 	movi	r2,48
   60f78:	d8802705 	stb	r2,156(sp)
   60f7c:	00801e04 	movi	r2,120
   60f80:	d8802745 	stb	r2,157(sp)
   60f84:	d9002a17 	ldw	r4,168(sp)
   60f88:	d8802e17 	ldw	r2,184(sp)
   60f8c:	d8002785 	stb	zero,158(sp)
   60f90:	e011883a 	mov	r8,fp
   60f94:	10c00104 	addi	r3,r2,4
   60f98:	14c00017 	ldw	r19,0(r2)
   60f9c:	002d883a 	mov	r22,zero
   60fa0:	80800094 	ori	r2,r16,2
   60fa4:	2002ca16 	blt	r4,zero,61ad0 <___vfprintf_internal_r+0xe88>
   60fa8:	00bfdfc4 	movi	r2,-129
   60fac:	80a4703a 	and	r18,r16,r2
   60fb0:	d8c02e15 	stw	r3,184(sp)
   60fb4:	94800094 	ori	r18,r18,2
   60fb8:	9802b41e 	bne	r19,zero,61a8c <___vfprintf_internal_r+0xe44>
   60fbc:	014001f4 	movhi	r5,7
   60fc0:	29417f04 	addi	r5,r5,1532
   60fc4:	d9403915 	stw	r5,228(sp)
   60fc8:	04401e04 	movi	r17,120
   60fcc:	d8802a17 	ldw	r2,168(sp)
   60fd0:	0039883a 	mov	fp,zero
   60fd4:	1001fa26 	beq	r2,zero,617c0 <___vfprintf_internal_r+0xb78>
   60fd8:	0027883a 	mov	r19,zero
   60fdc:	002d883a 	mov	r22,zero
   60fe0:	00021906 	br	61848 <___vfprintf_internal_r+0xc00>
   60fe4:	d9002d17 	ldw	r4,180(sp)
   60fe8:	b80b883a 	mov	r5,r23
   60fec:	0062ffc0 	call	62ffc <__swsetup_r>
   60ff0:	1005dc1e 	bne	r2,zero,62764 <___vfprintf_internal_r+0x1b1c>
   60ff4:	b880030b 	ldhu	r2,12(r23)
   60ff8:	00c00284 	movi	r3,10
   60ffc:	1080068c 	andi	r2,r2,26
   61000:	10ff3a1e 	bne	r2,r3,60cec <__alt_data_end+0xfffe0cec>
   61004:	b880038f 	ldh	r2,14(r23)
   61008:	103f3816 	blt	r2,zero,60cec <__alt_data_end+0xfffe0cec>
   6100c:	d9c02e17 	ldw	r7,184(sp)
   61010:	d9002d17 	ldw	r4,180(sp)
   61014:	a80d883a 	mov	r6,r21
   61018:	b80b883a 	mov	r5,r23
   6101c:	0062f400 	call	62f40 <__sbprintf>
   61020:	00001106 	br	61068 <___vfprintf_internal_r+0x420>
   61024:	d9002d17 	ldw	r4,180(sp)
   61028:	d9801e04 	addi	r6,sp,120
   6102c:	b80b883a 	mov	r5,r23
   61030:	00682e00 	call	682e0 <__sprint_r>
   61034:	1000081e 	bne	r2,zero,61058 <___vfprintf_internal_r+0x410>
   61038:	da000404 	addi	r8,sp,16
   6103c:	003f5106 	br	60d84 <__alt_data_end+0xfffe0d84>
   61040:	d8802017 	ldw	r2,128(sp)
   61044:	10000426 	beq	r2,zero,61058 <___vfprintf_internal_r+0x410>
   61048:	d9002d17 	ldw	r4,180(sp)
   6104c:	d9801e04 	addi	r6,sp,120
   61050:	b80b883a 	mov	r5,r23
   61054:	00682e00 	call	682e0 <__sprint_r>
   61058:	b880030b 	ldhu	r2,12(r23)
   6105c:	1080100c 	andi	r2,r2,64
   61060:	1005c01e 	bne	r2,zero,62764 <___vfprintf_internal_r+0x1b1c>
   61064:	d8802f17 	ldw	r2,188(sp)
   61068:	dfc04717 	ldw	ra,284(sp)
   6106c:	df004617 	ldw	fp,280(sp)
   61070:	ddc04517 	ldw	r23,276(sp)
   61074:	dd804417 	ldw	r22,272(sp)
   61078:	dd404317 	ldw	r21,268(sp)
   6107c:	dd004217 	ldw	r20,264(sp)
   61080:	dcc04117 	ldw	r19,260(sp)
   61084:	dc804017 	ldw	r18,256(sp)
   61088:	dc403f17 	ldw	r17,252(sp)
   6108c:	dc003e17 	ldw	r16,248(sp)
   61090:	dec04804 	addi	sp,sp,288
   61094:	f800283a 	ret
   61098:	d9002d17 	ldw	r4,180(sp)
   6109c:	00650080 	call	65008 <__sinit>
   610a0:	003f0206 	br	60cac <__alt_data_end+0xfffe0cac>
   610a4:	d9002e17 	ldw	r4,184(sp)
   610a8:	d9402e17 	ldw	r5,184(sp)
   610ac:	21000017 	ldw	r4,0(r4)
   610b0:	28800104 	addi	r2,r5,4
   610b4:	d9003115 	stw	r4,196(sp)
   610b8:	203fa716 	blt	r4,zero,60f58 <__alt_data_end+0xfffe0f58>
   610bc:	d8802e15 	stw	r2,184(sp)
   610c0:	ac400007 	ldb	r17,0(r21)
   610c4:	003f4206 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   610c8:	ac400007 	ldb	r17,0(r21)
   610cc:	01000a84 	movi	r4,42
   610d0:	a8c00044 	addi	r3,r21,1
   610d4:	89075826 	beq	r17,r4,62e38 <___vfprintf_internal_r+0x21f0>
   610d8:	8cbff404 	addi	r18,r17,-48
   610dc:	b486ae36 	bltu	r22,r18,62b98 <___vfprintf_internal_r+0x1f50>
   610e0:	0009883a 	mov	r4,zero
   610e4:	1823883a 	mov	r17,r3
   610e8:	01400284 	movi	r5,10
   610ec:	00609000 	call	60900 <__mulsi3>
   610f0:	88c00007 	ldb	r3,0(r17)
   610f4:	1489883a 	add	r4,r2,r18
   610f8:	8d400044 	addi	r21,r17,1
   610fc:	1cbff404 	addi	r18,r3,-48
   61100:	a823883a 	mov	r17,r21
   61104:	b4bff82e 	bgeu	r22,r18,610e8 <__alt_data_end+0xfffe10e8>
   61108:	1823883a 	mov	r17,r3
   6110c:	2005f616 	blt	r4,zero,628e8 <___vfprintf_internal_r+0x1ca0>
   61110:	d9002a15 	stw	r4,168(sp)
   61114:	003f2f06 	br	60dd4 <__alt_data_end+0xfffe0dd4>
   61118:	84002014 	ori	r16,r16,128
   6111c:	ac400007 	ldb	r17,0(r21)
   61120:	003f2b06 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   61124:	8cbff404 	addi	r18,r17,-48
   61128:	d8003115 	stw	zero,196(sp)
   6112c:	0009883a 	mov	r4,zero
   61130:	a823883a 	mov	r17,r21
   61134:	01400284 	movi	r5,10
   61138:	00609000 	call	60900 <__mulsi3>
   6113c:	88c00007 	ldb	r3,0(r17)
   61140:	9089883a 	add	r4,r18,r2
   61144:	ad400044 	addi	r21,r21,1
   61148:	1cbff404 	addi	r18,r3,-48
   6114c:	a823883a 	mov	r17,r21
   61150:	b4bff82e 	bgeu	r22,r18,61134 <__alt_data_end+0xfffe1134>
   61154:	1823883a 	mov	r17,r3
   61158:	d9003115 	stw	r4,196(sp)
   6115c:	003f1d06 	br	60dd4 <__alt_data_end+0xfffe0dd4>
   61160:	8025883a 	mov	r18,r16
   61164:	dc002903 	ldbu	r16,164(sp)
   61168:	e011883a 	mov	r8,fp
   6116c:	84003fcc 	andi	r16,r16,255
   61170:	8007531e 	bne	r16,zero,62ec0 <___vfprintf_internal_r+0x2278>
   61174:	94800414 	ori	r18,r18,16
   61178:	9080080c 	andi	r2,r18,32
   6117c:	1003a326 	beq	r2,zero,6200c <___vfprintf_internal_r+0x13c4>
   61180:	d9002e17 	ldw	r4,184(sp)
   61184:	20800117 	ldw	r2,4(r4)
   61188:	24c00017 	ldw	r19,0(r4)
   6118c:	21000204 	addi	r4,r4,8
   61190:	d9002e15 	stw	r4,184(sp)
   61194:	102d883a 	mov	r22,r2
   61198:	10047316 	blt	r2,zero,62368 <___vfprintf_internal_r+0x1720>
   6119c:	d9002a17 	ldw	r4,168(sp)
   611a0:	df002783 	ldbu	fp,158(sp)
   611a4:	2003e416 	blt	r4,zero,62138 <___vfprintf_internal_r+0x14f0>
   611a8:	00ffdfc4 	movi	r3,-129
   611ac:	9d84b03a 	or	r2,r19,r22
   611b0:	90e4703a 	and	r18,r18,r3
   611b4:	10018026 	beq	r2,zero,617b8 <___vfprintf_internal_r+0xb70>
   611b8:	b003ab26 	beq	r22,zero,62068 <___vfprintf_internal_r+0x1420>
   611bc:	dc402915 	stw	r17,164(sp)
   611c0:	dc001e04 	addi	r16,sp,120
   611c4:	b023883a 	mov	r17,r22
   611c8:	402d883a 	mov	r22,r8
   611cc:	9809883a 	mov	r4,r19
   611d0:	880b883a 	mov	r5,r17
   611d4:	01800284 	movi	r6,10
   611d8:	000f883a 	mov	r7,zero
   611dc:	006a8240 	call	6a824 <__umoddi3>
   611e0:	10800c04 	addi	r2,r2,48
   611e4:	843fffc4 	addi	r16,r16,-1
   611e8:	9809883a 	mov	r4,r19
   611ec:	880b883a 	mov	r5,r17
   611f0:	80800005 	stb	r2,0(r16)
   611f4:	01800284 	movi	r6,10
   611f8:	000f883a 	mov	r7,zero
   611fc:	006a2280 	call	6a228 <__udivdi3>
   61200:	1027883a 	mov	r19,r2
   61204:	10c4b03a 	or	r2,r2,r3
   61208:	1823883a 	mov	r17,r3
   6120c:	103fef1e 	bne	r2,zero,611cc <__alt_data_end+0xfffe11cc>
   61210:	d8c02817 	ldw	r3,160(sp)
   61214:	dc402917 	ldw	r17,164(sp)
   61218:	b011883a 	mov	r8,r22
   6121c:	1c07c83a 	sub	r3,r3,r16
   61220:	d8c02b15 	stw	r3,172(sp)
   61224:	00005f06 	br	613a4 <___vfprintf_internal_r+0x75c>
   61228:	8025883a 	mov	r18,r16
   6122c:	dc002903 	ldbu	r16,164(sp)
   61230:	e011883a 	mov	r8,fp
   61234:	84003fcc 	andi	r16,r16,255
   61238:	80071e1e 	bne	r16,zero,62eb4 <___vfprintf_internal_r+0x226c>
   6123c:	9080020c 	andi	r2,r18,8
   61240:	1004af26 	beq	r2,zero,62500 <___vfprintf_internal_r+0x18b8>
   61244:	d9002e17 	ldw	r4,184(sp)
   61248:	d9402e17 	ldw	r5,184(sp)
   6124c:	d8802e17 	ldw	r2,184(sp)
   61250:	21000017 	ldw	r4,0(r4)
   61254:	29400117 	ldw	r5,4(r5)
   61258:	10800204 	addi	r2,r2,8
   6125c:	d9003615 	stw	r4,216(sp)
   61260:	d9403815 	stw	r5,224(sp)
   61264:	d8802e15 	stw	r2,184(sp)
   61268:	d9003617 	ldw	r4,216(sp)
   6126c:	d9403817 	ldw	r5,224(sp)
   61270:	da003d15 	stw	r8,244(sp)
   61274:	04000044 	movi	r16,1
   61278:	0067f040 	call	67f04 <__fpclassifyd>
   6127c:	da003d17 	ldw	r8,244(sp)
   61280:	1404441e 	bne	r2,r16,62394 <___vfprintf_internal_r+0x174c>
   61284:	d9003617 	ldw	r4,216(sp)
   61288:	d9403817 	ldw	r5,224(sp)
   6128c:	000d883a 	mov	r6,zero
   61290:	000f883a 	mov	r7,zero
   61294:	006c37c0 	call	6c37c <__ledf2>
   61298:	da003d17 	ldw	r8,244(sp)
   6129c:	1005e316 	blt	r2,zero,62a2c <___vfprintf_internal_r+0x1de4>
   612a0:	df002783 	ldbu	fp,158(sp)
   612a4:	008011c4 	movi	r2,71
   612a8:	1445580e 	bge	r2,r17,6280c <___vfprintf_internal_r+0x1bc4>
   612ac:	040001f4 	movhi	r16,7
   612b0:	84017704 	addi	r16,r16,1500
   612b4:	00c000c4 	movi	r3,3
   612b8:	00bfdfc4 	movi	r2,-129
   612bc:	d8c02915 	stw	r3,164(sp)
   612c0:	90a4703a 	and	r18,r18,r2
   612c4:	d8c02b15 	stw	r3,172(sp)
   612c8:	d8002a15 	stw	zero,168(sp)
   612cc:	d8003215 	stw	zero,200(sp)
   612d0:	00003a06 	br	613bc <___vfprintf_internal_r+0x774>
   612d4:	84000214 	ori	r16,r16,8
   612d8:	ac400007 	ldb	r17,0(r21)
   612dc:	003ebc06 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   612e0:	8025883a 	mov	r18,r16
   612e4:	dc002903 	ldbu	r16,164(sp)
   612e8:	e011883a 	mov	r8,fp
   612ec:	84003fcc 	andi	r16,r16,255
   612f0:	8007001e 	bne	r16,zero,62ef4 <___vfprintf_internal_r+0x22ac>
   612f4:	94800414 	ori	r18,r18,16
   612f8:	9080080c 	andi	r2,r18,32
   612fc:	1002fa26 	beq	r2,zero,61ee8 <___vfprintf_internal_r+0x12a0>
   61300:	d9002e17 	ldw	r4,184(sp)
   61304:	d9402a17 	ldw	r5,168(sp)
   61308:	d8002785 	stb	zero,158(sp)
   6130c:	20800204 	addi	r2,r4,8
   61310:	24c00017 	ldw	r19,0(r4)
   61314:	25800117 	ldw	r22,4(r4)
   61318:	2804b116 	blt	r5,zero,625e0 <___vfprintf_internal_r+0x1998>
   6131c:	013fdfc4 	movi	r4,-129
   61320:	9d86b03a 	or	r3,r19,r22
   61324:	d8802e15 	stw	r2,184(sp)
   61328:	9124703a 	and	r18,r18,r4
   6132c:	1802fb1e 	bne	r3,zero,61f1c <___vfprintf_internal_r+0x12d4>
   61330:	d8c02a17 	ldw	r3,168(sp)
   61334:	0039883a 	mov	fp,zero
   61338:	1805e526 	beq	r3,zero,62ad0 <___vfprintf_internal_r+0x1e88>
   6133c:	0027883a 	mov	r19,zero
   61340:	002d883a 	mov	r22,zero
   61344:	dc001e04 	addi	r16,sp,120
   61348:	9806d0fa 	srli	r3,r19,3
   6134c:	b008977a 	slli	r4,r22,29
   61350:	b02cd0fa 	srli	r22,r22,3
   61354:	9cc001cc 	andi	r19,r19,7
   61358:	98800c04 	addi	r2,r19,48
   6135c:	843fffc4 	addi	r16,r16,-1
   61360:	20e6b03a 	or	r19,r4,r3
   61364:	80800005 	stb	r2,0(r16)
   61368:	9d86b03a 	or	r3,r19,r22
   6136c:	183ff61e 	bne	r3,zero,61348 <__alt_data_end+0xfffe1348>
   61370:	90c0004c 	andi	r3,r18,1
   61374:	18014126 	beq	r3,zero,6187c <___vfprintf_internal_r+0xc34>
   61378:	10803fcc 	andi	r2,r2,255
   6137c:	1080201c 	xori	r2,r2,128
   61380:	10bfe004 	addi	r2,r2,-128
   61384:	00c00c04 	movi	r3,48
   61388:	10c13c26 	beq	r2,r3,6187c <___vfprintf_internal_r+0xc34>
   6138c:	80ffffc5 	stb	r3,-1(r16)
   61390:	d8c02817 	ldw	r3,160(sp)
   61394:	80bfffc4 	addi	r2,r16,-1
   61398:	1021883a 	mov	r16,r2
   6139c:	1887c83a 	sub	r3,r3,r2
   613a0:	d8c02b15 	stw	r3,172(sp)
   613a4:	d8802b17 	ldw	r2,172(sp)
   613a8:	d9002a17 	ldw	r4,168(sp)
   613ac:	1100010e 	bge	r2,r4,613b4 <___vfprintf_internal_r+0x76c>
   613b0:	2005883a 	mov	r2,r4
   613b4:	d8802915 	stw	r2,164(sp)
   613b8:	d8003215 	stw	zero,200(sp)
   613bc:	e7003fcc 	andi	fp,fp,255
   613c0:	e700201c 	xori	fp,fp,128
   613c4:	e73fe004 	addi	fp,fp,-128
   613c8:	e0000326 	beq	fp,zero,613d8 <___vfprintf_internal_r+0x790>
   613cc:	d8c02917 	ldw	r3,164(sp)
   613d0:	18c00044 	addi	r3,r3,1
   613d4:	d8c02915 	stw	r3,164(sp)
   613d8:	90c0008c 	andi	r3,r18,2
   613dc:	d8c02c15 	stw	r3,176(sp)
   613e0:	18000326 	beq	r3,zero,613f0 <___vfprintf_internal_r+0x7a8>
   613e4:	d8c02917 	ldw	r3,164(sp)
   613e8:	18c00084 	addi	r3,r3,2
   613ec:	d8c02915 	stw	r3,164(sp)
   613f0:	90c0210c 	andi	r3,r18,132
   613f4:	d8c03015 	stw	r3,192(sp)
   613f8:	1801c51e 	bne	r3,zero,61b10 <___vfprintf_internal_r+0xec8>
   613fc:	d9003117 	ldw	r4,196(sp)
   61400:	d8c02917 	ldw	r3,164(sp)
   61404:	20e7c83a 	sub	r19,r4,r3
   61408:	04c1c10e 	bge	zero,r19,61b10 <___vfprintf_internal_r+0xec8>
   6140c:	02400404 	movi	r9,16
   61410:	d8c02017 	ldw	r3,128(sp)
   61414:	d8801f17 	ldw	r2,124(sp)
   61418:	4cc52f0e 	bge	r9,r19,628d8 <___vfprintf_internal_r+0x1c90>
   6141c:	014001f4 	movhi	r5,7
   61420:	29418a84 	addi	r5,r5,1578
   61424:	dc403b15 	stw	r17,236(sp)
   61428:	d9403515 	stw	r5,212(sp)
   6142c:	9823883a 	mov	r17,r19
   61430:	482d883a 	mov	r22,r9
   61434:	9027883a 	mov	r19,r18
   61438:	070001c4 	movi	fp,7
   6143c:	8025883a 	mov	r18,r16
   61440:	dc002d17 	ldw	r16,180(sp)
   61444:	00000306 	br	61454 <___vfprintf_internal_r+0x80c>
   61448:	8c7ffc04 	addi	r17,r17,-16
   6144c:	42000204 	addi	r8,r8,8
   61450:	b440130e 	bge	r22,r17,614a0 <___vfprintf_internal_r+0x858>
   61454:	010001f4 	movhi	r4,7
   61458:	18c00404 	addi	r3,r3,16
   6145c:	10800044 	addi	r2,r2,1
   61460:	21018a84 	addi	r4,r4,1578
   61464:	41000015 	stw	r4,0(r8)
   61468:	45800115 	stw	r22,4(r8)
   6146c:	d8c02015 	stw	r3,128(sp)
   61470:	d8801f15 	stw	r2,124(sp)
   61474:	e0bff40e 	bge	fp,r2,61448 <__alt_data_end+0xfffe1448>
   61478:	d9801e04 	addi	r6,sp,120
   6147c:	b80b883a 	mov	r5,r23
   61480:	8009883a 	mov	r4,r16
   61484:	00682e00 	call	682e0 <__sprint_r>
   61488:	103ef31e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6148c:	8c7ffc04 	addi	r17,r17,-16
   61490:	d8c02017 	ldw	r3,128(sp)
   61494:	d8801f17 	ldw	r2,124(sp)
   61498:	da000404 	addi	r8,sp,16
   6149c:	b47fed16 	blt	r22,r17,61454 <__alt_data_end+0xfffe1454>
   614a0:	9021883a 	mov	r16,r18
   614a4:	9825883a 	mov	r18,r19
   614a8:	8827883a 	mov	r19,r17
   614ac:	dc403b17 	ldw	r17,236(sp)
   614b0:	d9403517 	ldw	r5,212(sp)
   614b4:	98c7883a 	add	r3,r19,r3
   614b8:	10800044 	addi	r2,r2,1
   614bc:	41400015 	stw	r5,0(r8)
   614c0:	44c00115 	stw	r19,4(r8)
   614c4:	d8c02015 	stw	r3,128(sp)
   614c8:	d8801f15 	stw	r2,124(sp)
   614cc:	010001c4 	movi	r4,7
   614d0:	2082c516 	blt	r4,r2,61fe8 <___vfprintf_internal_r+0x13a0>
   614d4:	df002787 	ldb	fp,158(sp)
   614d8:	42000204 	addi	r8,r8,8
   614dc:	e0000c26 	beq	fp,zero,61510 <___vfprintf_internal_r+0x8c8>
   614e0:	d8801f17 	ldw	r2,124(sp)
   614e4:	d9002784 	addi	r4,sp,158
   614e8:	18c00044 	addi	r3,r3,1
   614ec:	10800044 	addi	r2,r2,1
   614f0:	41000015 	stw	r4,0(r8)
   614f4:	01000044 	movi	r4,1
   614f8:	41000115 	stw	r4,4(r8)
   614fc:	d8c02015 	stw	r3,128(sp)
   61500:	d8801f15 	stw	r2,124(sp)
   61504:	010001c4 	movi	r4,7
   61508:	20825e16 	blt	r4,r2,61e84 <___vfprintf_internal_r+0x123c>
   6150c:	42000204 	addi	r8,r8,8
   61510:	d8802c17 	ldw	r2,176(sp)
   61514:	10000c26 	beq	r2,zero,61548 <___vfprintf_internal_r+0x900>
   61518:	d8801f17 	ldw	r2,124(sp)
   6151c:	d9002704 	addi	r4,sp,156
   61520:	18c00084 	addi	r3,r3,2
   61524:	10800044 	addi	r2,r2,1
   61528:	41000015 	stw	r4,0(r8)
   6152c:	01000084 	movi	r4,2
   61530:	41000115 	stw	r4,4(r8)
   61534:	d8c02015 	stw	r3,128(sp)
   61538:	d8801f15 	stw	r2,124(sp)
   6153c:	010001c4 	movi	r4,7
   61540:	20825816 	blt	r4,r2,61ea4 <___vfprintf_internal_r+0x125c>
   61544:	42000204 	addi	r8,r8,8
   61548:	d9003017 	ldw	r4,192(sp)
   6154c:	00802004 	movi	r2,128
   61550:	2081bb26 	beq	r4,r2,61c40 <___vfprintf_internal_r+0xff8>
   61554:	d9402a17 	ldw	r5,168(sp)
   61558:	d8802b17 	ldw	r2,172(sp)
   6155c:	28adc83a 	sub	r22,r5,r2
   61560:	0580310e 	bge	zero,r22,61628 <___vfprintf_internal_r+0x9e0>
   61564:	07000404 	movi	fp,16
   61568:	d8801f17 	ldw	r2,124(sp)
   6156c:	e584360e 	bge	fp,r22,62648 <___vfprintf_internal_r+0x1a00>
   61570:	014001f4 	movhi	r5,7
   61574:	29418684 	addi	r5,r5,1562
   61578:	dc402a15 	stw	r17,168(sp)
   6157c:	d9402c15 	stw	r5,176(sp)
   61580:	b023883a 	mov	r17,r22
   61584:	04c001c4 	movi	r19,7
   61588:	a82d883a 	mov	r22,r21
   6158c:	902b883a 	mov	r21,r18
   61590:	8025883a 	mov	r18,r16
   61594:	dc002d17 	ldw	r16,180(sp)
   61598:	00000306 	br	615a8 <___vfprintf_internal_r+0x960>
   6159c:	8c7ffc04 	addi	r17,r17,-16
   615a0:	42000204 	addi	r8,r8,8
   615a4:	e440110e 	bge	fp,r17,615ec <___vfprintf_internal_r+0x9a4>
   615a8:	18c00404 	addi	r3,r3,16
   615ac:	10800044 	addi	r2,r2,1
   615b0:	45000015 	stw	r20,0(r8)
   615b4:	47000115 	stw	fp,4(r8)
   615b8:	d8c02015 	stw	r3,128(sp)
   615bc:	d8801f15 	stw	r2,124(sp)
   615c0:	98bff60e 	bge	r19,r2,6159c <__alt_data_end+0xfffe159c>
   615c4:	d9801e04 	addi	r6,sp,120
   615c8:	b80b883a 	mov	r5,r23
   615cc:	8009883a 	mov	r4,r16
   615d0:	00682e00 	call	682e0 <__sprint_r>
   615d4:	103ea01e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   615d8:	8c7ffc04 	addi	r17,r17,-16
   615dc:	d8c02017 	ldw	r3,128(sp)
   615e0:	d8801f17 	ldw	r2,124(sp)
   615e4:	da000404 	addi	r8,sp,16
   615e8:	e47fef16 	blt	fp,r17,615a8 <__alt_data_end+0xfffe15a8>
   615ec:	9021883a 	mov	r16,r18
   615f0:	a825883a 	mov	r18,r21
   615f4:	b02b883a 	mov	r21,r22
   615f8:	882d883a 	mov	r22,r17
   615fc:	dc402a17 	ldw	r17,168(sp)
   61600:	d9002c17 	ldw	r4,176(sp)
   61604:	1d87883a 	add	r3,r3,r22
   61608:	10800044 	addi	r2,r2,1
   6160c:	41000015 	stw	r4,0(r8)
   61610:	45800115 	stw	r22,4(r8)
   61614:	d8c02015 	stw	r3,128(sp)
   61618:	d8801f15 	stw	r2,124(sp)
   6161c:	010001c4 	movi	r4,7
   61620:	20821016 	blt	r4,r2,61e64 <___vfprintf_internal_r+0x121c>
   61624:	42000204 	addi	r8,r8,8
   61628:	9080400c 	andi	r2,r18,256
   6162c:	10013a1e 	bne	r2,zero,61b18 <___vfprintf_internal_r+0xed0>
   61630:	d9402b17 	ldw	r5,172(sp)
   61634:	d8801f17 	ldw	r2,124(sp)
   61638:	44000015 	stw	r16,0(r8)
   6163c:	1947883a 	add	r3,r3,r5
   61640:	10800044 	addi	r2,r2,1
   61644:	41400115 	stw	r5,4(r8)
   61648:	d8c02015 	stw	r3,128(sp)
   6164c:	d8801f15 	stw	r2,124(sp)
   61650:	010001c4 	movi	r4,7
   61654:	2081f516 	blt	r4,r2,61e2c <___vfprintf_internal_r+0x11e4>
   61658:	42000204 	addi	r8,r8,8
   6165c:	9480010c 	andi	r18,r18,4
   61660:	90003226 	beq	r18,zero,6172c <___vfprintf_internal_r+0xae4>
   61664:	d9403117 	ldw	r5,196(sp)
   61668:	d8802917 	ldw	r2,164(sp)
   6166c:	28a1c83a 	sub	r16,r5,r2
   61670:	04002e0e 	bge	zero,r16,6172c <___vfprintf_internal_r+0xae4>
   61674:	04400404 	movi	r17,16
   61678:	d8801f17 	ldw	r2,124(sp)
   6167c:	8c04c40e 	bge	r17,r16,62990 <___vfprintf_internal_r+0x1d48>
   61680:	014001f4 	movhi	r5,7
   61684:	29418a84 	addi	r5,r5,1578
   61688:	d9403515 	stw	r5,212(sp)
   6168c:	048001c4 	movi	r18,7
   61690:	dcc02d17 	ldw	r19,180(sp)
   61694:	00000306 	br	616a4 <___vfprintf_internal_r+0xa5c>
   61698:	843ffc04 	addi	r16,r16,-16
   6169c:	42000204 	addi	r8,r8,8
   616a0:	8c00130e 	bge	r17,r16,616f0 <___vfprintf_internal_r+0xaa8>
   616a4:	010001f4 	movhi	r4,7
   616a8:	18c00404 	addi	r3,r3,16
   616ac:	10800044 	addi	r2,r2,1
   616b0:	21018a84 	addi	r4,r4,1578
   616b4:	41000015 	stw	r4,0(r8)
   616b8:	44400115 	stw	r17,4(r8)
   616bc:	d8c02015 	stw	r3,128(sp)
   616c0:	d8801f15 	stw	r2,124(sp)
   616c4:	90bff40e 	bge	r18,r2,61698 <__alt_data_end+0xfffe1698>
   616c8:	d9801e04 	addi	r6,sp,120
   616cc:	b80b883a 	mov	r5,r23
   616d0:	9809883a 	mov	r4,r19
   616d4:	00682e00 	call	682e0 <__sprint_r>
   616d8:	103e5f1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   616dc:	843ffc04 	addi	r16,r16,-16
   616e0:	d8c02017 	ldw	r3,128(sp)
   616e4:	d8801f17 	ldw	r2,124(sp)
   616e8:	da000404 	addi	r8,sp,16
   616ec:	8c3fed16 	blt	r17,r16,616a4 <__alt_data_end+0xfffe16a4>
   616f0:	d9403517 	ldw	r5,212(sp)
   616f4:	1c07883a 	add	r3,r3,r16
   616f8:	10800044 	addi	r2,r2,1
   616fc:	41400015 	stw	r5,0(r8)
   61700:	44000115 	stw	r16,4(r8)
   61704:	d8c02015 	stw	r3,128(sp)
   61708:	d8801f15 	stw	r2,124(sp)
   6170c:	010001c4 	movi	r4,7
   61710:	2080060e 	bge	r4,r2,6172c <___vfprintf_internal_r+0xae4>
   61714:	d9002d17 	ldw	r4,180(sp)
   61718:	d9801e04 	addi	r6,sp,120
   6171c:	b80b883a 	mov	r5,r23
   61720:	00682e00 	call	682e0 <__sprint_r>
   61724:	103e4c1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61728:	d8c02017 	ldw	r3,128(sp)
   6172c:	d8803117 	ldw	r2,196(sp)
   61730:	d9002917 	ldw	r4,164(sp)
   61734:	1100010e 	bge	r2,r4,6173c <___vfprintf_internal_r+0xaf4>
   61738:	2005883a 	mov	r2,r4
   6173c:	d9402f17 	ldw	r5,188(sp)
   61740:	288b883a 	add	r5,r5,r2
   61744:	d9402f15 	stw	r5,188(sp)
   61748:	1801c01e 	bne	r3,zero,61e4c <___vfprintf_internal_r+0x1204>
   6174c:	a8800007 	ldb	r2,0(r21)
   61750:	d8001f15 	stw	zero,124(sp)
   61754:	da000404 	addi	r8,sp,16
   61758:	103d751e 	bne	r2,zero,60d30 <__alt_data_end+0xfffe0d30>
   6175c:	a823883a 	mov	r17,r21
   61760:	003d8b06 	br	60d90 <__alt_data_end+0xfffe0d90>
   61764:	8025883a 	mov	r18,r16
   61768:	dc002903 	ldbu	r16,164(sp)
   6176c:	e011883a 	mov	r8,fp
   61770:	84003fcc 	andi	r16,r16,255
   61774:	8005e51e 	bne	r16,zero,62f0c <___vfprintf_internal_r+0x22c4>
   61778:	94800414 	ori	r18,r18,16
   6177c:	9080080c 	andi	r2,r18,32
   61780:	10022b26 	beq	r2,zero,62030 <___vfprintf_internal_r+0x13e8>
   61784:	d9002e17 	ldw	r4,184(sp)
   61788:	d9402a17 	ldw	r5,168(sp)
   6178c:	d8002785 	stb	zero,158(sp)
   61790:	20c00204 	addi	r3,r4,8
   61794:	24c00017 	ldw	r19,0(r4)
   61798:	25800117 	ldw	r22,4(r4)
   6179c:	28042e16 	blt	r5,zero,62858 <___vfprintf_internal_r+0x1c10>
   617a0:	013fdfc4 	movi	r4,-129
   617a4:	9d84b03a 	or	r2,r19,r22
   617a8:	d8c02e15 	stw	r3,184(sp)
   617ac:	9124703a 	and	r18,r18,r4
   617b0:	0039883a 	mov	fp,zero
   617b4:	103e801e 	bne	r2,zero,611b8 <__alt_data_end+0xfffe11b8>
   617b8:	d9002a17 	ldw	r4,168(sp)
   617bc:	2002e01e 	bne	r4,zero,62340 <___vfprintf_internal_r+0x16f8>
   617c0:	d8002a15 	stw	zero,168(sp)
   617c4:	d8002b15 	stw	zero,172(sp)
   617c8:	dc001e04 	addi	r16,sp,120
   617cc:	003ef506 	br	613a4 <__alt_data_end+0xfffe13a4>
   617d0:	8025883a 	mov	r18,r16
   617d4:	dc002903 	ldbu	r16,164(sp)
   617d8:	e011883a 	mov	r8,fp
   617dc:	84003fcc 	andi	r16,r16,255
   617e0:	8005ba1e 	bne	r16,zero,62ecc <___vfprintf_internal_r+0x2284>
   617e4:	010001f4 	movhi	r4,7
   617e8:	21017a04 	addi	r4,r4,1512
   617ec:	d9003915 	stw	r4,228(sp)
   617f0:	9080080c 	andi	r2,r18,32
   617f4:	10006126 	beq	r2,zero,6197c <___vfprintf_internal_r+0xd34>
   617f8:	d9402e17 	ldw	r5,184(sp)
   617fc:	2cc00017 	ldw	r19,0(r5)
   61800:	2d800117 	ldw	r22,4(r5)
   61804:	29400204 	addi	r5,r5,8
   61808:	d9402e15 	stw	r5,184(sp)
   6180c:	9080004c 	andi	r2,r18,1
   61810:	1001ac26 	beq	r2,zero,61ec4 <___vfprintf_internal_r+0x127c>
   61814:	9d84b03a 	or	r2,r19,r22
   61818:	10038526 	beq	r2,zero,62630 <___vfprintf_internal_r+0x19e8>
   6181c:	d8c02a17 	ldw	r3,168(sp)
   61820:	00800c04 	movi	r2,48
   61824:	d8802705 	stb	r2,156(sp)
   61828:	dc402745 	stb	r17,157(sp)
   6182c:	d8002785 	stb	zero,158(sp)
   61830:	90800094 	ori	r2,r18,2
   61834:	18047916 	blt	r3,zero,62a1c <___vfprintf_internal_r+0x1dd4>
   61838:	00bfdfc4 	movi	r2,-129
   6183c:	90a4703a 	and	r18,r18,r2
   61840:	94800094 	ori	r18,r18,2
   61844:	0039883a 	mov	fp,zero
   61848:	d9003917 	ldw	r4,228(sp)
   6184c:	dc001e04 	addi	r16,sp,120
   61850:	988003cc 	andi	r2,r19,15
   61854:	b006973a 	slli	r3,r22,28
   61858:	2085883a 	add	r2,r4,r2
   6185c:	9826d13a 	srli	r19,r19,4
   61860:	10800003 	ldbu	r2,0(r2)
   61864:	b02cd13a 	srli	r22,r22,4
   61868:	843fffc4 	addi	r16,r16,-1
   6186c:	1ce6b03a 	or	r19,r3,r19
   61870:	80800005 	stb	r2,0(r16)
   61874:	9d84b03a 	or	r2,r19,r22
   61878:	103ff51e 	bne	r2,zero,61850 <__alt_data_end+0xfffe1850>
   6187c:	d8c02817 	ldw	r3,160(sp)
   61880:	1c07c83a 	sub	r3,r3,r16
   61884:	d8c02b15 	stw	r3,172(sp)
   61888:	003ec606 	br	613a4 <__alt_data_end+0xfffe13a4>
   6188c:	8025883a 	mov	r18,r16
   61890:	dc002903 	ldbu	r16,164(sp)
   61894:	e011883a 	mov	r8,fp
   61898:	84003fcc 	andi	r16,r16,255
   6189c:	803e9626 	beq	r16,zero,612f8 <__alt_data_end+0xfffe12f8>
   618a0:	d8c02b03 	ldbu	r3,172(sp)
   618a4:	d8c02785 	stb	r3,158(sp)
   618a8:	003e9306 	br	612f8 <__alt_data_end+0xfffe12f8>
   618ac:	00c00044 	movi	r3,1
   618b0:	d8c02905 	stb	r3,164(sp)
   618b4:	00c00ac4 	movi	r3,43
   618b8:	d8c02b05 	stb	r3,172(sp)
   618bc:	ac400007 	ldb	r17,0(r21)
   618c0:	003d4306 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   618c4:	84000814 	ori	r16,r16,32
   618c8:	ac400007 	ldb	r17,0(r21)
   618cc:	003d4006 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   618d0:	d8802e17 	ldw	r2,184(sp)
   618d4:	8025883a 	mov	r18,r16
   618d8:	d8002785 	stb	zero,158(sp)
   618dc:	14000017 	ldw	r16,0(r2)
   618e0:	e011883a 	mov	r8,fp
   618e4:	14c00104 	addi	r19,r2,4
   618e8:	80042d26 	beq	r16,zero,629a0 <___vfprintf_internal_r+0x1d58>
   618ec:	d8c02a17 	ldw	r3,168(sp)
   618f0:	1803e416 	blt	r3,zero,62884 <___vfprintf_internal_r+0x1c3c>
   618f4:	180d883a 	mov	r6,r3
   618f8:	000b883a 	mov	r5,zero
   618fc:	8009883a 	mov	r4,r16
   61900:	df003d15 	stw	fp,244(sp)
   61904:	00665800 	call	66580 <memchr>
   61908:	da003d17 	ldw	r8,244(sp)
   6190c:	10046826 	beq	r2,zero,62ab0 <___vfprintf_internal_r+0x1e68>
   61910:	1405c83a 	sub	r2,r2,r16
   61914:	d8802b15 	stw	r2,172(sp)
   61918:	1003e016 	blt	r2,zero,6289c <___vfprintf_internal_r+0x1c54>
   6191c:	df002783 	ldbu	fp,158(sp)
   61920:	d8802915 	stw	r2,164(sp)
   61924:	dcc02e15 	stw	r19,184(sp)
   61928:	d8002a15 	stw	zero,168(sp)
   6192c:	d8003215 	stw	zero,200(sp)
   61930:	003ea206 	br	613bc <__alt_data_end+0xfffe13bc>
   61934:	8025883a 	mov	r18,r16
   61938:	dc002903 	ldbu	r16,164(sp)
   6193c:	e011883a 	mov	r8,fp
   61940:	84003fcc 	andi	r16,r16,255
   61944:	803f8d26 	beq	r16,zero,6177c <__alt_data_end+0xfffe177c>
   61948:	d8c02b03 	ldbu	r3,172(sp)
   6194c:	d8c02785 	stb	r3,158(sp)
   61950:	003f8a06 	br	6177c <__alt_data_end+0xfffe177c>
   61954:	8025883a 	mov	r18,r16
   61958:	dc002903 	ldbu	r16,164(sp)
   6195c:	e011883a 	mov	r8,fp
   61960:	84003fcc 	andi	r16,r16,255
   61964:	8005661e 	bne	r16,zero,62f00 <___vfprintf_internal_r+0x22b8>
   61968:	010001f4 	movhi	r4,7
   6196c:	21017f04 	addi	r4,r4,1532
   61970:	d9003915 	stw	r4,228(sp)
   61974:	9080080c 	andi	r2,r18,32
   61978:	103f9f1e 	bne	r2,zero,617f8 <__alt_data_end+0xfffe17f8>
   6197c:	9080040c 	andi	r2,r18,16
   61980:	1002eb26 	beq	r2,zero,62530 <___vfprintf_internal_r+0x18e8>
   61984:	d8802e17 	ldw	r2,184(sp)
   61988:	002d883a 	mov	r22,zero
   6198c:	14c00017 	ldw	r19,0(r2)
   61990:	10800104 	addi	r2,r2,4
   61994:	d8802e15 	stw	r2,184(sp)
   61998:	003f9c06 	br	6180c <__alt_data_end+0xfffe180c>
   6199c:	d8802b07 	ldb	r2,172(sp)
   619a0:	1002e11e 	bne	r2,zero,62528 <___vfprintf_internal_r+0x18e0>
   619a4:	00c00044 	movi	r3,1
   619a8:	d8c02905 	stb	r3,164(sp)
   619ac:	00c00804 	movi	r3,32
   619b0:	d8c02b05 	stb	r3,172(sp)
   619b4:	ac400007 	ldb	r17,0(r21)
   619b8:	003d0506 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   619bc:	84000054 	ori	r16,r16,1
   619c0:	ac400007 	ldb	r17,0(r21)
   619c4:	003d0206 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   619c8:	8025883a 	mov	r18,r16
   619cc:	dc002903 	ldbu	r16,164(sp)
   619d0:	e011883a 	mov	r8,fp
   619d4:	84003fcc 	andi	r16,r16,255
   619d8:	803de726 	beq	r16,zero,61178 <__alt_data_end+0xfffe1178>
   619dc:	d8c02b03 	ldbu	r3,172(sp)
   619e0:	d8c02785 	stb	r3,158(sp)
   619e4:	003de406 	br	61178 <__alt_data_end+0xfffe1178>
   619e8:	84001014 	ori	r16,r16,64
   619ec:	ac400007 	ldb	r17,0(r21)
   619f0:	003cf706 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   619f4:	ac400007 	ldb	r17,0(r21)
   619f8:	00801b04 	movi	r2,108
   619fc:	88838f26 	beq	r17,r2,6283c <___vfprintf_internal_r+0x1bf4>
   61a00:	84000414 	ori	r16,r16,16
   61a04:	003cf206 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   61a08:	8025883a 	mov	r18,r16
   61a0c:	dc002903 	ldbu	r16,164(sp)
   61a10:	e011883a 	mov	r8,fp
   61a14:	84003fcc 	andi	r16,r16,255
   61a18:	80053f1e 	bne	r16,zero,62f18 <___vfprintf_internal_r+0x22d0>
   61a1c:	9080080c 	andi	r2,r18,32
   61a20:	1002d226 	beq	r2,zero,6256c <___vfprintf_internal_r+0x1924>
   61a24:	d9002e17 	ldw	r4,184(sp)
   61a28:	d9402f17 	ldw	r5,188(sp)
   61a2c:	20800017 	ldw	r2,0(r4)
   61a30:	2807d7fa 	srai	r3,r5,31
   61a34:	21000104 	addi	r4,r4,4
   61a38:	d9002e15 	stw	r4,184(sp)
   61a3c:	11400015 	stw	r5,0(r2)
   61a40:	10c00115 	stw	r3,4(r2)
   61a44:	003cb806 	br	60d28 <__alt_data_end+0xfffe0d28>
   61a48:	d8c02e17 	ldw	r3,184(sp)
   61a4c:	d9002e17 	ldw	r4,184(sp)
   61a50:	8025883a 	mov	r18,r16
   61a54:	18800017 	ldw	r2,0(r3)
   61a58:	21000104 	addi	r4,r4,4
   61a5c:	00c00044 	movi	r3,1
   61a60:	e011883a 	mov	r8,fp
   61a64:	d8c02915 	stw	r3,164(sp)
   61a68:	d8002785 	stb	zero,158(sp)
   61a6c:	d8801405 	stb	r2,80(sp)
   61a70:	d9002e15 	stw	r4,184(sp)
   61a74:	d8c02b15 	stw	r3,172(sp)
   61a78:	d8002a15 	stw	zero,168(sp)
   61a7c:	d8003215 	stw	zero,200(sp)
   61a80:	dc001404 	addi	r16,sp,80
   61a84:	0039883a 	mov	fp,zero
   61a88:	003e5306 	br	613d8 <__alt_data_end+0xfffe13d8>
   61a8c:	010001f4 	movhi	r4,7
   61a90:	21017f04 	addi	r4,r4,1532
   61a94:	0039883a 	mov	fp,zero
   61a98:	d9003915 	stw	r4,228(sp)
   61a9c:	04401e04 	movi	r17,120
   61aa0:	003f6906 	br	61848 <__alt_data_end+0xfffe1848>
   61aa4:	8025883a 	mov	r18,r16
   61aa8:	dc002903 	ldbu	r16,164(sp)
   61aac:	e011883a 	mov	r8,fp
   61ab0:	84003fcc 	andi	r16,r16,255
   61ab4:	8005081e 	bne	r16,zero,62ed8 <___vfprintf_internal_r+0x2290>
   61ab8:	883d6126 	beq	r17,zero,61040 <__alt_data_end+0xfffe1040>
   61abc:	00c00044 	movi	r3,1
   61ac0:	d8c02915 	stw	r3,164(sp)
   61ac4:	dc401405 	stb	r17,80(sp)
   61ac8:	d8002785 	stb	zero,158(sp)
   61acc:	003fe906 	br	61a74 <__alt_data_end+0xfffe1a74>
   61ad0:	014001f4 	movhi	r5,7
   61ad4:	29417f04 	addi	r5,r5,1532
   61ad8:	d9403915 	stw	r5,228(sp)
   61adc:	d8c02e15 	stw	r3,184(sp)
   61ae0:	1025883a 	mov	r18,r2
   61ae4:	04401e04 	movi	r17,120
   61ae8:	9d84b03a 	or	r2,r19,r22
   61aec:	1000fc1e 	bne	r2,zero,61ee0 <___vfprintf_internal_r+0x1298>
   61af0:	0039883a 	mov	fp,zero
   61af4:	00800084 	movi	r2,2
   61af8:	10803fcc 	andi	r2,r2,255
   61afc:	00c00044 	movi	r3,1
   61b00:	10c20f26 	beq	r2,r3,62340 <___vfprintf_internal_r+0x16f8>
   61b04:	00c00084 	movi	r3,2
   61b08:	10fd3326 	beq	r2,r3,60fd8 <__alt_data_end+0xfffe0fd8>
   61b0c:	003e0b06 	br	6133c <__alt_data_end+0xfffe133c>
   61b10:	d8c02017 	ldw	r3,128(sp)
   61b14:	003e7106 	br	614dc <__alt_data_end+0xfffe14dc>
   61b18:	00801944 	movi	r2,101
   61b1c:	14407e0e 	bge	r2,r17,61d18 <___vfprintf_internal_r+0x10d0>
   61b20:	d9003617 	ldw	r4,216(sp)
   61b24:	d9403817 	ldw	r5,224(sp)
   61b28:	000d883a 	mov	r6,zero
   61b2c:	000f883a 	mov	r7,zero
   61b30:	d8c03c15 	stw	r3,240(sp)
   61b34:	da003d15 	stw	r8,244(sp)
   61b38:	006c2180 	call	6c218 <__eqdf2>
   61b3c:	d8c03c17 	ldw	r3,240(sp)
   61b40:	da003d17 	ldw	r8,244(sp)
   61b44:	1000f71e 	bne	r2,zero,61f24 <___vfprintf_internal_r+0x12dc>
   61b48:	d8801f17 	ldw	r2,124(sp)
   61b4c:	010001f4 	movhi	r4,7
   61b50:	21018604 	addi	r4,r4,1560
   61b54:	18c00044 	addi	r3,r3,1
   61b58:	10800044 	addi	r2,r2,1
   61b5c:	41000015 	stw	r4,0(r8)
   61b60:	01000044 	movi	r4,1
   61b64:	41000115 	stw	r4,4(r8)
   61b68:	d8c02015 	stw	r3,128(sp)
   61b6c:	d8801f15 	stw	r2,124(sp)
   61b70:	010001c4 	movi	r4,7
   61b74:	2082b816 	blt	r4,r2,62658 <___vfprintf_internal_r+0x1a10>
   61b78:	42000204 	addi	r8,r8,8
   61b7c:	d8802617 	ldw	r2,152(sp)
   61b80:	d9403317 	ldw	r5,204(sp)
   61b84:	11400216 	blt	r2,r5,61b90 <___vfprintf_internal_r+0xf48>
   61b88:	9080004c 	andi	r2,r18,1
   61b8c:	103eb326 	beq	r2,zero,6165c <__alt_data_end+0xfffe165c>
   61b90:	d8803717 	ldw	r2,220(sp)
   61b94:	d9003417 	ldw	r4,208(sp)
   61b98:	d9403717 	ldw	r5,220(sp)
   61b9c:	1887883a 	add	r3,r3,r2
   61ba0:	d8801f17 	ldw	r2,124(sp)
   61ba4:	41000015 	stw	r4,0(r8)
   61ba8:	41400115 	stw	r5,4(r8)
   61bac:	10800044 	addi	r2,r2,1
   61bb0:	d8c02015 	stw	r3,128(sp)
   61bb4:	d8801f15 	stw	r2,124(sp)
   61bb8:	010001c4 	movi	r4,7
   61bbc:	20832916 	blt	r4,r2,62864 <___vfprintf_internal_r+0x1c1c>
   61bc0:	42000204 	addi	r8,r8,8
   61bc4:	d8803317 	ldw	r2,204(sp)
   61bc8:	143fffc4 	addi	r16,r2,-1
   61bcc:	043ea30e 	bge	zero,r16,6165c <__alt_data_end+0xfffe165c>
   61bd0:	04400404 	movi	r17,16
   61bd4:	d8801f17 	ldw	r2,124(sp)
   61bd8:	8c00880e 	bge	r17,r16,61dfc <___vfprintf_internal_r+0x11b4>
   61bdc:	014001f4 	movhi	r5,7
   61be0:	29418684 	addi	r5,r5,1562
   61be4:	d9402c15 	stw	r5,176(sp)
   61be8:	058001c4 	movi	r22,7
   61bec:	dcc02d17 	ldw	r19,180(sp)
   61bf0:	00000306 	br	61c00 <___vfprintf_internal_r+0xfb8>
   61bf4:	42000204 	addi	r8,r8,8
   61bf8:	843ffc04 	addi	r16,r16,-16
   61bfc:	8c00820e 	bge	r17,r16,61e08 <___vfprintf_internal_r+0x11c0>
   61c00:	18c00404 	addi	r3,r3,16
   61c04:	10800044 	addi	r2,r2,1
   61c08:	45000015 	stw	r20,0(r8)
   61c0c:	44400115 	stw	r17,4(r8)
   61c10:	d8c02015 	stw	r3,128(sp)
   61c14:	d8801f15 	stw	r2,124(sp)
   61c18:	b0bff60e 	bge	r22,r2,61bf4 <__alt_data_end+0xfffe1bf4>
   61c1c:	d9801e04 	addi	r6,sp,120
   61c20:	b80b883a 	mov	r5,r23
   61c24:	9809883a 	mov	r4,r19
   61c28:	00682e00 	call	682e0 <__sprint_r>
   61c2c:	103d0a1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61c30:	d8c02017 	ldw	r3,128(sp)
   61c34:	d8801f17 	ldw	r2,124(sp)
   61c38:	da000404 	addi	r8,sp,16
   61c3c:	003fee06 	br	61bf8 <__alt_data_end+0xfffe1bf8>
   61c40:	d9403117 	ldw	r5,196(sp)
   61c44:	d8802917 	ldw	r2,164(sp)
   61c48:	28adc83a 	sub	r22,r5,r2
   61c4c:	05be410e 	bge	zero,r22,61554 <__alt_data_end+0xfffe1554>
   61c50:	07000404 	movi	fp,16
   61c54:	d8801f17 	ldw	r2,124(sp)
   61c58:	e5838f0e 	bge	fp,r22,62a98 <___vfprintf_internal_r+0x1e50>
   61c5c:	014001f4 	movhi	r5,7
   61c60:	29418684 	addi	r5,r5,1562
   61c64:	dc403015 	stw	r17,192(sp)
   61c68:	d9402c15 	stw	r5,176(sp)
   61c6c:	b023883a 	mov	r17,r22
   61c70:	04c001c4 	movi	r19,7
   61c74:	a82d883a 	mov	r22,r21
   61c78:	902b883a 	mov	r21,r18
   61c7c:	8025883a 	mov	r18,r16
   61c80:	dc002d17 	ldw	r16,180(sp)
   61c84:	00000306 	br	61c94 <___vfprintf_internal_r+0x104c>
   61c88:	8c7ffc04 	addi	r17,r17,-16
   61c8c:	42000204 	addi	r8,r8,8
   61c90:	e440110e 	bge	fp,r17,61cd8 <___vfprintf_internal_r+0x1090>
   61c94:	18c00404 	addi	r3,r3,16
   61c98:	10800044 	addi	r2,r2,1
   61c9c:	45000015 	stw	r20,0(r8)
   61ca0:	47000115 	stw	fp,4(r8)
   61ca4:	d8c02015 	stw	r3,128(sp)
   61ca8:	d8801f15 	stw	r2,124(sp)
   61cac:	98bff60e 	bge	r19,r2,61c88 <__alt_data_end+0xfffe1c88>
   61cb0:	d9801e04 	addi	r6,sp,120
   61cb4:	b80b883a 	mov	r5,r23
   61cb8:	8009883a 	mov	r4,r16
   61cbc:	00682e00 	call	682e0 <__sprint_r>
   61cc0:	103ce51e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61cc4:	8c7ffc04 	addi	r17,r17,-16
   61cc8:	d8c02017 	ldw	r3,128(sp)
   61ccc:	d8801f17 	ldw	r2,124(sp)
   61cd0:	da000404 	addi	r8,sp,16
   61cd4:	e47fef16 	blt	fp,r17,61c94 <__alt_data_end+0xfffe1c94>
   61cd8:	9021883a 	mov	r16,r18
   61cdc:	a825883a 	mov	r18,r21
   61ce0:	b02b883a 	mov	r21,r22
   61ce4:	882d883a 	mov	r22,r17
   61ce8:	dc403017 	ldw	r17,192(sp)
   61cec:	d9002c17 	ldw	r4,176(sp)
   61cf0:	1d87883a 	add	r3,r3,r22
   61cf4:	10800044 	addi	r2,r2,1
   61cf8:	41000015 	stw	r4,0(r8)
   61cfc:	45800115 	stw	r22,4(r8)
   61d00:	d8c02015 	stw	r3,128(sp)
   61d04:	d8801f15 	stw	r2,124(sp)
   61d08:	010001c4 	movi	r4,7
   61d0c:	20818e16 	blt	r4,r2,62348 <___vfprintf_internal_r+0x1700>
   61d10:	42000204 	addi	r8,r8,8
   61d14:	003e0f06 	br	61554 <__alt_data_end+0xfffe1554>
   61d18:	d9403317 	ldw	r5,204(sp)
   61d1c:	00800044 	movi	r2,1
   61d20:	18c00044 	addi	r3,r3,1
   61d24:	1141530e 	bge	r2,r5,62274 <___vfprintf_internal_r+0x162c>
   61d28:	dc401f17 	ldw	r17,124(sp)
   61d2c:	00800044 	movi	r2,1
   61d30:	40800115 	stw	r2,4(r8)
   61d34:	8c400044 	addi	r17,r17,1
   61d38:	44000015 	stw	r16,0(r8)
   61d3c:	d8c02015 	stw	r3,128(sp)
   61d40:	dc401f15 	stw	r17,124(sp)
   61d44:	008001c4 	movi	r2,7
   61d48:	14416b16 	blt	r2,r17,622f8 <___vfprintf_internal_r+0x16b0>
   61d4c:	42000204 	addi	r8,r8,8
   61d50:	d8803717 	ldw	r2,220(sp)
   61d54:	d9003417 	ldw	r4,208(sp)
   61d58:	8c400044 	addi	r17,r17,1
   61d5c:	10c7883a 	add	r3,r2,r3
   61d60:	40800115 	stw	r2,4(r8)
   61d64:	41000015 	stw	r4,0(r8)
   61d68:	d8c02015 	stw	r3,128(sp)
   61d6c:	dc401f15 	stw	r17,124(sp)
   61d70:	008001c4 	movi	r2,7
   61d74:	14416916 	blt	r2,r17,6231c <___vfprintf_internal_r+0x16d4>
   61d78:	45800204 	addi	r22,r8,8
   61d7c:	d9003617 	ldw	r4,216(sp)
   61d80:	d9403817 	ldw	r5,224(sp)
   61d84:	000d883a 	mov	r6,zero
   61d88:	000f883a 	mov	r7,zero
   61d8c:	d8c03c15 	stw	r3,240(sp)
   61d90:	006c2180 	call	6c218 <__eqdf2>
   61d94:	d8c03c17 	ldw	r3,240(sp)
   61d98:	1000bc26 	beq	r2,zero,6208c <___vfprintf_internal_r+0x1444>
   61d9c:	d9403317 	ldw	r5,204(sp)
   61da0:	84000044 	addi	r16,r16,1
   61da4:	8c400044 	addi	r17,r17,1
   61da8:	28bfffc4 	addi	r2,r5,-1
   61dac:	1887883a 	add	r3,r3,r2
   61db0:	b0800115 	stw	r2,4(r22)
   61db4:	b4000015 	stw	r16,0(r22)
   61db8:	d8c02015 	stw	r3,128(sp)
   61dbc:	dc401f15 	stw	r17,124(sp)
   61dc0:	008001c4 	movi	r2,7
   61dc4:	14414316 	blt	r2,r17,622d4 <___vfprintf_internal_r+0x168c>
   61dc8:	b5800204 	addi	r22,r22,8
   61dcc:	d9003a17 	ldw	r4,232(sp)
   61dd0:	df0022c4 	addi	fp,sp,139
   61dd4:	8c400044 	addi	r17,r17,1
   61dd8:	20c7883a 	add	r3,r4,r3
   61ddc:	b7000015 	stw	fp,0(r22)
   61de0:	b1000115 	stw	r4,4(r22)
   61de4:	d8c02015 	stw	r3,128(sp)
   61de8:	dc401f15 	stw	r17,124(sp)
   61dec:	008001c4 	movi	r2,7
   61df0:	14400e16 	blt	r2,r17,61e2c <___vfprintf_internal_r+0x11e4>
   61df4:	b2000204 	addi	r8,r22,8
   61df8:	003e1806 	br	6165c <__alt_data_end+0xfffe165c>
   61dfc:	010001f4 	movhi	r4,7
   61e00:	21018684 	addi	r4,r4,1562
   61e04:	d9002c15 	stw	r4,176(sp)
   61e08:	d9002c17 	ldw	r4,176(sp)
   61e0c:	1c07883a 	add	r3,r3,r16
   61e10:	44000115 	stw	r16,4(r8)
   61e14:	41000015 	stw	r4,0(r8)
   61e18:	10800044 	addi	r2,r2,1
   61e1c:	d8c02015 	stw	r3,128(sp)
   61e20:	d8801f15 	stw	r2,124(sp)
   61e24:	010001c4 	movi	r4,7
   61e28:	20be0b0e 	bge	r4,r2,61658 <__alt_data_end+0xfffe1658>
   61e2c:	d9002d17 	ldw	r4,180(sp)
   61e30:	d9801e04 	addi	r6,sp,120
   61e34:	b80b883a 	mov	r5,r23
   61e38:	00682e00 	call	682e0 <__sprint_r>
   61e3c:	103c861e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61e40:	d8c02017 	ldw	r3,128(sp)
   61e44:	da000404 	addi	r8,sp,16
   61e48:	003e0406 	br	6165c <__alt_data_end+0xfffe165c>
   61e4c:	d9002d17 	ldw	r4,180(sp)
   61e50:	d9801e04 	addi	r6,sp,120
   61e54:	b80b883a 	mov	r5,r23
   61e58:	00682e00 	call	682e0 <__sprint_r>
   61e5c:	103e3b26 	beq	r2,zero,6174c <__alt_data_end+0xfffe174c>
   61e60:	003c7d06 	br	61058 <__alt_data_end+0xfffe1058>
   61e64:	d9002d17 	ldw	r4,180(sp)
   61e68:	d9801e04 	addi	r6,sp,120
   61e6c:	b80b883a 	mov	r5,r23
   61e70:	00682e00 	call	682e0 <__sprint_r>
   61e74:	103c781e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61e78:	d8c02017 	ldw	r3,128(sp)
   61e7c:	da000404 	addi	r8,sp,16
   61e80:	003de906 	br	61628 <__alt_data_end+0xfffe1628>
   61e84:	d9002d17 	ldw	r4,180(sp)
   61e88:	d9801e04 	addi	r6,sp,120
   61e8c:	b80b883a 	mov	r5,r23
   61e90:	00682e00 	call	682e0 <__sprint_r>
   61e94:	103c701e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61e98:	d8c02017 	ldw	r3,128(sp)
   61e9c:	da000404 	addi	r8,sp,16
   61ea0:	003d9b06 	br	61510 <__alt_data_end+0xfffe1510>
   61ea4:	d9002d17 	ldw	r4,180(sp)
   61ea8:	d9801e04 	addi	r6,sp,120
   61eac:	b80b883a 	mov	r5,r23
   61eb0:	00682e00 	call	682e0 <__sprint_r>
   61eb4:	103c681e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61eb8:	d8c02017 	ldw	r3,128(sp)
   61ebc:	da000404 	addi	r8,sp,16
   61ec0:	003da106 	br	61548 <__alt_data_end+0xfffe1548>
   61ec4:	d9402a17 	ldw	r5,168(sp)
   61ec8:	d8002785 	stb	zero,158(sp)
   61ecc:	283f0616 	blt	r5,zero,61ae8 <__alt_data_end+0xfffe1ae8>
   61ed0:	00ffdfc4 	movi	r3,-129
   61ed4:	9d84b03a 	or	r2,r19,r22
   61ed8:	90e4703a 	and	r18,r18,r3
   61edc:	103c3b26 	beq	r2,zero,60fcc <__alt_data_end+0xfffe0fcc>
   61ee0:	0039883a 	mov	fp,zero
   61ee4:	003e5806 	br	61848 <__alt_data_end+0xfffe1848>
   61ee8:	9080040c 	andi	r2,r18,16
   61eec:	1001b326 	beq	r2,zero,625bc <___vfprintf_internal_r+0x1974>
   61ef0:	d8c02e17 	ldw	r3,184(sp)
   61ef4:	d9002a17 	ldw	r4,168(sp)
   61ef8:	d8002785 	stb	zero,158(sp)
   61efc:	18800104 	addi	r2,r3,4
   61f00:	1cc00017 	ldw	r19,0(r3)
   61f04:	002d883a 	mov	r22,zero
   61f08:	2001b516 	blt	r4,zero,625e0 <___vfprintf_internal_r+0x1998>
   61f0c:	00ffdfc4 	movi	r3,-129
   61f10:	d8802e15 	stw	r2,184(sp)
   61f14:	90e4703a 	and	r18,r18,r3
   61f18:	983d0526 	beq	r19,zero,61330 <__alt_data_end+0xfffe1330>
   61f1c:	0039883a 	mov	fp,zero
   61f20:	003d0806 	br	61344 <__alt_data_end+0xfffe1344>
   61f24:	dc402617 	ldw	r17,152(sp)
   61f28:	0441d30e 	bge	zero,r17,62678 <___vfprintf_internal_r+0x1a30>
   61f2c:	dc403217 	ldw	r17,200(sp)
   61f30:	d8803317 	ldw	r2,204(sp)
   61f34:	1440010e 	bge	r2,r17,61f3c <___vfprintf_internal_r+0x12f4>
   61f38:	1023883a 	mov	r17,r2
   61f3c:	04400a0e 	bge	zero,r17,61f68 <___vfprintf_internal_r+0x1320>
   61f40:	d8801f17 	ldw	r2,124(sp)
   61f44:	1c47883a 	add	r3,r3,r17
   61f48:	44000015 	stw	r16,0(r8)
   61f4c:	10800044 	addi	r2,r2,1
   61f50:	44400115 	stw	r17,4(r8)
   61f54:	d8c02015 	stw	r3,128(sp)
   61f58:	d8801f15 	stw	r2,124(sp)
   61f5c:	010001c4 	movi	r4,7
   61f60:	20826516 	blt	r4,r2,628f8 <___vfprintf_internal_r+0x1cb0>
   61f64:	42000204 	addi	r8,r8,8
   61f68:	88026116 	blt	r17,zero,628f0 <___vfprintf_internal_r+0x1ca8>
   61f6c:	d9003217 	ldw	r4,200(sp)
   61f70:	2463c83a 	sub	r17,r4,r17
   61f74:	04407b0e 	bge	zero,r17,62164 <___vfprintf_internal_r+0x151c>
   61f78:	05800404 	movi	r22,16
   61f7c:	d8801f17 	ldw	r2,124(sp)
   61f80:	b4419d0e 	bge	r22,r17,625f8 <___vfprintf_internal_r+0x19b0>
   61f84:	010001f4 	movhi	r4,7
   61f88:	21018684 	addi	r4,r4,1562
   61f8c:	d9002c15 	stw	r4,176(sp)
   61f90:	070001c4 	movi	fp,7
   61f94:	dcc02d17 	ldw	r19,180(sp)
   61f98:	00000306 	br	61fa8 <___vfprintf_internal_r+0x1360>
   61f9c:	42000204 	addi	r8,r8,8
   61fa0:	8c7ffc04 	addi	r17,r17,-16
   61fa4:	b441970e 	bge	r22,r17,62604 <___vfprintf_internal_r+0x19bc>
   61fa8:	18c00404 	addi	r3,r3,16
   61fac:	10800044 	addi	r2,r2,1
   61fb0:	45000015 	stw	r20,0(r8)
   61fb4:	45800115 	stw	r22,4(r8)
   61fb8:	d8c02015 	stw	r3,128(sp)
   61fbc:	d8801f15 	stw	r2,124(sp)
   61fc0:	e0bff60e 	bge	fp,r2,61f9c <__alt_data_end+0xfffe1f9c>
   61fc4:	d9801e04 	addi	r6,sp,120
   61fc8:	b80b883a 	mov	r5,r23
   61fcc:	9809883a 	mov	r4,r19
   61fd0:	00682e00 	call	682e0 <__sprint_r>
   61fd4:	103c201e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61fd8:	d8c02017 	ldw	r3,128(sp)
   61fdc:	d8801f17 	ldw	r2,124(sp)
   61fe0:	da000404 	addi	r8,sp,16
   61fe4:	003fee06 	br	61fa0 <__alt_data_end+0xfffe1fa0>
   61fe8:	d9002d17 	ldw	r4,180(sp)
   61fec:	d9801e04 	addi	r6,sp,120
   61ff0:	b80b883a 	mov	r5,r23
   61ff4:	00682e00 	call	682e0 <__sprint_r>
   61ff8:	103c171e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   61ffc:	d8c02017 	ldw	r3,128(sp)
   62000:	df002787 	ldb	fp,158(sp)
   62004:	da000404 	addi	r8,sp,16
   62008:	003d3406 	br	614dc <__alt_data_end+0xfffe14dc>
   6200c:	9080040c 	andi	r2,r18,16
   62010:	10016126 	beq	r2,zero,62598 <___vfprintf_internal_r+0x1950>
   62014:	d9402e17 	ldw	r5,184(sp)
   62018:	2cc00017 	ldw	r19,0(r5)
   6201c:	29400104 	addi	r5,r5,4
   62020:	d9402e15 	stw	r5,184(sp)
   62024:	982dd7fa 	srai	r22,r19,31
   62028:	b005883a 	mov	r2,r22
   6202c:	003c5a06 	br	61198 <__alt_data_end+0xfffe1198>
   62030:	9080040c 	andi	r2,r18,16
   62034:	10003526 	beq	r2,zero,6210c <___vfprintf_internal_r+0x14c4>
   62038:	d8c02e17 	ldw	r3,184(sp)
   6203c:	d9002a17 	ldw	r4,168(sp)
   62040:	d8002785 	stb	zero,158(sp)
   62044:	18800104 	addi	r2,r3,4
   62048:	1cc00017 	ldw	r19,0(r3)
   6204c:	002d883a 	mov	r22,zero
   62050:	20003716 	blt	r4,zero,62130 <___vfprintf_internal_r+0x14e8>
   62054:	00ffdfc4 	movi	r3,-129
   62058:	d8802e15 	stw	r2,184(sp)
   6205c:	90e4703a 	and	r18,r18,r3
   62060:	0039883a 	mov	fp,zero
   62064:	983dd426 	beq	r19,zero,617b8 <__alt_data_end+0xfffe17b8>
   62068:	00800244 	movi	r2,9
   6206c:	14fc5336 	bltu	r2,r19,611bc <__alt_data_end+0xfffe11bc>
   62070:	d8c02817 	ldw	r3,160(sp)
   62074:	dc001dc4 	addi	r16,sp,119
   62078:	9cc00c04 	addi	r19,r19,48
   6207c:	1c07c83a 	sub	r3,r3,r16
   62080:	dcc01dc5 	stb	r19,119(sp)
   62084:	d8c02b15 	stw	r3,172(sp)
   62088:	003cc606 	br	613a4 <__alt_data_end+0xfffe13a4>
   6208c:	d8803317 	ldw	r2,204(sp)
   62090:	143fffc4 	addi	r16,r2,-1
   62094:	043f4d0e 	bge	zero,r16,61dcc <__alt_data_end+0xfffe1dcc>
   62098:	07000404 	movi	fp,16
   6209c:	e400810e 	bge	fp,r16,622a4 <___vfprintf_internal_r+0x165c>
   620a0:	014001f4 	movhi	r5,7
   620a4:	29418684 	addi	r5,r5,1562
   620a8:	d9402c15 	stw	r5,176(sp)
   620ac:	01c001c4 	movi	r7,7
   620b0:	dcc02d17 	ldw	r19,180(sp)
   620b4:	00000306 	br	620c4 <___vfprintf_internal_r+0x147c>
   620b8:	b5800204 	addi	r22,r22,8
   620bc:	843ffc04 	addi	r16,r16,-16
   620c0:	e4007b0e 	bge	fp,r16,622b0 <___vfprintf_internal_r+0x1668>
   620c4:	18c00404 	addi	r3,r3,16
   620c8:	8c400044 	addi	r17,r17,1
   620cc:	b5000015 	stw	r20,0(r22)
   620d0:	b7000115 	stw	fp,4(r22)
   620d4:	d8c02015 	stw	r3,128(sp)
   620d8:	dc401f15 	stw	r17,124(sp)
   620dc:	3c7ff60e 	bge	r7,r17,620b8 <__alt_data_end+0xfffe20b8>
   620e0:	d9801e04 	addi	r6,sp,120
   620e4:	b80b883a 	mov	r5,r23
   620e8:	9809883a 	mov	r4,r19
   620ec:	d9c03c15 	stw	r7,240(sp)
   620f0:	00682e00 	call	682e0 <__sprint_r>
   620f4:	d9c03c17 	ldw	r7,240(sp)
   620f8:	103bd71e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   620fc:	d8c02017 	ldw	r3,128(sp)
   62100:	dc401f17 	ldw	r17,124(sp)
   62104:	dd800404 	addi	r22,sp,16
   62108:	003fec06 	br	620bc <__alt_data_end+0xfffe20bc>
   6210c:	9080100c 	andi	r2,r18,64
   62110:	d8002785 	stb	zero,158(sp)
   62114:	10010e26 	beq	r2,zero,62550 <___vfprintf_internal_r+0x1908>
   62118:	d9402e17 	ldw	r5,184(sp)
   6211c:	d8c02a17 	ldw	r3,168(sp)
   62120:	002d883a 	mov	r22,zero
   62124:	28800104 	addi	r2,r5,4
   62128:	2cc0000b 	ldhu	r19,0(r5)
   6212c:	183fc90e 	bge	r3,zero,62054 <__alt_data_end+0xfffe2054>
   62130:	d8802e15 	stw	r2,184(sp)
   62134:	0039883a 	mov	fp,zero
   62138:	9d84b03a 	or	r2,r19,r22
   6213c:	103c1e1e 	bne	r2,zero,611b8 <__alt_data_end+0xfffe11b8>
   62140:	00800044 	movi	r2,1
   62144:	003e6c06 	br	61af8 <__alt_data_end+0xfffe1af8>
   62148:	d9002d17 	ldw	r4,180(sp)
   6214c:	d9801e04 	addi	r6,sp,120
   62150:	b80b883a 	mov	r5,r23
   62154:	00682e00 	call	682e0 <__sprint_r>
   62158:	103bbf1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6215c:	d8c02017 	ldw	r3,128(sp)
   62160:	da000404 	addi	r8,sp,16
   62164:	d9003217 	ldw	r4,200(sp)
   62168:	d8802617 	ldw	r2,152(sp)
   6216c:	d9403317 	ldw	r5,204(sp)
   62170:	8123883a 	add	r17,r16,r4
   62174:	11400216 	blt	r2,r5,62180 <___vfprintf_internal_r+0x1538>
   62178:	9100004c 	andi	r4,r18,1
   6217c:	20000d26 	beq	r4,zero,621b4 <___vfprintf_internal_r+0x156c>
   62180:	d9003717 	ldw	r4,220(sp)
   62184:	d9403417 	ldw	r5,208(sp)
   62188:	1907883a 	add	r3,r3,r4
   6218c:	d9001f17 	ldw	r4,124(sp)
   62190:	41400015 	stw	r5,0(r8)
   62194:	d9403717 	ldw	r5,220(sp)
   62198:	21000044 	addi	r4,r4,1
   6219c:	d8c02015 	stw	r3,128(sp)
   621a0:	41400115 	stw	r5,4(r8)
   621a4:	d9001f15 	stw	r4,124(sp)
   621a8:	014001c4 	movi	r5,7
   621ac:	2901e816 	blt	r5,r4,62950 <___vfprintf_internal_r+0x1d08>
   621b0:	42000204 	addi	r8,r8,8
   621b4:	d9003317 	ldw	r4,204(sp)
   621b8:	8121883a 	add	r16,r16,r4
   621bc:	2085c83a 	sub	r2,r4,r2
   621c0:	8461c83a 	sub	r16,r16,r17
   621c4:	1400010e 	bge	r2,r16,621cc <___vfprintf_internal_r+0x1584>
   621c8:	1021883a 	mov	r16,r2
   621cc:	04000a0e 	bge	zero,r16,621f8 <___vfprintf_internal_r+0x15b0>
   621d0:	d9001f17 	ldw	r4,124(sp)
   621d4:	1c07883a 	add	r3,r3,r16
   621d8:	44400015 	stw	r17,0(r8)
   621dc:	21000044 	addi	r4,r4,1
   621e0:	44000115 	stw	r16,4(r8)
   621e4:	d8c02015 	stw	r3,128(sp)
   621e8:	d9001f15 	stw	r4,124(sp)
   621ec:	014001c4 	movi	r5,7
   621f0:	2901fb16 	blt	r5,r4,629e0 <___vfprintf_internal_r+0x1d98>
   621f4:	42000204 	addi	r8,r8,8
   621f8:	8001f716 	blt	r16,zero,629d8 <___vfprintf_internal_r+0x1d90>
   621fc:	1421c83a 	sub	r16,r2,r16
   62200:	043d160e 	bge	zero,r16,6165c <__alt_data_end+0xfffe165c>
   62204:	04400404 	movi	r17,16
   62208:	d8801f17 	ldw	r2,124(sp)
   6220c:	8c3efb0e 	bge	r17,r16,61dfc <__alt_data_end+0xfffe1dfc>
   62210:	014001f4 	movhi	r5,7
   62214:	29418684 	addi	r5,r5,1562
   62218:	d9402c15 	stw	r5,176(sp)
   6221c:	058001c4 	movi	r22,7
   62220:	dcc02d17 	ldw	r19,180(sp)
   62224:	00000306 	br	62234 <___vfprintf_internal_r+0x15ec>
   62228:	42000204 	addi	r8,r8,8
   6222c:	843ffc04 	addi	r16,r16,-16
   62230:	8c3ef50e 	bge	r17,r16,61e08 <__alt_data_end+0xfffe1e08>
   62234:	18c00404 	addi	r3,r3,16
   62238:	10800044 	addi	r2,r2,1
   6223c:	45000015 	stw	r20,0(r8)
   62240:	44400115 	stw	r17,4(r8)
   62244:	d8c02015 	stw	r3,128(sp)
   62248:	d8801f15 	stw	r2,124(sp)
   6224c:	b0bff60e 	bge	r22,r2,62228 <__alt_data_end+0xfffe2228>
   62250:	d9801e04 	addi	r6,sp,120
   62254:	b80b883a 	mov	r5,r23
   62258:	9809883a 	mov	r4,r19
   6225c:	00682e00 	call	682e0 <__sprint_r>
   62260:	103b7d1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62264:	d8c02017 	ldw	r3,128(sp)
   62268:	d8801f17 	ldw	r2,124(sp)
   6226c:	da000404 	addi	r8,sp,16
   62270:	003fee06 	br	6222c <__alt_data_end+0xfffe222c>
   62274:	9088703a 	and	r4,r18,r2
   62278:	203eab1e 	bne	r4,zero,61d28 <__alt_data_end+0xfffe1d28>
   6227c:	dc401f17 	ldw	r17,124(sp)
   62280:	40800115 	stw	r2,4(r8)
   62284:	44000015 	stw	r16,0(r8)
   62288:	8c400044 	addi	r17,r17,1
   6228c:	d8c02015 	stw	r3,128(sp)
   62290:	dc401f15 	stw	r17,124(sp)
   62294:	008001c4 	movi	r2,7
   62298:	14400e16 	blt	r2,r17,622d4 <___vfprintf_internal_r+0x168c>
   6229c:	45800204 	addi	r22,r8,8
   622a0:	003eca06 	br	61dcc <__alt_data_end+0xfffe1dcc>
   622a4:	010001f4 	movhi	r4,7
   622a8:	21018684 	addi	r4,r4,1562
   622ac:	d9002c15 	stw	r4,176(sp)
   622b0:	d8802c17 	ldw	r2,176(sp)
   622b4:	1c07883a 	add	r3,r3,r16
   622b8:	8c400044 	addi	r17,r17,1
   622bc:	b0800015 	stw	r2,0(r22)
   622c0:	b4000115 	stw	r16,4(r22)
   622c4:	d8c02015 	stw	r3,128(sp)
   622c8:	dc401f15 	stw	r17,124(sp)
   622cc:	008001c4 	movi	r2,7
   622d0:	147ebd0e 	bge	r2,r17,61dc8 <__alt_data_end+0xfffe1dc8>
   622d4:	d9002d17 	ldw	r4,180(sp)
   622d8:	d9801e04 	addi	r6,sp,120
   622dc:	b80b883a 	mov	r5,r23
   622e0:	00682e00 	call	682e0 <__sprint_r>
   622e4:	103b5c1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   622e8:	d8c02017 	ldw	r3,128(sp)
   622ec:	dc401f17 	ldw	r17,124(sp)
   622f0:	dd800404 	addi	r22,sp,16
   622f4:	003eb506 	br	61dcc <__alt_data_end+0xfffe1dcc>
   622f8:	d9002d17 	ldw	r4,180(sp)
   622fc:	d9801e04 	addi	r6,sp,120
   62300:	b80b883a 	mov	r5,r23
   62304:	00682e00 	call	682e0 <__sprint_r>
   62308:	103b531e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6230c:	d8c02017 	ldw	r3,128(sp)
   62310:	dc401f17 	ldw	r17,124(sp)
   62314:	da000404 	addi	r8,sp,16
   62318:	003e8d06 	br	61d50 <__alt_data_end+0xfffe1d50>
   6231c:	d9002d17 	ldw	r4,180(sp)
   62320:	d9801e04 	addi	r6,sp,120
   62324:	b80b883a 	mov	r5,r23
   62328:	00682e00 	call	682e0 <__sprint_r>
   6232c:	103b4a1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62330:	d8c02017 	ldw	r3,128(sp)
   62334:	dc401f17 	ldw	r17,124(sp)
   62338:	dd800404 	addi	r22,sp,16
   6233c:	003e8f06 	br	61d7c <__alt_data_end+0xfffe1d7c>
   62340:	0027883a 	mov	r19,zero
   62344:	003f4a06 	br	62070 <__alt_data_end+0xfffe2070>
   62348:	d9002d17 	ldw	r4,180(sp)
   6234c:	d9801e04 	addi	r6,sp,120
   62350:	b80b883a 	mov	r5,r23
   62354:	00682e00 	call	682e0 <__sprint_r>
   62358:	103b3f1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6235c:	d8c02017 	ldw	r3,128(sp)
   62360:	da000404 	addi	r8,sp,16
   62364:	003c7b06 	br	61554 <__alt_data_end+0xfffe1554>
   62368:	d9402a17 	ldw	r5,168(sp)
   6236c:	04e7c83a 	sub	r19,zero,r19
   62370:	07000b44 	movi	fp,45
   62374:	9804c03a 	cmpne	r2,r19,zero
   62378:	05adc83a 	sub	r22,zero,r22
   6237c:	df002785 	stb	fp,158(sp)
   62380:	b0adc83a 	sub	r22,r22,r2
   62384:	28017b16 	blt	r5,zero,62974 <___vfprintf_internal_r+0x1d2c>
   62388:	00bfdfc4 	movi	r2,-129
   6238c:	90a4703a 	and	r18,r18,r2
   62390:	003b8906 	br	611b8 <__alt_data_end+0xfffe11b8>
   62394:	d9003617 	ldw	r4,216(sp)
   62398:	d9403817 	ldw	r5,224(sp)
   6239c:	da003d15 	stw	r8,244(sp)
   623a0:	0067f040 	call	67f04 <__fpclassifyd>
   623a4:	da003d17 	ldw	r8,244(sp)
   623a8:	1000f026 	beq	r2,zero,6276c <___vfprintf_internal_r+0x1b24>
   623ac:	d9002a17 	ldw	r4,168(sp)
   623b0:	05bff7c4 	movi	r22,-33
   623b4:	00bfffc4 	movi	r2,-1
   623b8:	8dac703a 	and	r22,r17,r22
   623bc:	20820026 	beq	r4,r2,62bc0 <___vfprintf_internal_r+0x1f78>
   623c0:	008011c4 	movi	r2,71
   623c4:	b081f726 	beq	r22,r2,62ba4 <___vfprintf_internal_r+0x1f5c>
   623c8:	d9003817 	ldw	r4,224(sp)
   623cc:	90c04014 	ori	r3,r18,256
   623d0:	d8c02c15 	stw	r3,176(sp)
   623d4:	20021516 	blt	r4,zero,62c2c <___vfprintf_internal_r+0x1fe4>
   623d8:	dcc03817 	ldw	r19,224(sp)
   623dc:	d8002905 	stb	zero,164(sp)
   623e0:	00801984 	movi	r2,102
   623e4:	8881f926 	beq	r17,r2,62bcc <___vfprintf_internal_r+0x1f84>
   623e8:	00801184 	movi	r2,70
   623ec:	88821c26 	beq	r17,r2,62c60 <___vfprintf_internal_r+0x2018>
   623f0:	00801144 	movi	r2,69
   623f4:	b081ef26 	beq	r22,r2,62bb4 <___vfprintf_internal_r+0x1f6c>
   623f8:	d8c02a17 	ldw	r3,168(sp)
   623fc:	d8802104 	addi	r2,sp,132
   62400:	d8800315 	stw	r2,12(sp)
   62404:	d9403617 	ldw	r5,216(sp)
   62408:	d8802504 	addi	r2,sp,148
   6240c:	d9002d17 	ldw	r4,180(sp)
   62410:	d8800215 	stw	r2,8(sp)
   62414:	d8802604 	addi	r2,sp,152
   62418:	d8c00015 	stw	r3,0(sp)
   6241c:	d8800115 	stw	r2,4(sp)
   62420:	01c00084 	movi	r7,2
   62424:	980d883a 	mov	r6,r19
   62428:	d8c03c15 	stw	r3,240(sp)
   6242c:	da003d15 	stw	r8,244(sp)
   62430:	00633780 	call	63378 <_dtoa_r>
   62434:	1021883a 	mov	r16,r2
   62438:	008019c4 	movi	r2,103
   6243c:	d8c03c17 	ldw	r3,240(sp)
   62440:	da003d17 	ldw	r8,244(sp)
   62444:	88817126 	beq	r17,r2,62a0c <___vfprintf_internal_r+0x1dc4>
   62448:	008011c4 	movi	r2,71
   6244c:	88829126 	beq	r17,r2,62e94 <___vfprintf_internal_r+0x224c>
   62450:	80f9883a 	add	fp,r16,r3
   62454:	d9003617 	ldw	r4,216(sp)
   62458:	000d883a 	mov	r6,zero
   6245c:	000f883a 	mov	r7,zero
   62460:	980b883a 	mov	r5,r19
   62464:	da003d15 	stw	r8,244(sp)
   62468:	006c2180 	call	6c218 <__eqdf2>
   6246c:	da003d17 	ldw	r8,244(sp)
   62470:	10018d26 	beq	r2,zero,62aa8 <___vfprintf_internal_r+0x1e60>
   62474:	d8802117 	ldw	r2,132(sp)
   62478:	1700062e 	bgeu	r2,fp,62494 <___vfprintf_internal_r+0x184c>
   6247c:	01000c04 	movi	r4,48
   62480:	10c00044 	addi	r3,r2,1
   62484:	d8c02115 	stw	r3,132(sp)
   62488:	11000005 	stb	r4,0(r2)
   6248c:	d8802117 	ldw	r2,132(sp)
   62490:	173ffb36 	bltu	r2,fp,62480 <__alt_data_end+0xfffe2480>
   62494:	1405c83a 	sub	r2,r2,r16
   62498:	d8803315 	stw	r2,204(sp)
   6249c:	008011c4 	movi	r2,71
   624a0:	b0817626 	beq	r22,r2,62a7c <___vfprintf_internal_r+0x1e34>
   624a4:	00801944 	movi	r2,101
   624a8:	1442800e 	bge	r2,r17,62eac <___vfprintf_internal_r+0x2264>
   624ac:	d8c02617 	ldw	r3,152(sp)
   624b0:	00801984 	movi	r2,102
   624b4:	d8c03215 	stw	r3,200(sp)
   624b8:	8881fe26 	beq	r17,r2,62cb4 <___vfprintf_internal_r+0x206c>
   624bc:	d8c03217 	ldw	r3,200(sp)
   624c0:	d9003317 	ldw	r4,204(sp)
   624c4:	1901dd16 	blt	r3,r4,62c3c <___vfprintf_internal_r+0x1ff4>
   624c8:	9480004c 	andi	r18,r18,1
   624cc:	90022b1e 	bne	r18,zero,62d7c <___vfprintf_internal_r+0x2134>
   624d0:	1805883a 	mov	r2,r3
   624d4:	18028316 	blt	r3,zero,62ee4 <___vfprintf_internal_r+0x229c>
   624d8:	d8c03217 	ldw	r3,200(sp)
   624dc:	044019c4 	movi	r17,103
   624e0:	d8c02b15 	stw	r3,172(sp)
   624e4:	df002907 	ldb	fp,164(sp)
   624e8:	e001531e 	bne	fp,zero,62a38 <___vfprintf_internal_r+0x1df0>
   624ec:	df002783 	ldbu	fp,158(sp)
   624f0:	d8802915 	stw	r2,164(sp)
   624f4:	dc802c17 	ldw	r18,176(sp)
   624f8:	d8002a15 	stw	zero,168(sp)
   624fc:	003baf06 	br	613bc <__alt_data_end+0xfffe13bc>
   62500:	d8c02e17 	ldw	r3,184(sp)
   62504:	d9002e17 	ldw	r4,184(sp)
   62508:	d9402e17 	ldw	r5,184(sp)
   6250c:	18c00017 	ldw	r3,0(r3)
   62510:	21000117 	ldw	r4,4(r4)
   62514:	29400204 	addi	r5,r5,8
   62518:	d8c03615 	stw	r3,216(sp)
   6251c:	d9003815 	stw	r4,224(sp)
   62520:	d9402e15 	stw	r5,184(sp)
   62524:	003b5006 	br	61268 <__alt_data_end+0xfffe1268>
   62528:	ac400007 	ldb	r17,0(r21)
   6252c:	003a2806 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   62530:	9080100c 	andi	r2,r18,64
   62534:	1000a826 	beq	r2,zero,627d8 <___vfprintf_internal_r+0x1b90>
   62538:	d8c02e17 	ldw	r3,184(sp)
   6253c:	002d883a 	mov	r22,zero
   62540:	1cc0000b 	ldhu	r19,0(r3)
   62544:	18c00104 	addi	r3,r3,4
   62548:	d8c02e15 	stw	r3,184(sp)
   6254c:	003caf06 	br	6180c <__alt_data_end+0xfffe180c>
   62550:	d9002e17 	ldw	r4,184(sp)
   62554:	d9402a17 	ldw	r5,168(sp)
   62558:	002d883a 	mov	r22,zero
   6255c:	20800104 	addi	r2,r4,4
   62560:	24c00017 	ldw	r19,0(r4)
   62564:	283ebb0e 	bge	r5,zero,62054 <__alt_data_end+0xfffe2054>
   62568:	003ef106 	br	62130 <__alt_data_end+0xfffe2130>
   6256c:	9080040c 	andi	r2,r18,16
   62570:	1000921e 	bne	r2,zero,627bc <___vfprintf_internal_r+0x1b74>
   62574:	9480100c 	andi	r18,r18,64
   62578:	90013926 	beq	r18,zero,62a60 <___vfprintf_internal_r+0x1e18>
   6257c:	d9402e17 	ldw	r5,184(sp)
   62580:	d8c02f17 	ldw	r3,188(sp)
   62584:	28800017 	ldw	r2,0(r5)
   62588:	29400104 	addi	r5,r5,4
   6258c:	d9402e15 	stw	r5,184(sp)
   62590:	10c0000d 	sth	r3,0(r2)
   62594:	0039e406 	br	60d28 <__alt_data_end+0xfffe0d28>
   62598:	9080100c 	andi	r2,r18,64
   6259c:	10008026 	beq	r2,zero,627a0 <___vfprintf_internal_r+0x1b58>
   625a0:	d8802e17 	ldw	r2,184(sp)
   625a4:	14c0000f 	ldh	r19,0(r2)
   625a8:	10800104 	addi	r2,r2,4
   625ac:	d8802e15 	stw	r2,184(sp)
   625b0:	982dd7fa 	srai	r22,r19,31
   625b4:	b005883a 	mov	r2,r22
   625b8:	003af706 	br	61198 <__alt_data_end+0xfffe1198>
   625bc:	9080100c 	andi	r2,r18,64
   625c0:	d8002785 	stb	zero,158(sp)
   625c4:	10008a1e 	bne	r2,zero,627f0 <___vfprintf_internal_r+0x1ba8>
   625c8:	d9002e17 	ldw	r4,184(sp)
   625cc:	d9402a17 	ldw	r5,168(sp)
   625d0:	002d883a 	mov	r22,zero
   625d4:	20800104 	addi	r2,r4,4
   625d8:	24c00017 	ldw	r19,0(r4)
   625dc:	283e4b0e 	bge	r5,zero,61f0c <__alt_data_end+0xfffe1f0c>
   625e0:	9d86b03a 	or	r3,r19,r22
   625e4:	d8802e15 	stw	r2,184(sp)
   625e8:	183e4c1e 	bne	r3,zero,61f1c <__alt_data_end+0xfffe1f1c>
   625ec:	0039883a 	mov	fp,zero
   625f0:	0005883a 	mov	r2,zero
   625f4:	003d4006 	br	61af8 <__alt_data_end+0xfffe1af8>
   625f8:	014001f4 	movhi	r5,7
   625fc:	29418684 	addi	r5,r5,1562
   62600:	d9402c15 	stw	r5,176(sp)
   62604:	d9402c17 	ldw	r5,176(sp)
   62608:	1c47883a 	add	r3,r3,r17
   6260c:	10800044 	addi	r2,r2,1
   62610:	41400015 	stw	r5,0(r8)
   62614:	44400115 	stw	r17,4(r8)
   62618:	d8c02015 	stw	r3,128(sp)
   6261c:	d8801f15 	stw	r2,124(sp)
   62620:	010001c4 	movi	r4,7
   62624:	20bec816 	blt	r4,r2,62148 <__alt_data_end+0xfffe2148>
   62628:	42000204 	addi	r8,r8,8
   6262c:	003ecd06 	br	62164 <__alt_data_end+0xfffe2164>
   62630:	d9002a17 	ldw	r4,168(sp)
   62634:	d8002785 	stb	zero,158(sp)
   62638:	203d2d16 	blt	r4,zero,61af0 <__alt_data_end+0xfffe1af0>
   6263c:	00bfdfc4 	movi	r2,-129
   62640:	90a4703a 	and	r18,r18,r2
   62644:	003a6106 	br	60fcc <__alt_data_end+0xfffe0fcc>
   62648:	010001f4 	movhi	r4,7
   6264c:	21018684 	addi	r4,r4,1562
   62650:	d9002c15 	stw	r4,176(sp)
   62654:	003bea06 	br	61600 <__alt_data_end+0xfffe1600>
   62658:	d9002d17 	ldw	r4,180(sp)
   6265c:	d9801e04 	addi	r6,sp,120
   62660:	b80b883a 	mov	r5,r23
   62664:	00682e00 	call	682e0 <__sprint_r>
   62668:	103a7b1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6266c:	d8c02017 	ldw	r3,128(sp)
   62670:	da000404 	addi	r8,sp,16
   62674:	003d4106 	br	61b7c <__alt_data_end+0xfffe1b7c>
   62678:	d8801f17 	ldw	r2,124(sp)
   6267c:	014001f4 	movhi	r5,7
   62680:	01000044 	movi	r4,1
   62684:	18c00044 	addi	r3,r3,1
   62688:	10800044 	addi	r2,r2,1
   6268c:	29418604 	addi	r5,r5,1560
   62690:	41000115 	stw	r4,4(r8)
   62694:	41400015 	stw	r5,0(r8)
   62698:	d8c02015 	stw	r3,128(sp)
   6269c:	d8801f15 	stw	r2,124(sp)
   626a0:	010001c4 	movi	r4,7
   626a4:	20805c16 	blt	r4,r2,62818 <___vfprintf_internal_r+0x1bd0>
   626a8:	42000204 	addi	r8,r8,8
   626ac:	8800041e 	bne	r17,zero,626c0 <___vfprintf_internal_r+0x1a78>
   626b0:	d8803317 	ldw	r2,204(sp)
   626b4:	1000021e 	bne	r2,zero,626c0 <___vfprintf_internal_r+0x1a78>
   626b8:	9080004c 	andi	r2,r18,1
   626bc:	103be726 	beq	r2,zero,6165c <__alt_data_end+0xfffe165c>
   626c0:	d9003717 	ldw	r4,220(sp)
   626c4:	d8801f17 	ldw	r2,124(sp)
   626c8:	d9403417 	ldw	r5,208(sp)
   626cc:	20c7883a 	add	r3,r4,r3
   626d0:	10800044 	addi	r2,r2,1
   626d4:	41000115 	stw	r4,4(r8)
   626d8:	41400015 	stw	r5,0(r8)
   626dc:	d8c02015 	stw	r3,128(sp)
   626e0:	d8801f15 	stw	r2,124(sp)
   626e4:	010001c4 	movi	r4,7
   626e8:	20812116 	blt	r4,r2,62b70 <___vfprintf_internal_r+0x1f28>
   626ec:	42000204 	addi	r8,r8,8
   626f0:	0463c83a 	sub	r17,zero,r17
   626f4:	0440730e 	bge	zero,r17,628c4 <___vfprintf_internal_r+0x1c7c>
   626f8:	05800404 	movi	r22,16
   626fc:	b440860e 	bge	r22,r17,62918 <___vfprintf_internal_r+0x1cd0>
   62700:	014001f4 	movhi	r5,7
   62704:	29418684 	addi	r5,r5,1562
   62708:	d9402c15 	stw	r5,176(sp)
   6270c:	070001c4 	movi	fp,7
   62710:	dcc02d17 	ldw	r19,180(sp)
   62714:	00000306 	br	62724 <___vfprintf_internal_r+0x1adc>
   62718:	42000204 	addi	r8,r8,8
   6271c:	8c7ffc04 	addi	r17,r17,-16
   62720:	b440800e 	bge	r22,r17,62924 <___vfprintf_internal_r+0x1cdc>
   62724:	18c00404 	addi	r3,r3,16
   62728:	10800044 	addi	r2,r2,1
   6272c:	45000015 	stw	r20,0(r8)
   62730:	45800115 	stw	r22,4(r8)
   62734:	d8c02015 	stw	r3,128(sp)
   62738:	d8801f15 	stw	r2,124(sp)
   6273c:	e0bff60e 	bge	fp,r2,62718 <__alt_data_end+0xfffe2718>
   62740:	d9801e04 	addi	r6,sp,120
   62744:	b80b883a 	mov	r5,r23
   62748:	9809883a 	mov	r4,r19
   6274c:	00682e00 	call	682e0 <__sprint_r>
   62750:	103a411e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62754:	d8c02017 	ldw	r3,128(sp)
   62758:	d8801f17 	ldw	r2,124(sp)
   6275c:	da000404 	addi	r8,sp,16
   62760:	003fee06 	br	6271c <__alt_data_end+0xfffe271c>
   62764:	00bfffc4 	movi	r2,-1
   62768:	003a3f06 	br	61068 <__alt_data_end+0xfffe1068>
   6276c:	008011c4 	movi	r2,71
   62770:	1440b816 	blt	r2,r17,62a54 <___vfprintf_internal_r+0x1e0c>
   62774:	040001f4 	movhi	r16,7
   62778:	84017804 	addi	r16,r16,1504
   6277c:	00c000c4 	movi	r3,3
   62780:	00bfdfc4 	movi	r2,-129
   62784:	d8c02915 	stw	r3,164(sp)
   62788:	90a4703a 	and	r18,r18,r2
   6278c:	df002783 	ldbu	fp,158(sp)
   62790:	d8c02b15 	stw	r3,172(sp)
   62794:	d8002a15 	stw	zero,168(sp)
   62798:	d8003215 	stw	zero,200(sp)
   6279c:	003b0706 	br	613bc <__alt_data_end+0xfffe13bc>
   627a0:	d8c02e17 	ldw	r3,184(sp)
   627a4:	1cc00017 	ldw	r19,0(r3)
   627a8:	18c00104 	addi	r3,r3,4
   627ac:	d8c02e15 	stw	r3,184(sp)
   627b0:	982dd7fa 	srai	r22,r19,31
   627b4:	b005883a 	mov	r2,r22
   627b8:	003a7706 	br	61198 <__alt_data_end+0xfffe1198>
   627bc:	d8c02e17 	ldw	r3,184(sp)
   627c0:	d9002f17 	ldw	r4,188(sp)
   627c4:	18800017 	ldw	r2,0(r3)
   627c8:	18c00104 	addi	r3,r3,4
   627cc:	d8c02e15 	stw	r3,184(sp)
   627d0:	11000015 	stw	r4,0(r2)
   627d4:	00395406 	br	60d28 <__alt_data_end+0xfffe0d28>
   627d8:	d9002e17 	ldw	r4,184(sp)
   627dc:	002d883a 	mov	r22,zero
   627e0:	24c00017 	ldw	r19,0(r4)
   627e4:	21000104 	addi	r4,r4,4
   627e8:	d9002e15 	stw	r4,184(sp)
   627ec:	003c0706 	br	6180c <__alt_data_end+0xfffe180c>
   627f0:	d9402e17 	ldw	r5,184(sp)
   627f4:	d8c02a17 	ldw	r3,168(sp)
   627f8:	002d883a 	mov	r22,zero
   627fc:	28800104 	addi	r2,r5,4
   62800:	2cc0000b 	ldhu	r19,0(r5)
   62804:	183dc10e 	bge	r3,zero,61f0c <__alt_data_end+0xfffe1f0c>
   62808:	003f7506 	br	625e0 <__alt_data_end+0xfffe25e0>
   6280c:	040001f4 	movhi	r16,7
   62810:	84017604 	addi	r16,r16,1496
   62814:	003aa706 	br	612b4 <__alt_data_end+0xfffe12b4>
   62818:	d9002d17 	ldw	r4,180(sp)
   6281c:	d9801e04 	addi	r6,sp,120
   62820:	b80b883a 	mov	r5,r23
   62824:	00682e00 	call	682e0 <__sprint_r>
   62828:	103a0b1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6282c:	dc402617 	ldw	r17,152(sp)
   62830:	d8c02017 	ldw	r3,128(sp)
   62834:	da000404 	addi	r8,sp,16
   62838:	003f9c06 	br	626ac <__alt_data_end+0xfffe26ac>
   6283c:	ac400043 	ldbu	r17,1(r21)
   62840:	84000814 	ori	r16,r16,32
   62844:	ad400044 	addi	r21,r21,1
   62848:	8c403fcc 	andi	r17,r17,255
   6284c:	8c40201c 	xori	r17,r17,128
   62850:	8c7fe004 	addi	r17,r17,-128
   62854:	00395e06 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   62858:	d8c02e15 	stw	r3,184(sp)
   6285c:	0039883a 	mov	fp,zero
   62860:	003e3506 	br	62138 <__alt_data_end+0xfffe2138>
   62864:	d9002d17 	ldw	r4,180(sp)
   62868:	d9801e04 	addi	r6,sp,120
   6286c:	b80b883a 	mov	r5,r23
   62870:	00682e00 	call	682e0 <__sprint_r>
   62874:	1039f81e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62878:	d8c02017 	ldw	r3,128(sp)
   6287c:	da000404 	addi	r8,sp,16
   62880:	003cd006 	br	61bc4 <__alt_data_end+0xfffe1bc4>
   62884:	8009883a 	mov	r4,r16
   62888:	df003d15 	stw	fp,244(sp)
   6288c:	0060bb00 	call	60bb0 <strlen>
   62890:	d8802b15 	stw	r2,172(sp)
   62894:	da003d17 	ldw	r8,244(sp)
   62898:	103c200e 	bge	r2,zero,6191c <__alt_data_end+0xfffe191c>
   6289c:	0005883a 	mov	r2,zero
   628a0:	003c1e06 	br	6191c <__alt_data_end+0xfffe191c>
   628a4:	d9002d17 	ldw	r4,180(sp)
   628a8:	d9801e04 	addi	r6,sp,120
   628ac:	b80b883a 	mov	r5,r23
   628b0:	00682e00 	call	682e0 <__sprint_r>
   628b4:	1039e81e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   628b8:	d8c02017 	ldw	r3,128(sp)
   628bc:	d8801f17 	ldw	r2,124(sp)
   628c0:	da000404 	addi	r8,sp,16
   628c4:	d9403317 	ldw	r5,204(sp)
   628c8:	10800044 	addi	r2,r2,1
   628cc:	44000015 	stw	r16,0(r8)
   628d0:	28c7883a 	add	r3,r5,r3
   628d4:	003b5b06 	br	61644 <__alt_data_end+0xfffe1644>
   628d8:	010001f4 	movhi	r4,7
   628dc:	21018a84 	addi	r4,r4,1578
   628e0:	d9003515 	stw	r4,212(sp)
   628e4:	003af206 	br	614b0 <__alt_data_end+0xfffe14b0>
   628e8:	013fffc4 	movi	r4,-1
   628ec:	003a0806 	br	61110 <__alt_data_end+0xfffe1110>
   628f0:	0023883a 	mov	r17,zero
   628f4:	003d9d06 	br	61f6c <__alt_data_end+0xfffe1f6c>
   628f8:	d9002d17 	ldw	r4,180(sp)
   628fc:	d9801e04 	addi	r6,sp,120
   62900:	b80b883a 	mov	r5,r23
   62904:	00682e00 	call	682e0 <__sprint_r>
   62908:	1039d31e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   6290c:	d8c02017 	ldw	r3,128(sp)
   62910:	da000404 	addi	r8,sp,16
   62914:	003d9406 	br	61f68 <__alt_data_end+0xfffe1f68>
   62918:	010001f4 	movhi	r4,7
   6291c:	21018684 	addi	r4,r4,1562
   62920:	d9002c15 	stw	r4,176(sp)
   62924:	d9002c17 	ldw	r4,176(sp)
   62928:	1c47883a 	add	r3,r3,r17
   6292c:	10800044 	addi	r2,r2,1
   62930:	41000015 	stw	r4,0(r8)
   62934:	44400115 	stw	r17,4(r8)
   62938:	d8c02015 	stw	r3,128(sp)
   6293c:	d8801f15 	stw	r2,124(sp)
   62940:	010001c4 	movi	r4,7
   62944:	20bfd716 	blt	r4,r2,628a4 <__alt_data_end+0xfffe28a4>
   62948:	42000204 	addi	r8,r8,8
   6294c:	003fdd06 	br	628c4 <__alt_data_end+0xfffe28c4>
   62950:	d9002d17 	ldw	r4,180(sp)
   62954:	d9801e04 	addi	r6,sp,120
   62958:	b80b883a 	mov	r5,r23
   6295c:	00682e00 	call	682e0 <__sprint_r>
   62960:	1039bd1e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62964:	d8802617 	ldw	r2,152(sp)
   62968:	d8c02017 	ldw	r3,128(sp)
   6296c:	da000404 	addi	r8,sp,16
   62970:	003e1006 	br	621b4 <__alt_data_end+0xfffe21b4>
   62974:	00800044 	movi	r2,1
   62978:	10803fcc 	andi	r2,r2,255
   6297c:	00c00044 	movi	r3,1
   62980:	10fa0d26 	beq	r2,r3,611b8 <__alt_data_end+0xfffe11b8>
   62984:	00c00084 	movi	r3,2
   62988:	10fbaf26 	beq	r2,r3,61848 <__alt_data_end+0xfffe1848>
   6298c:	003a6d06 	br	61344 <__alt_data_end+0xfffe1344>
   62990:	010001f4 	movhi	r4,7
   62994:	21018a84 	addi	r4,r4,1578
   62998:	d9003515 	stw	r4,212(sp)
   6299c:	003b5406 	br	616f0 <__alt_data_end+0xfffe16f0>
   629a0:	d8802a17 	ldw	r2,168(sp)
   629a4:	00c00184 	movi	r3,6
   629a8:	1880012e 	bgeu	r3,r2,629b0 <___vfprintf_internal_r+0x1d68>
   629ac:	1805883a 	mov	r2,r3
   629b0:	d8802b15 	stw	r2,172(sp)
   629b4:	1000ef16 	blt	r2,zero,62d74 <___vfprintf_internal_r+0x212c>
   629b8:	040001f4 	movhi	r16,7
   629bc:	d8802915 	stw	r2,164(sp)
   629c0:	dcc02e15 	stw	r19,184(sp)
   629c4:	d8002a15 	stw	zero,168(sp)
   629c8:	d8003215 	stw	zero,200(sp)
   629cc:	84018404 	addi	r16,r16,1552
   629d0:	0039883a 	mov	fp,zero
   629d4:	003a8006 	br	613d8 <__alt_data_end+0xfffe13d8>
   629d8:	0021883a 	mov	r16,zero
   629dc:	003e0706 	br	621fc <__alt_data_end+0xfffe21fc>
   629e0:	d9002d17 	ldw	r4,180(sp)
   629e4:	d9801e04 	addi	r6,sp,120
   629e8:	b80b883a 	mov	r5,r23
   629ec:	00682e00 	call	682e0 <__sprint_r>
   629f0:	1039991e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   629f4:	d8802617 	ldw	r2,152(sp)
   629f8:	d9403317 	ldw	r5,204(sp)
   629fc:	d8c02017 	ldw	r3,128(sp)
   62a00:	da000404 	addi	r8,sp,16
   62a04:	2885c83a 	sub	r2,r5,r2
   62a08:	003dfb06 	br	621f8 <__alt_data_end+0xfffe21f8>
   62a0c:	9080004c 	andi	r2,r18,1
   62a10:	103e8f1e 	bne	r2,zero,62450 <__alt_data_end+0xfffe2450>
   62a14:	d8802117 	ldw	r2,132(sp)
   62a18:	003e9e06 	br	62494 <__alt_data_end+0xfffe2494>
   62a1c:	1025883a 	mov	r18,r2
   62a20:	0039883a 	mov	fp,zero
   62a24:	00800084 	movi	r2,2
   62a28:	003fd306 	br	62978 <__alt_data_end+0xfffe2978>
   62a2c:	07000b44 	movi	fp,45
   62a30:	df002785 	stb	fp,158(sp)
   62a34:	003a1b06 	br	612a4 <__alt_data_end+0xfffe12a4>
   62a38:	00c00b44 	movi	r3,45
   62a3c:	d8c02785 	stb	r3,158(sp)
   62a40:	d8802915 	stw	r2,164(sp)
   62a44:	dc802c17 	ldw	r18,176(sp)
   62a48:	d8002a15 	stw	zero,168(sp)
   62a4c:	07000b44 	movi	fp,45
   62a50:	003a5e06 	br	613cc <__alt_data_end+0xfffe13cc>
   62a54:	040001f4 	movhi	r16,7
   62a58:	84017904 	addi	r16,r16,1508
   62a5c:	003f4706 	br	6277c <__alt_data_end+0xfffe277c>
   62a60:	d9002e17 	ldw	r4,184(sp)
   62a64:	d9402f17 	ldw	r5,188(sp)
   62a68:	20800017 	ldw	r2,0(r4)
   62a6c:	21000104 	addi	r4,r4,4
   62a70:	d9002e15 	stw	r4,184(sp)
   62a74:	11400015 	stw	r5,0(r2)
   62a78:	0038ab06 	br	60d28 <__alt_data_end+0xfffe0d28>
   62a7c:	dd802617 	ldw	r22,152(sp)
   62a80:	00bfff44 	movi	r2,-3
   62a84:	b0801c16 	blt	r22,r2,62af8 <___vfprintf_internal_r+0x1eb0>
   62a88:	d9402a17 	ldw	r5,168(sp)
   62a8c:	2d801a16 	blt	r5,r22,62af8 <___vfprintf_internal_r+0x1eb0>
   62a90:	dd803215 	stw	r22,200(sp)
   62a94:	003e8906 	br	624bc <__alt_data_end+0xfffe24bc>
   62a98:	010001f4 	movhi	r4,7
   62a9c:	21018684 	addi	r4,r4,1562
   62aa0:	d9002c15 	stw	r4,176(sp)
   62aa4:	003c9106 	br	61cec <__alt_data_end+0xfffe1cec>
   62aa8:	e005883a 	mov	r2,fp
   62aac:	003e7906 	br	62494 <__alt_data_end+0xfffe2494>
   62ab0:	d9002a17 	ldw	r4,168(sp)
   62ab4:	df002783 	ldbu	fp,158(sp)
   62ab8:	dcc02e15 	stw	r19,184(sp)
   62abc:	d9002915 	stw	r4,164(sp)
   62ac0:	d9002b15 	stw	r4,172(sp)
   62ac4:	d8002a15 	stw	zero,168(sp)
   62ac8:	d8003215 	stw	zero,200(sp)
   62acc:	003a3b06 	br	613bc <__alt_data_end+0xfffe13bc>
   62ad0:	9080004c 	andi	r2,r18,1
   62ad4:	0039883a 	mov	fp,zero
   62ad8:	10000426 	beq	r2,zero,62aec <___vfprintf_internal_r+0x1ea4>
   62adc:	00800c04 	movi	r2,48
   62ae0:	dc001dc4 	addi	r16,sp,119
   62ae4:	d8801dc5 	stb	r2,119(sp)
   62ae8:	003b6406 	br	6187c <__alt_data_end+0xfffe187c>
   62aec:	d8002b15 	stw	zero,172(sp)
   62af0:	dc001e04 	addi	r16,sp,120
   62af4:	003a2b06 	br	613a4 <__alt_data_end+0xfffe13a4>
   62af8:	8c7fff84 	addi	r17,r17,-2
   62afc:	b5bfffc4 	addi	r22,r22,-1
   62b00:	dd802615 	stw	r22,152(sp)
   62b04:	dc4022c5 	stb	r17,139(sp)
   62b08:	b000bf16 	blt	r22,zero,62e08 <___vfprintf_internal_r+0x21c0>
   62b0c:	00800ac4 	movi	r2,43
   62b10:	d8802305 	stb	r2,140(sp)
   62b14:	00800244 	movi	r2,9
   62b18:	15807016 	blt	r2,r22,62cdc <___vfprintf_internal_r+0x2094>
   62b1c:	00800c04 	movi	r2,48
   62b20:	b5800c04 	addi	r22,r22,48
   62b24:	d8802345 	stb	r2,141(sp)
   62b28:	dd802385 	stb	r22,142(sp)
   62b2c:	d88023c4 	addi	r2,sp,143
   62b30:	df0022c4 	addi	fp,sp,139
   62b34:	d8c03317 	ldw	r3,204(sp)
   62b38:	1739c83a 	sub	fp,r2,fp
   62b3c:	d9003317 	ldw	r4,204(sp)
   62b40:	e0c7883a 	add	r3,fp,r3
   62b44:	df003a15 	stw	fp,232(sp)
   62b48:	d8c02b15 	stw	r3,172(sp)
   62b4c:	00800044 	movi	r2,1
   62b50:	1100b30e 	bge	r2,r4,62e20 <___vfprintf_internal_r+0x21d8>
   62b54:	d8c02b17 	ldw	r3,172(sp)
   62b58:	18c00044 	addi	r3,r3,1
   62b5c:	d8c02b15 	stw	r3,172(sp)
   62b60:	1805883a 	mov	r2,r3
   62b64:	1800ac16 	blt	r3,zero,62e18 <___vfprintf_internal_r+0x21d0>
   62b68:	d8003215 	stw	zero,200(sp)
   62b6c:	003e5d06 	br	624e4 <__alt_data_end+0xfffe24e4>
   62b70:	d9002d17 	ldw	r4,180(sp)
   62b74:	d9801e04 	addi	r6,sp,120
   62b78:	b80b883a 	mov	r5,r23
   62b7c:	00682e00 	call	682e0 <__sprint_r>
   62b80:	1039351e 	bne	r2,zero,61058 <__alt_data_end+0xfffe1058>
   62b84:	dc402617 	ldw	r17,152(sp)
   62b88:	d8c02017 	ldw	r3,128(sp)
   62b8c:	d8801f17 	ldw	r2,124(sp)
   62b90:	da000404 	addi	r8,sp,16
   62b94:	003ed606 	br	626f0 <__alt_data_end+0xfffe26f0>
   62b98:	182b883a 	mov	r21,r3
   62b9c:	d8002a15 	stw	zero,168(sp)
   62ba0:	00388c06 	br	60dd4 <__alt_data_end+0xfffe0dd4>
   62ba4:	d8802a17 	ldw	r2,168(sp)
   62ba8:	103e071e 	bne	r2,zero,623c8 <__alt_data_end+0xfffe23c8>
   62bac:	dc002a15 	stw	r16,168(sp)
   62bb0:	003e0506 	br	623c8 <__alt_data_end+0xfffe23c8>
   62bb4:	d9002a17 	ldw	r4,168(sp)
   62bb8:	20c00044 	addi	r3,r4,1
   62bbc:	003e0f06 	br	623fc <__alt_data_end+0xfffe23fc>
   62bc0:	01400184 	movi	r5,6
   62bc4:	d9402a15 	stw	r5,168(sp)
   62bc8:	003dff06 	br	623c8 <__alt_data_end+0xfffe23c8>
   62bcc:	d8802104 	addi	r2,sp,132
   62bd0:	d8800315 	stw	r2,12(sp)
   62bd4:	d8802504 	addi	r2,sp,148
   62bd8:	d8800215 	stw	r2,8(sp)
   62bdc:	d8802604 	addi	r2,sp,152
   62be0:	d8800115 	stw	r2,4(sp)
   62be4:	d8802a17 	ldw	r2,168(sp)
   62be8:	d9403617 	ldw	r5,216(sp)
   62bec:	d9002d17 	ldw	r4,180(sp)
   62bf0:	d8800015 	stw	r2,0(sp)
   62bf4:	01c000c4 	movi	r7,3
   62bf8:	980d883a 	mov	r6,r19
   62bfc:	da003d15 	stw	r8,244(sp)
   62c00:	00633780 	call	63378 <_dtoa_r>
   62c04:	d8c02a17 	ldw	r3,168(sp)
   62c08:	da003d17 	ldw	r8,244(sp)
   62c0c:	1021883a 	mov	r16,r2
   62c10:	10f9883a 	add	fp,r2,r3
   62c14:	81000007 	ldb	r4,0(r16)
   62c18:	00800c04 	movi	r2,48
   62c1c:	20805e26 	beq	r4,r2,62d98 <___vfprintf_internal_r+0x2150>
   62c20:	d8c02617 	ldw	r3,152(sp)
   62c24:	e0f9883a 	add	fp,fp,r3
   62c28:	003e0a06 	br	62454 <__alt_data_end+0xfffe2454>
   62c2c:	00c00b44 	movi	r3,45
   62c30:	24e0003c 	xorhi	r19,r4,32768
   62c34:	d8c02905 	stb	r3,164(sp)
   62c38:	003de906 	br	623e0 <__alt_data_end+0xfffe23e0>
   62c3c:	d8c03217 	ldw	r3,200(sp)
   62c40:	00c07a0e 	bge	zero,r3,62e2c <___vfprintf_internal_r+0x21e4>
   62c44:	00800044 	movi	r2,1
   62c48:	d9003317 	ldw	r4,204(sp)
   62c4c:	1105883a 	add	r2,r2,r4
   62c50:	d8802b15 	stw	r2,172(sp)
   62c54:	10004e16 	blt	r2,zero,62d90 <___vfprintf_internal_r+0x2148>
   62c58:	044019c4 	movi	r17,103
   62c5c:	003e2106 	br	624e4 <__alt_data_end+0xfffe24e4>
   62c60:	d9002a17 	ldw	r4,168(sp)
   62c64:	d8802104 	addi	r2,sp,132
   62c68:	d8800315 	stw	r2,12(sp)
   62c6c:	d9000015 	stw	r4,0(sp)
   62c70:	d8802504 	addi	r2,sp,148
   62c74:	d9403617 	ldw	r5,216(sp)
   62c78:	d9002d17 	ldw	r4,180(sp)
   62c7c:	d8800215 	stw	r2,8(sp)
   62c80:	d8802604 	addi	r2,sp,152
   62c84:	d8800115 	stw	r2,4(sp)
   62c88:	01c000c4 	movi	r7,3
   62c8c:	980d883a 	mov	r6,r19
   62c90:	da003d15 	stw	r8,244(sp)
   62c94:	00633780 	call	63378 <_dtoa_r>
   62c98:	d8c02a17 	ldw	r3,168(sp)
   62c9c:	da003d17 	ldw	r8,244(sp)
   62ca0:	1021883a 	mov	r16,r2
   62ca4:	00801184 	movi	r2,70
   62ca8:	80f9883a 	add	fp,r16,r3
   62cac:	88bfd926 	beq	r17,r2,62c14 <__alt_data_end+0xfffe2c14>
   62cb0:	003de806 	br	62454 <__alt_data_end+0xfffe2454>
   62cb4:	d9002a17 	ldw	r4,168(sp)
   62cb8:	00c04d0e 	bge	zero,r3,62df0 <___vfprintf_internal_r+0x21a8>
   62cbc:	2000441e 	bne	r4,zero,62dd0 <___vfprintf_internal_r+0x2188>
   62cc0:	9480004c 	andi	r18,r18,1
   62cc4:	9000421e 	bne	r18,zero,62dd0 <___vfprintf_internal_r+0x2188>
   62cc8:	1805883a 	mov	r2,r3
   62ccc:	18006f16 	blt	r3,zero,62e8c <___vfprintf_internal_r+0x2244>
   62cd0:	d8c03217 	ldw	r3,200(sp)
   62cd4:	d8c02b15 	stw	r3,172(sp)
   62cd8:	003e0206 	br	624e4 <__alt_data_end+0xfffe24e4>
   62cdc:	df0022c4 	addi	fp,sp,139
   62ce0:	dc002a15 	stw	r16,168(sp)
   62ce4:	4027883a 	mov	r19,r8
   62ce8:	e021883a 	mov	r16,fp
   62cec:	b009883a 	mov	r4,r22
   62cf0:	01400284 	movi	r5,10
   62cf4:	006ae6c0 	call	6ae6c <__modsi3>
   62cf8:	10800c04 	addi	r2,r2,48
   62cfc:	843fffc4 	addi	r16,r16,-1
   62d00:	b009883a 	mov	r4,r22
   62d04:	01400284 	movi	r5,10
   62d08:	80800005 	stb	r2,0(r16)
   62d0c:	006ade80 	call	6ade8 <__divsi3>
   62d10:	102d883a 	mov	r22,r2
   62d14:	00800244 	movi	r2,9
   62d18:	15bff416 	blt	r2,r22,62cec <__alt_data_end+0xfffe2cec>
   62d1c:	9811883a 	mov	r8,r19
   62d20:	b0800c04 	addi	r2,r22,48
   62d24:	8027883a 	mov	r19,r16
   62d28:	997fffc4 	addi	r5,r19,-1
   62d2c:	98bfffc5 	stb	r2,-1(r19)
   62d30:	dc002a17 	ldw	r16,168(sp)
   62d34:	2f006d2e 	bgeu	r5,fp,62eec <___vfprintf_internal_r+0x22a4>
   62d38:	d9c02384 	addi	r7,sp,142
   62d3c:	3ccfc83a 	sub	r7,r7,r19
   62d40:	d9002344 	addi	r4,sp,141
   62d44:	e1cf883a 	add	r7,fp,r7
   62d48:	00000106 	br	62d50 <___vfprintf_internal_r+0x2108>
   62d4c:	28800003 	ldbu	r2,0(r5)
   62d50:	20800005 	stb	r2,0(r4)
   62d54:	21000044 	addi	r4,r4,1
   62d58:	29400044 	addi	r5,r5,1
   62d5c:	393ffb1e 	bne	r7,r4,62d4c <__alt_data_end+0xfffe2d4c>
   62d60:	d8802304 	addi	r2,sp,140
   62d64:	14c5c83a 	sub	r2,r2,r19
   62d68:	d8c02344 	addi	r3,sp,141
   62d6c:	1885883a 	add	r2,r3,r2
   62d70:	003f7006 	br	62b34 <__alt_data_end+0xfffe2b34>
   62d74:	0005883a 	mov	r2,zero
   62d78:	003f0f06 	br	629b8 <__alt_data_end+0xfffe29b8>
   62d7c:	d8c03217 	ldw	r3,200(sp)
   62d80:	18c00044 	addi	r3,r3,1
   62d84:	d8c02b15 	stw	r3,172(sp)
   62d88:	1805883a 	mov	r2,r3
   62d8c:	183fb20e 	bge	r3,zero,62c58 <__alt_data_end+0xfffe2c58>
   62d90:	0005883a 	mov	r2,zero
   62d94:	003fb006 	br	62c58 <__alt_data_end+0xfffe2c58>
   62d98:	d9003617 	ldw	r4,216(sp)
   62d9c:	000d883a 	mov	r6,zero
   62da0:	000f883a 	mov	r7,zero
   62da4:	980b883a 	mov	r5,r19
   62da8:	d8c03c15 	stw	r3,240(sp)
   62dac:	da003d15 	stw	r8,244(sp)
   62db0:	006c2180 	call	6c218 <__eqdf2>
   62db4:	d8c03c17 	ldw	r3,240(sp)
   62db8:	da003d17 	ldw	r8,244(sp)
   62dbc:	103f9826 	beq	r2,zero,62c20 <__alt_data_end+0xfffe2c20>
   62dc0:	00800044 	movi	r2,1
   62dc4:	10c7c83a 	sub	r3,r2,r3
   62dc8:	d8c02615 	stw	r3,152(sp)
   62dcc:	003f9506 	br	62c24 <__alt_data_end+0xfffe2c24>
   62dd0:	d9002a17 	ldw	r4,168(sp)
   62dd4:	d8c03217 	ldw	r3,200(sp)
   62dd8:	20800044 	addi	r2,r4,1
   62ddc:	1885883a 	add	r2,r3,r2
   62de0:	d8802b15 	stw	r2,172(sp)
   62de4:	103dbf0e 	bge	r2,zero,624e4 <__alt_data_end+0xfffe24e4>
   62de8:	0005883a 	mov	r2,zero
   62dec:	003dbd06 	br	624e4 <__alt_data_end+0xfffe24e4>
   62df0:	2000201e 	bne	r4,zero,62e74 <___vfprintf_internal_r+0x222c>
   62df4:	9480004c 	andi	r18,r18,1
   62df8:	90001e1e 	bne	r18,zero,62e74 <___vfprintf_internal_r+0x222c>
   62dfc:	00800044 	movi	r2,1
   62e00:	d8802b15 	stw	r2,172(sp)
   62e04:	003db706 	br	624e4 <__alt_data_end+0xfffe24e4>
   62e08:	00800b44 	movi	r2,45
   62e0c:	05adc83a 	sub	r22,zero,r22
   62e10:	d8802305 	stb	r2,140(sp)
   62e14:	003f3f06 	br	62b14 <__alt_data_end+0xfffe2b14>
   62e18:	0005883a 	mov	r2,zero
   62e1c:	003f5206 	br	62b68 <__alt_data_end+0xfffe2b68>
   62e20:	90a4703a 	and	r18,r18,r2
   62e24:	903f4e26 	beq	r18,zero,62b60 <__alt_data_end+0xfffe2b60>
   62e28:	003f4a06 	br	62b54 <__alt_data_end+0xfffe2b54>
   62e2c:	00800084 	movi	r2,2
   62e30:	10c5c83a 	sub	r2,r2,r3
   62e34:	003f8406 	br	62c48 <__alt_data_end+0xfffe2c48>
   62e38:	d9402e17 	ldw	r5,184(sp)
   62e3c:	d9002e17 	ldw	r4,184(sp)
   62e40:	ac400043 	ldbu	r17,1(r21)
   62e44:	29400017 	ldw	r5,0(r5)
   62e48:	20800104 	addi	r2,r4,4
   62e4c:	d8802e15 	stw	r2,184(sp)
   62e50:	d9402a15 	stw	r5,168(sp)
   62e54:	182b883a 	mov	r21,r3
   62e58:	283e7b0e 	bge	r5,zero,62848 <__alt_data_end+0xfffe2848>
   62e5c:	8c403fcc 	andi	r17,r17,255
   62e60:	017fffc4 	movi	r5,-1
   62e64:	8c40201c 	xori	r17,r17,128
   62e68:	d9402a15 	stw	r5,168(sp)
   62e6c:	8c7fe004 	addi	r17,r17,-128
   62e70:	0037d706 	br	60dd0 <__alt_data_end+0xfffe0dd0>
   62e74:	d8c02a17 	ldw	r3,168(sp)
   62e78:	18c00084 	addi	r3,r3,2
   62e7c:	d8c02b15 	stw	r3,172(sp)
   62e80:	1805883a 	mov	r2,r3
   62e84:	183d970e 	bge	r3,zero,624e4 <__alt_data_end+0xfffe24e4>
   62e88:	003fd706 	br	62de8 <__alt_data_end+0xfffe2de8>
   62e8c:	0005883a 	mov	r2,zero
   62e90:	003f8f06 	br	62cd0 <__alt_data_end+0xfffe2cd0>
   62e94:	9080004c 	andi	r2,r18,1
   62e98:	103f821e 	bne	r2,zero,62ca4 <__alt_data_end+0xfffe2ca4>
   62e9c:	d8802117 	ldw	r2,132(sp)
   62ea0:	1405c83a 	sub	r2,r2,r16
   62ea4:	d8803315 	stw	r2,204(sp)
   62ea8:	b47ef426 	beq	r22,r17,62a7c <__alt_data_end+0xfffe2a7c>
   62eac:	dd802617 	ldw	r22,152(sp)
   62eb0:	003f1206 	br	62afc <__alt_data_end+0xfffe2afc>
   62eb4:	d8c02b03 	ldbu	r3,172(sp)
   62eb8:	d8c02785 	stb	r3,158(sp)
   62ebc:	0038df06 	br	6123c <__alt_data_end+0xfffe123c>
   62ec0:	d8c02b03 	ldbu	r3,172(sp)
   62ec4:	d8c02785 	stb	r3,158(sp)
   62ec8:	0038aa06 	br	61174 <__alt_data_end+0xfffe1174>
   62ecc:	d8c02b03 	ldbu	r3,172(sp)
   62ed0:	d8c02785 	stb	r3,158(sp)
   62ed4:	003a4306 	br	617e4 <__alt_data_end+0xfffe17e4>
   62ed8:	d8c02b03 	ldbu	r3,172(sp)
   62edc:	d8c02785 	stb	r3,158(sp)
   62ee0:	003af506 	br	61ab8 <__alt_data_end+0xfffe1ab8>
   62ee4:	0005883a 	mov	r2,zero
   62ee8:	003d7b06 	br	624d8 <__alt_data_end+0xfffe24d8>
   62eec:	d8802344 	addi	r2,sp,141
   62ef0:	003f1006 	br	62b34 <__alt_data_end+0xfffe2b34>
   62ef4:	d8c02b03 	ldbu	r3,172(sp)
   62ef8:	d8c02785 	stb	r3,158(sp)
   62efc:	0038fd06 	br	612f4 <__alt_data_end+0xfffe12f4>
   62f00:	d8c02b03 	ldbu	r3,172(sp)
   62f04:	d8c02785 	stb	r3,158(sp)
   62f08:	003a9706 	br	61968 <__alt_data_end+0xfffe1968>
   62f0c:	d8c02b03 	ldbu	r3,172(sp)
   62f10:	d8c02785 	stb	r3,158(sp)
   62f14:	003a1806 	br	61778 <__alt_data_end+0xfffe1778>
   62f18:	d8c02b03 	ldbu	r3,172(sp)
   62f1c:	d8c02785 	stb	r3,158(sp)
   62f20:	003abe06 	br	61a1c <__alt_data_end+0xfffe1a1c>

00062f24 <__vfprintf_internal>:
   62f24:	008001f4 	movhi	r2,7
   62f28:	10890f04 	addi	r2,r2,9276
   62f2c:	300f883a 	mov	r7,r6
   62f30:	280d883a 	mov	r6,r5
   62f34:	200b883a 	mov	r5,r4
   62f38:	11000017 	ldw	r4,0(r2)
   62f3c:	0060c481 	jmpi	60c48 <___vfprintf_internal_r>

00062f40 <__sbprintf>:
   62f40:	2880030b 	ldhu	r2,12(r5)
   62f44:	2ac01917 	ldw	r11,100(r5)
   62f48:	2a80038b 	ldhu	r10,14(r5)
   62f4c:	2a400717 	ldw	r9,28(r5)
   62f50:	2a000917 	ldw	r8,36(r5)
   62f54:	defee204 	addi	sp,sp,-1144
   62f58:	00c10004 	movi	r3,1024
   62f5c:	dc011a15 	stw	r16,1128(sp)
   62f60:	10bfff4c 	andi	r2,r2,65533
   62f64:	2821883a 	mov	r16,r5
   62f68:	d8cb883a 	add	r5,sp,r3
   62f6c:	dc811c15 	stw	r18,1136(sp)
   62f70:	dc411b15 	stw	r17,1132(sp)
   62f74:	dfc11d15 	stw	ra,1140(sp)
   62f78:	2025883a 	mov	r18,r4
   62f7c:	d881030d 	sth	r2,1036(sp)
   62f80:	dac11915 	stw	r11,1124(sp)
   62f84:	da81038d 	sth	r10,1038(sp)
   62f88:	da410715 	stw	r9,1052(sp)
   62f8c:	da010915 	stw	r8,1060(sp)
   62f90:	dec10015 	stw	sp,1024(sp)
   62f94:	dec10415 	stw	sp,1040(sp)
   62f98:	d8c10215 	stw	r3,1032(sp)
   62f9c:	d8c10515 	stw	r3,1044(sp)
   62fa0:	d8010615 	stw	zero,1048(sp)
   62fa4:	0060c480 	call	60c48 <___vfprintf_internal_r>
   62fa8:	1023883a 	mov	r17,r2
   62fac:	10000416 	blt	r2,zero,62fc0 <__sbprintf+0x80>
   62fb0:	d9410004 	addi	r5,sp,1024
   62fb4:	9009883a 	mov	r4,r18
   62fb8:	0064c1c0 	call	64c1c <_fflush_r>
   62fbc:	10000d1e 	bne	r2,zero,62ff4 <__sbprintf+0xb4>
   62fc0:	d881030b 	ldhu	r2,1036(sp)
   62fc4:	1080100c 	andi	r2,r2,64
   62fc8:	10000326 	beq	r2,zero,62fd8 <__sbprintf+0x98>
   62fcc:	8080030b 	ldhu	r2,12(r16)
   62fd0:	10801014 	ori	r2,r2,64
   62fd4:	8080030d 	sth	r2,12(r16)
   62fd8:	8805883a 	mov	r2,r17
   62fdc:	dfc11d17 	ldw	ra,1140(sp)
   62fe0:	dc811c17 	ldw	r18,1136(sp)
   62fe4:	dc411b17 	ldw	r17,1132(sp)
   62fe8:	dc011a17 	ldw	r16,1128(sp)
   62fec:	dec11e04 	addi	sp,sp,1144
   62ff0:	f800283a 	ret
   62ff4:	047fffc4 	movi	r17,-1
   62ff8:	003ff106 	br	62fc0 <__alt_data_end+0xfffe2fc0>

00062ffc <__swsetup_r>:
   62ffc:	008001f4 	movhi	r2,7
   63000:	defffd04 	addi	sp,sp,-12
   63004:	10890f04 	addi	r2,r2,9276
   63008:	dc400115 	stw	r17,4(sp)
   6300c:	2023883a 	mov	r17,r4
   63010:	11000017 	ldw	r4,0(r2)
   63014:	dc000015 	stw	r16,0(sp)
   63018:	dfc00215 	stw	ra,8(sp)
   6301c:	2821883a 	mov	r16,r5
   63020:	20000226 	beq	r4,zero,6302c <__swsetup_r+0x30>
   63024:	20800e17 	ldw	r2,56(r4)
   63028:	10003126 	beq	r2,zero,630f0 <__swsetup_r+0xf4>
   6302c:	8080030b 	ldhu	r2,12(r16)
   63030:	10c0020c 	andi	r3,r2,8
   63034:	1009883a 	mov	r4,r2
   63038:	18000f26 	beq	r3,zero,63078 <__swsetup_r+0x7c>
   6303c:	80c00417 	ldw	r3,16(r16)
   63040:	18001526 	beq	r3,zero,63098 <__swsetup_r+0x9c>
   63044:	1100004c 	andi	r4,r2,1
   63048:	20001c1e 	bne	r4,zero,630bc <__swsetup_r+0xc0>
   6304c:	1080008c 	andi	r2,r2,2
   63050:	1000291e 	bne	r2,zero,630f8 <__swsetup_r+0xfc>
   63054:	80800517 	ldw	r2,20(r16)
   63058:	80800215 	stw	r2,8(r16)
   6305c:	18001c26 	beq	r3,zero,630d0 <__swsetup_r+0xd4>
   63060:	0005883a 	mov	r2,zero
   63064:	dfc00217 	ldw	ra,8(sp)
   63068:	dc400117 	ldw	r17,4(sp)
   6306c:	dc000017 	ldw	r16,0(sp)
   63070:	dec00304 	addi	sp,sp,12
   63074:	f800283a 	ret
   63078:	2080040c 	andi	r2,r4,16
   6307c:	10002e26 	beq	r2,zero,63138 <__swsetup_r+0x13c>
   63080:	2080010c 	andi	r2,r4,4
   63084:	10001e1e 	bne	r2,zero,63100 <__swsetup_r+0x104>
   63088:	80c00417 	ldw	r3,16(r16)
   6308c:	20800214 	ori	r2,r4,8
   63090:	8080030d 	sth	r2,12(r16)
   63094:	183feb1e 	bne	r3,zero,63044 <__alt_data_end+0xfffe3044>
   63098:	1100a00c 	andi	r4,r2,640
   6309c:	01408004 	movi	r5,512
   630a0:	217fe826 	beq	r4,r5,63044 <__alt_data_end+0xfffe3044>
   630a4:	800b883a 	mov	r5,r16
   630a8:	8809883a 	mov	r4,r17
   630ac:	0065bb80 	call	65bb8 <__smakebuf_r>
   630b0:	8080030b 	ldhu	r2,12(r16)
   630b4:	80c00417 	ldw	r3,16(r16)
   630b8:	003fe206 	br	63044 <__alt_data_end+0xfffe3044>
   630bc:	80800517 	ldw	r2,20(r16)
   630c0:	80000215 	stw	zero,8(r16)
   630c4:	0085c83a 	sub	r2,zero,r2
   630c8:	80800615 	stw	r2,24(r16)
   630cc:	183fe41e 	bne	r3,zero,63060 <__alt_data_end+0xfffe3060>
   630d0:	80c0030b 	ldhu	r3,12(r16)
   630d4:	0005883a 	mov	r2,zero
   630d8:	1900200c 	andi	r4,r3,128
   630dc:	203fe126 	beq	r4,zero,63064 <__alt_data_end+0xfffe3064>
   630e0:	18c01014 	ori	r3,r3,64
   630e4:	80c0030d 	sth	r3,12(r16)
   630e8:	00bfffc4 	movi	r2,-1
   630ec:	003fdd06 	br	63064 <__alt_data_end+0xfffe3064>
   630f0:	00650080 	call	65008 <__sinit>
   630f4:	003fcd06 	br	6302c <__alt_data_end+0xfffe302c>
   630f8:	0005883a 	mov	r2,zero
   630fc:	003fd606 	br	63058 <__alt_data_end+0xfffe3058>
   63100:	81400c17 	ldw	r5,48(r16)
   63104:	28000626 	beq	r5,zero,63120 <__swsetup_r+0x124>
   63108:	80801004 	addi	r2,r16,64
   6310c:	28800326 	beq	r5,r2,6311c <__swsetup_r+0x120>
   63110:	8809883a 	mov	r4,r17
   63114:	006517c0 	call	6517c <_free_r>
   63118:	8100030b 	ldhu	r4,12(r16)
   6311c:	80000c15 	stw	zero,48(r16)
   63120:	80c00417 	ldw	r3,16(r16)
   63124:	00bff6c4 	movi	r2,-37
   63128:	1108703a 	and	r4,r2,r4
   6312c:	80000115 	stw	zero,4(r16)
   63130:	80c00015 	stw	r3,0(r16)
   63134:	003fd506 	br	6308c <__alt_data_end+0xfffe308c>
   63138:	00800244 	movi	r2,9
   6313c:	88800015 	stw	r2,0(r17)
   63140:	20801014 	ori	r2,r4,64
   63144:	8080030d 	sth	r2,12(r16)
   63148:	00bfffc4 	movi	r2,-1
   6314c:	003fc506 	br	63064 <__alt_data_end+0xfffe3064>

00063150 <quorem>:
   63150:	defff204 	addi	sp,sp,-56
   63154:	ddc00b15 	stw	r23,44(sp)
   63158:	20800417 	ldw	r2,16(r4)
   6315c:	2dc00417 	ldw	r23,16(r5)
   63160:	dfc00d15 	stw	ra,52(sp)
   63164:	df000c15 	stw	fp,48(sp)
   63168:	dd800a15 	stw	r22,40(sp)
   6316c:	dd400915 	stw	r21,36(sp)
   63170:	dd000815 	stw	r20,32(sp)
   63174:	dcc00715 	stw	r19,28(sp)
   63178:	dc800615 	stw	r18,24(sp)
   6317c:	dc400515 	stw	r17,20(sp)
   63180:	dc000415 	stw	r16,16(sp)
   63184:	15c07a16 	blt	r2,r23,63370 <quorem+0x220>
   63188:	bdffffc4 	addi	r23,r23,-1
   6318c:	bde9883a 	add	r20,r23,r23
   63190:	28c00504 	addi	r3,r5,20
   63194:	a529883a 	add	r20,r20,r20
   63198:	1d39883a 	add	fp,r3,r20
   6319c:	24c00504 	addi	r19,r4,20
   631a0:	d9400215 	stw	r5,8(sp)
   631a4:	9d29883a 	add	r20,r19,r20
   631a8:	e1400017 	ldw	r5,0(fp)
   631ac:	d9000015 	stw	r4,0(sp)
   631b0:	a1000017 	ldw	r4,0(r20)
   631b4:	29400044 	addi	r5,r5,1
   631b8:	d8c00115 	stw	r3,4(sp)
   631bc:	dd000315 	stw	r20,12(sp)
   631c0:	006aee00 	call	6aee0 <__udivsi3>
   631c4:	1025883a 	mov	r18,r2
   631c8:	10003026 	beq	r2,zero,6328c <quorem+0x13c>
   631cc:	dc400117 	ldw	r17,4(sp)
   631d0:	9829883a 	mov	r20,r19
   631d4:	002d883a 	mov	r22,zero
   631d8:	0021883a 	mov	r16,zero
   631dc:	8d400017 	ldw	r21,0(r17)
   631e0:	900b883a 	mov	r5,r18
   631e4:	8c400104 	addi	r17,r17,4
   631e8:	a93fffcc 	andi	r4,r21,65535
   631ec:	00609000 	call	60900 <__mulsi3>
   631f0:	a808d43a 	srli	r4,r21,16
   631f4:	900b883a 	mov	r5,r18
   631f8:	15ad883a 	add	r22,r2,r22
   631fc:	00609000 	call	60900 <__mulsi3>
   63200:	a1000017 	ldw	r4,0(r20)
   63204:	b00cd43a 	srli	r6,r22,16
   63208:	b0ffffcc 	andi	r3,r22,65535
   6320c:	217fffcc 	andi	r5,r4,65535
   63210:	2c21883a 	add	r16,r5,r16
   63214:	80c7c83a 	sub	r3,r16,r3
   63218:	2008d43a 	srli	r4,r4,16
   6321c:	1185883a 	add	r2,r2,r6
   63220:	1821d43a 	srai	r16,r3,16
   63224:	117fffcc 	andi	r5,r2,65535
   63228:	2149c83a 	sub	r4,r4,r5
   6322c:	2421883a 	add	r16,r4,r16
   63230:	8008943a 	slli	r4,r16,16
   63234:	18ffffcc 	andi	r3,r3,65535
   63238:	102cd43a 	srli	r22,r2,16
   6323c:	20c8b03a 	or	r4,r4,r3
   63240:	a1000015 	stw	r4,0(r20)
   63244:	8021d43a 	srai	r16,r16,16
   63248:	a5000104 	addi	r20,r20,4
   6324c:	e47fe32e 	bgeu	fp,r17,631dc <__alt_data_end+0xfffe31dc>
   63250:	d8c00317 	ldw	r3,12(sp)
   63254:	18800017 	ldw	r2,0(r3)
   63258:	10000c1e 	bne	r2,zero,6328c <quorem+0x13c>
   6325c:	18bfff04 	addi	r2,r3,-4
   63260:	9880082e 	bgeu	r19,r2,63284 <quorem+0x134>
   63264:	18ffff17 	ldw	r3,-4(r3)
   63268:	18000326 	beq	r3,zero,63278 <quorem+0x128>
   6326c:	00000506 	br	63284 <quorem+0x134>
   63270:	10c00017 	ldw	r3,0(r2)
   63274:	1800031e 	bne	r3,zero,63284 <quorem+0x134>
   63278:	10bfff04 	addi	r2,r2,-4
   6327c:	bdffffc4 	addi	r23,r23,-1
   63280:	98bffb36 	bltu	r19,r2,63270 <__alt_data_end+0xfffe3270>
   63284:	d8c00017 	ldw	r3,0(sp)
   63288:	1dc00415 	stw	r23,16(r3)
   6328c:	d9400217 	ldw	r5,8(sp)
   63290:	d9000017 	ldw	r4,0(sp)
   63294:	006726c0 	call	6726c <__mcmp>
   63298:	10002816 	blt	r2,zero,6333c <quorem+0x1ec>
   6329c:	dc400117 	ldw	r17,4(sp)
   632a0:	94800044 	addi	r18,r18,1
   632a4:	980d883a 	mov	r6,r19
   632a8:	0007883a 	mov	r3,zero
   632ac:	31000017 	ldw	r4,0(r6)
   632b0:	89400017 	ldw	r5,0(r17)
   632b4:	31800104 	addi	r6,r6,4
   632b8:	20bfffcc 	andi	r2,r4,65535
   632bc:	10c7883a 	add	r3,r2,r3
   632c0:	28bfffcc 	andi	r2,r5,65535
   632c4:	1885c83a 	sub	r2,r3,r2
   632c8:	280ad43a 	srli	r5,r5,16
   632cc:	2008d43a 	srli	r4,r4,16
   632d0:	1007d43a 	srai	r3,r2,16
   632d4:	10bfffcc 	andi	r2,r2,65535
   632d8:	2149c83a 	sub	r4,r4,r5
   632dc:	20c9883a 	add	r4,r4,r3
   632e0:	200a943a 	slli	r5,r4,16
   632e4:	8c400104 	addi	r17,r17,4
   632e8:	2007d43a 	srai	r3,r4,16
   632ec:	2884b03a 	or	r2,r5,r2
   632f0:	30bfff15 	stw	r2,-4(r6)
   632f4:	e47fed2e 	bgeu	fp,r17,632ac <__alt_data_end+0xfffe32ac>
   632f8:	bdc5883a 	add	r2,r23,r23
   632fc:	1085883a 	add	r2,r2,r2
   63300:	9887883a 	add	r3,r19,r2
   63304:	18800017 	ldw	r2,0(r3)
   63308:	10000c1e 	bne	r2,zero,6333c <quorem+0x1ec>
   6330c:	18bfff04 	addi	r2,r3,-4
   63310:	9880082e 	bgeu	r19,r2,63334 <quorem+0x1e4>
   63314:	18ffff17 	ldw	r3,-4(r3)
   63318:	18000326 	beq	r3,zero,63328 <quorem+0x1d8>
   6331c:	00000506 	br	63334 <quorem+0x1e4>
   63320:	10c00017 	ldw	r3,0(r2)
   63324:	1800031e 	bne	r3,zero,63334 <quorem+0x1e4>
   63328:	10bfff04 	addi	r2,r2,-4
   6332c:	bdffffc4 	addi	r23,r23,-1
   63330:	98bffb36 	bltu	r19,r2,63320 <__alt_data_end+0xfffe3320>
   63334:	d8c00017 	ldw	r3,0(sp)
   63338:	1dc00415 	stw	r23,16(r3)
   6333c:	9005883a 	mov	r2,r18
   63340:	dfc00d17 	ldw	ra,52(sp)
   63344:	df000c17 	ldw	fp,48(sp)
   63348:	ddc00b17 	ldw	r23,44(sp)
   6334c:	dd800a17 	ldw	r22,40(sp)
   63350:	dd400917 	ldw	r21,36(sp)
   63354:	dd000817 	ldw	r20,32(sp)
   63358:	dcc00717 	ldw	r19,28(sp)
   6335c:	dc800617 	ldw	r18,24(sp)
   63360:	dc400517 	ldw	r17,20(sp)
   63364:	dc000417 	ldw	r16,16(sp)
   63368:	dec00e04 	addi	sp,sp,56
   6336c:	f800283a 	ret
   63370:	0005883a 	mov	r2,zero
   63374:	003ff206 	br	63340 <__alt_data_end+0xfffe3340>

00063378 <_dtoa_r>:
   63378:	20801017 	ldw	r2,64(r4)
   6337c:	deffde04 	addi	sp,sp,-136
   63380:	df002015 	stw	fp,128(sp)
   63384:	dcc01b15 	stw	r19,108(sp)
   63388:	dc801a15 	stw	r18,104(sp)
   6338c:	dc401915 	stw	r17,100(sp)
   63390:	dc001815 	stw	r16,96(sp)
   63394:	dfc02115 	stw	ra,132(sp)
   63398:	ddc01f15 	stw	r23,124(sp)
   6339c:	dd801e15 	stw	r22,120(sp)
   633a0:	dd401d15 	stw	r21,116(sp)
   633a4:	dd001c15 	stw	r20,112(sp)
   633a8:	d9c00315 	stw	r7,12(sp)
   633ac:	2039883a 	mov	fp,r4
   633b0:	3023883a 	mov	r17,r6
   633b4:	2825883a 	mov	r18,r5
   633b8:	dc002417 	ldw	r16,144(sp)
   633bc:	3027883a 	mov	r19,r6
   633c0:	10000826 	beq	r2,zero,633e4 <_dtoa_r+0x6c>
   633c4:	21801117 	ldw	r6,68(r4)
   633c8:	00c00044 	movi	r3,1
   633cc:	100b883a 	mov	r5,r2
   633d0:	1986983a 	sll	r3,r3,r6
   633d4:	11800115 	stw	r6,4(r2)
   633d8:	10c00215 	stw	r3,8(r2)
   633dc:	00669900 	call	66990 <_Bfree>
   633e0:	e0001015 	stw	zero,64(fp)
   633e4:	88002e16 	blt	r17,zero,634a0 <_dtoa_r+0x128>
   633e8:	80000015 	stw	zero,0(r16)
   633ec:	889ffc2c 	andhi	r2,r17,32752
   633f0:	00dffc34 	movhi	r3,32752
   633f4:	10c01c26 	beq	r2,r3,63468 <_dtoa_r+0xf0>
   633f8:	000d883a 	mov	r6,zero
   633fc:	000f883a 	mov	r7,zero
   63400:	9009883a 	mov	r4,r18
   63404:	980b883a 	mov	r5,r19
   63408:	006c2180 	call	6c218 <__eqdf2>
   6340c:	10002b1e 	bne	r2,zero,634bc <_dtoa_r+0x144>
   63410:	d9c02317 	ldw	r7,140(sp)
   63414:	00800044 	movi	r2,1
   63418:	38800015 	stw	r2,0(r7)
   6341c:	d8802517 	ldw	r2,148(sp)
   63420:	10019e26 	beq	r2,zero,63a9c <_dtoa_r+0x724>
   63424:	d8c02517 	ldw	r3,148(sp)
   63428:	008001f4 	movhi	r2,7
   6342c:	10818644 	addi	r2,r2,1561
   63430:	18800015 	stw	r2,0(r3)
   63434:	10bfffc4 	addi	r2,r2,-1
   63438:	dfc02117 	ldw	ra,132(sp)
   6343c:	df002017 	ldw	fp,128(sp)
   63440:	ddc01f17 	ldw	r23,124(sp)
   63444:	dd801e17 	ldw	r22,120(sp)
   63448:	dd401d17 	ldw	r21,116(sp)
   6344c:	dd001c17 	ldw	r20,112(sp)
   63450:	dcc01b17 	ldw	r19,108(sp)
   63454:	dc801a17 	ldw	r18,104(sp)
   63458:	dc401917 	ldw	r17,100(sp)
   6345c:	dc001817 	ldw	r16,96(sp)
   63460:	dec02204 	addi	sp,sp,136
   63464:	f800283a 	ret
   63468:	d8c02317 	ldw	r3,140(sp)
   6346c:	0089c3c4 	movi	r2,9999
   63470:	18800015 	stw	r2,0(r3)
   63474:	90017726 	beq	r18,zero,63a54 <_dtoa_r+0x6dc>
   63478:	008001f4 	movhi	r2,7
   6347c:	10819204 	addi	r2,r2,1608
   63480:	d9002517 	ldw	r4,148(sp)
   63484:	203fec26 	beq	r4,zero,63438 <__alt_data_end+0xfffe3438>
   63488:	10c000c7 	ldb	r3,3(r2)
   6348c:	1801781e 	bne	r3,zero,63a70 <_dtoa_r+0x6f8>
   63490:	10c000c4 	addi	r3,r2,3
   63494:	d9802517 	ldw	r6,148(sp)
   63498:	30c00015 	stw	r3,0(r6)
   6349c:	003fe606 	br	63438 <__alt_data_end+0xfffe3438>
   634a0:	04e00034 	movhi	r19,32768
   634a4:	9cffffc4 	addi	r19,r19,-1
   634a8:	00800044 	movi	r2,1
   634ac:	8ce6703a 	and	r19,r17,r19
   634b0:	80800015 	stw	r2,0(r16)
   634b4:	9823883a 	mov	r17,r19
   634b8:	003fcc06 	br	633ec <__alt_data_end+0xfffe33ec>
   634bc:	d8800204 	addi	r2,sp,8
   634c0:	d8800015 	stw	r2,0(sp)
   634c4:	d9c00104 	addi	r7,sp,4
   634c8:	900b883a 	mov	r5,r18
   634cc:	980d883a 	mov	r6,r19
   634d0:	e009883a 	mov	r4,fp
   634d4:	8820d53a 	srli	r16,r17,20
   634d8:	00676380 	call	67638 <__d2b>
   634dc:	d8800915 	stw	r2,36(sp)
   634e0:	8001651e 	bne	r16,zero,63a78 <_dtoa_r+0x700>
   634e4:	dd800217 	ldw	r22,8(sp)
   634e8:	dc000117 	ldw	r16,4(sp)
   634ec:	00800804 	movi	r2,32
   634f0:	b421883a 	add	r16,r22,r16
   634f4:	80c10c84 	addi	r3,r16,1074
   634f8:	10c2d10e 	bge	r2,r3,64040 <_dtoa_r+0xcc8>
   634fc:	00801004 	movi	r2,64
   63500:	81010484 	addi	r4,r16,1042
   63504:	10c7c83a 	sub	r3,r2,r3
   63508:	9108d83a 	srl	r4,r18,r4
   6350c:	88e2983a 	sll	r17,r17,r3
   63510:	2448b03a 	or	r4,r4,r17
   63514:	006d7340 	call	6d734 <__floatunsidf>
   63518:	017f8434 	movhi	r5,65040
   6351c:	01800044 	movi	r6,1
   63520:	1009883a 	mov	r4,r2
   63524:	194b883a 	add	r5,r3,r5
   63528:	843fffc4 	addi	r16,r16,-1
   6352c:	d9801115 	stw	r6,68(sp)
   63530:	000d883a 	mov	r6,zero
   63534:	01cffe34 	movhi	r7,16376
   63538:	006ccdc0 	call	6ccdc <__subdf3>
   6353c:	0198dbf4 	movhi	r6,25455
   63540:	01cff4f4 	movhi	r7,16339
   63544:	3190d844 	addi	r6,r6,17249
   63548:	39e1e9c4 	addi	r7,r7,-30809
   6354c:	1009883a 	mov	r4,r2
   63550:	180b883a 	mov	r5,r3
   63554:	006c4700 	call	6c470 <__muldf3>
   63558:	01a2d874 	movhi	r6,35681
   6355c:	01cff1f4 	movhi	r7,16327
   63560:	31b22cc4 	addi	r6,r6,-14157
   63564:	39e28a04 	addi	r7,r7,-30168
   63568:	180b883a 	mov	r5,r3
   6356c:	1009883a 	mov	r4,r2
   63570:	006af9c0 	call	6af9c <__adddf3>
   63574:	8009883a 	mov	r4,r16
   63578:	1029883a 	mov	r20,r2
   6357c:	1823883a 	mov	r17,r3
   63580:	006d6580 	call	6d658 <__floatsidf>
   63584:	019427f4 	movhi	r6,20639
   63588:	01cff4f4 	movhi	r7,16339
   6358c:	319e7ec4 	addi	r6,r6,31227
   63590:	39d104c4 	addi	r7,r7,17427
   63594:	1009883a 	mov	r4,r2
   63598:	180b883a 	mov	r5,r3
   6359c:	006c4700 	call	6c470 <__muldf3>
   635a0:	100d883a 	mov	r6,r2
   635a4:	180f883a 	mov	r7,r3
   635a8:	a009883a 	mov	r4,r20
   635ac:	880b883a 	mov	r5,r17
   635b0:	006af9c0 	call	6af9c <__adddf3>
   635b4:	1009883a 	mov	r4,r2
   635b8:	180b883a 	mov	r5,r3
   635bc:	1029883a 	mov	r20,r2
   635c0:	1823883a 	mov	r17,r3
   635c4:	006d5d80 	call	6d5d8 <__fixdfsi>
   635c8:	000d883a 	mov	r6,zero
   635cc:	000f883a 	mov	r7,zero
   635d0:	a009883a 	mov	r4,r20
   635d4:	880b883a 	mov	r5,r17
   635d8:	d8800515 	stw	r2,20(sp)
   635dc:	006c37c0 	call	6c37c <__ledf2>
   635e0:	10028716 	blt	r2,zero,64000 <_dtoa_r+0xc88>
   635e4:	d8c00517 	ldw	r3,20(sp)
   635e8:	00800584 	movi	r2,22
   635ec:	10c27536 	bltu	r2,r3,63fc4 <_dtoa_r+0xc4c>
   635f0:	180490fa 	slli	r2,r3,3
   635f4:	00c001f4 	movhi	r3,7
   635f8:	18c1ae04 	addi	r3,r3,1720
   635fc:	1885883a 	add	r2,r3,r2
   63600:	11000017 	ldw	r4,0(r2)
   63604:	11400117 	ldw	r5,4(r2)
   63608:	900d883a 	mov	r6,r18
   6360c:	980f883a 	mov	r7,r19
   63610:	006c2a00 	call	6c2a0 <__gedf2>
   63614:	00828d0e 	bge	zero,r2,6404c <_dtoa_r+0xcd4>
   63618:	d9000517 	ldw	r4,20(sp)
   6361c:	d8000e15 	stw	zero,56(sp)
   63620:	213fffc4 	addi	r4,r4,-1
   63624:	d9000515 	stw	r4,20(sp)
   63628:	b42dc83a 	sub	r22,r22,r16
   6362c:	b5bfffc4 	addi	r22,r22,-1
   63630:	b0026f16 	blt	r22,zero,63ff0 <_dtoa_r+0xc78>
   63634:	d8000815 	stw	zero,32(sp)
   63638:	d9c00517 	ldw	r7,20(sp)
   6363c:	38026416 	blt	r7,zero,63fd0 <_dtoa_r+0xc58>
   63640:	b1ed883a 	add	r22,r22,r7
   63644:	d9c00d15 	stw	r7,52(sp)
   63648:	d8000a15 	stw	zero,40(sp)
   6364c:	d9800317 	ldw	r6,12(sp)
   63650:	00800244 	movi	r2,9
   63654:	11811436 	bltu	r2,r6,63aa8 <_dtoa_r+0x730>
   63658:	00800144 	movi	r2,5
   6365c:	1184e10e 	bge	r2,r6,649e4 <_dtoa_r+0x166c>
   63660:	31bfff04 	addi	r6,r6,-4
   63664:	d9800315 	stw	r6,12(sp)
   63668:	0023883a 	mov	r17,zero
   6366c:	d9800317 	ldw	r6,12(sp)
   63670:	008000c4 	movi	r2,3
   63674:	30836726 	beq	r6,r2,64414 <_dtoa_r+0x109c>
   63678:	1183410e 	bge	r2,r6,64380 <_dtoa_r+0x1008>
   6367c:	d9c00317 	ldw	r7,12(sp)
   63680:	00800104 	movi	r2,4
   63684:	38827c26 	beq	r7,r2,64078 <_dtoa_r+0xd00>
   63688:	00800144 	movi	r2,5
   6368c:	3884c41e 	bne	r7,r2,649a0 <_dtoa_r+0x1628>
   63690:	00800044 	movi	r2,1
   63694:	d8800b15 	stw	r2,44(sp)
   63698:	d8c00517 	ldw	r3,20(sp)
   6369c:	d9002217 	ldw	r4,136(sp)
   636a0:	1907883a 	add	r3,r3,r4
   636a4:	19800044 	addi	r6,r3,1
   636a8:	d8c00c15 	stw	r3,48(sp)
   636ac:	d9800615 	stw	r6,24(sp)
   636b0:	0183a40e 	bge	zero,r6,64544 <_dtoa_r+0x11cc>
   636b4:	d9800617 	ldw	r6,24(sp)
   636b8:	3021883a 	mov	r16,r6
   636bc:	e0001115 	stw	zero,68(fp)
   636c0:	008005c4 	movi	r2,23
   636c4:	1184c92e 	bgeu	r2,r6,649ec <_dtoa_r+0x1674>
   636c8:	00c00044 	movi	r3,1
   636cc:	00800104 	movi	r2,4
   636d0:	1085883a 	add	r2,r2,r2
   636d4:	11000504 	addi	r4,r2,20
   636d8:	180b883a 	mov	r5,r3
   636dc:	18c00044 	addi	r3,r3,1
   636e0:	313ffb2e 	bgeu	r6,r4,636d0 <__alt_data_end+0xfffe36d0>
   636e4:	e1401115 	stw	r5,68(fp)
   636e8:	e009883a 	mov	r4,fp
   636ec:	00668e80 	call	668e8 <_Balloc>
   636f0:	d8800715 	stw	r2,28(sp)
   636f4:	e0801015 	stw	r2,64(fp)
   636f8:	00800384 	movi	r2,14
   636fc:	1400f736 	bltu	r2,r16,63adc <_dtoa_r+0x764>
   63700:	8800f626 	beq	r17,zero,63adc <_dtoa_r+0x764>
   63704:	d9c00517 	ldw	r7,20(sp)
   63708:	01c39a0e 	bge	zero,r7,64574 <_dtoa_r+0x11fc>
   6370c:	388003cc 	andi	r2,r7,15
   63710:	100490fa 	slli	r2,r2,3
   63714:	382bd13a 	srai	r21,r7,4
   63718:	00c001f4 	movhi	r3,7
   6371c:	18c1ae04 	addi	r3,r3,1720
   63720:	1885883a 	add	r2,r3,r2
   63724:	a8c0040c 	andi	r3,r21,16
   63728:	12400017 	ldw	r9,0(r2)
   6372c:	12000117 	ldw	r8,4(r2)
   63730:	18037926 	beq	r3,zero,64518 <_dtoa_r+0x11a0>
   63734:	008001f4 	movhi	r2,7
   63738:	1081a404 	addi	r2,r2,1680
   6373c:	11800817 	ldw	r6,32(r2)
   63740:	11c00917 	ldw	r7,36(r2)
   63744:	9009883a 	mov	r4,r18
   63748:	980b883a 	mov	r5,r19
   6374c:	da001715 	stw	r8,92(sp)
   63750:	da401615 	stw	r9,88(sp)
   63754:	006b8480 	call	6b848 <__divdf3>
   63758:	da001717 	ldw	r8,92(sp)
   6375c:	da401617 	ldw	r9,88(sp)
   63760:	ad4003cc 	andi	r21,r21,15
   63764:	040000c4 	movi	r16,3
   63768:	1023883a 	mov	r17,r2
   6376c:	1829883a 	mov	r20,r3
   63770:	a8001126 	beq	r21,zero,637b8 <_dtoa_r+0x440>
   63774:	05c001f4 	movhi	r23,7
   63778:	bdc1a404 	addi	r23,r23,1680
   6377c:	4805883a 	mov	r2,r9
   63780:	4007883a 	mov	r3,r8
   63784:	a980004c 	andi	r6,r21,1
   63788:	1009883a 	mov	r4,r2
   6378c:	a82bd07a 	srai	r21,r21,1
   63790:	180b883a 	mov	r5,r3
   63794:	30000426 	beq	r6,zero,637a8 <_dtoa_r+0x430>
   63798:	b9800017 	ldw	r6,0(r23)
   6379c:	b9c00117 	ldw	r7,4(r23)
   637a0:	84000044 	addi	r16,r16,1
   637a4:	006c4700 	call	6c470 <__muldf3>
   637a8:	bdc00204 	addi	r23,r23,8
   637ac:	a83ff51e 	bne	r21,zero,63784 <__alt_data_end+0xfffe3784>
   637b0:	1013883a 	mov	r9,r2
   637b4:	1811883a 	mov	r8,r3
   637b8:	480d883a 	mov	r6,r9
   637bc:	400f883a 	mov	r7,r8
   637c0:	8809883a 	mov	r4,r17
   637c4:	a00b883a 	mov	r5,r20
   637c8:	006b8480 	call	6b848 <__divdf3>
   637cc:	d8800f15 	stw	r2,60(sp)
   637d0:	d8c01015 	stw	r3,64(sp)
   637d4:	d8c00e17 	ldw	r3,56(sp)
   637d8:	18000626 	beq	r3,zero,637f4 <_dtoa_r+0x47c>
   637dc:	d9000f17 	ldw	r4,60(sp)
   637e0:	d9401017 	ldw	r5,64(sp)
   637e4:	000d883a 	mov	r6,zero
   637e8:	01cffc34 	movhi	r7,16368
   637ec:	006c37c0 	call	6c37c <__ledf2>
   637f0:	10040b16 	blt	r2,zero,64820 <_dtoa_r+0x14a8>
   637f4:	8009883a 	mov	r4,r16
   637f8:	006d6580 	call	6d658 <__floatsidf>
   637fc:	d9800f17 	ldw	r6,60(sp)
   63800:	d9c01017 	ldw	r7,64(sp)
   63804:	1009883a 	mov	r4,r2
   63808:	180b883a 	mov	r5,r3
   6380c:	006c4700 	call	6c470 <__muldf3>
   63810:	000d883a 	mov	r6,zero
   63814:	01d00734 	movhi	r7,16412
   63818:	1009883a 	mov	r4,r2
   6381c:	180b883a 	mov	r5,r3
   63820:	006af9c0 	call	6af9c <__adddf3>
   63824:	1021883a 	mov	r16,r2
   63828:	d8800617 	ldw	r2,24(sp)
   6382c:	047f3034 	movhi	r17,64704
   63830:	1c63883a 	add	r17,r3,r17
   63834:	10031826 	beq	r2,zero,64498 <_dtoa_r+0x1120>
   63838:	d8c00517 	ldw	r3,20(sp)
   6383c:	db000617 	ldw	r12,24(sp)
   63840:	d8c01315 	stw	r3,76(sp)
   63844:	d9000b17 	ldw	r4,44(sp)
   63848:	20038f26 	beq	r4,zero,64688 <_dtoa_r+0x1310>
   6384c:	60bfffc4 	addi	r2,r12,-1
   63850:	100490fa 	slli	r2,r2,3
   63854:	00c001f4 	movhi	r3,7
   63858:	18c1ae04 	addi	r3,r3,1720
   6385c:	1885883a 	add	r2,r3,r2
   63860:	11800017 	ldw	r6,0(r2)
   63864:	11c00117 	ldw	r7,4(r2)
   63868:	d8800717 	ldw	r2,28(sp)
   6386c:	0009883a 	mov	r4,zero
   63870:	014ff834 	movhi	r5,16352
   63874:	db001615 	stw	r12,88(sp)
   63878:	15c00044 	addi	r23,r2,1
   6387c:	006b8480 	call	6b848 <__divdf3>
   63880:	800d883a 	mov	r6,r16
   63884:	880f883a 	mov	r7,r17
   63888:	1009883a 	mov	r4,r2
   6388c:	180b883a 	mov	r5,r3
   63890:	006ccdc0 	call	6ccdc <__subdf3>
   63894:	d9401017 	ldw	r5,64(sp)
   63898:	d9000f17 	ldw	r4,60(sp)
   6389c:	102b883a 	mov	r21,r2
   638a0:	d8c01215 	stw	r3,72(sp)
   638a4:	006d5d80 	call	6d5d8 <__fixdfsi>
   638a8:	1009883a 	mov	r4,r2
   638ac:	1029883a 	mov	r20,r2
   638b0:	006d6580 	call	6d658 <__floatsidf>
   638b4:	d9000f17 	ldw	r4,60(sp)
   638b8:	d9401017 	ldw	r5,64(sp)
   638bc:	100d883a 	mov	r6,r2
   638c0:	180f883a 	mov	r7,r3
   638c4:	006ccdc0 	call	6ccdc <__subdf3>
   638c8:	1823883a 	mov	r17,r3
   638cc:	d8c00717 	ldw	r3,28(sp)
   638d0:	d9401217 	ldw	r5,72(sp)
   638d4:	a2000c04 	addi	r8,r20,48
   638d8:	1021883a 	mov	r16,r2
   638dc:	1a000005 	stb	r8,0(r3)
   638e0:	800d883a 	mov	r6,r16
   638e4:	880f883a 	mov	r7,r17
   638e8:	a809883a 	mov	r4,r21
   638ec:	4029883a 	mov	r20,r8
   638f0:	006c2a00 	call	6c2a0 <__gedf2>
   638f4:	00841d16 	blt	zero,r2,6496c <_dtoa_r+0x15f4>
   638f8:	800d883a 	mov	r6,r16
   638fc:	880f883a 	mov	r7,r17
   63900:	0009883a 	mov	r4,zero
   63904:	014ffc34 	movhi	r5,16368
   63908:	006ccdc0 	call	6ccdc <__subdf3>
   6390c:	d9401217 	ldw	r5,72(sp)
   63910:	100d883a 	mov	r6,r2
   63914:	180f883a 	mov	r7,r3
   63918:	a809883a 	mov	r4,r21
   6391c:	006c2a00 	call	6c2a0 <__gedf2>
   63920:	db001617 	ldw	r12,88(sp)
   63924:	00840e16 	blt	zero,r2,64960 <_dtoa_r+0x15e8>
   63928:	00800044 	movi	r2,1
   6392c:	13006b0e 	bge	r2,r12,63adc <_dtoa_r+0x764>
   63930:	d9000717 	ldw	r4,28(sp)
   63934:	dd800f15 	stw	r22,60(sp)
   63938:	dcc01015 	stw	r19,64(sp)
   6393c:	2319883a 	add	r12,r4,r12
   63940:	dcc01217 	ldw	r19,72(sp)
   63944:	602d883a 	mov	r22,r12
   63948:	dc801215 	stw	r18,72(sp)
   6394c:	b825883a 	mov	r18,r23
   63950:	00000906 	br	63978 <_dtoa_r+0x600>
   63954:	006ccdc0 	call	6ccdc <__subdf3>
   63958:	a80d883a 	mov	r6,r21
   6395c:	980f883a 	mov	r7,r19
   63960:	1009883a 	mov	r4,r2
   63964:	180b883a 	mov	r5,r3
   63968:	006c37c0 	call	6c37c <__ledf2>
   6396c:	1003e816 	blt	r2,zero,64910 <_dtoa_r+0x1598>
   63970:	b825883a 	mov	r18,r23
   63974:	bd83e926 	beq	r23,r22,6491c <_dtoa_r+0x15a4>
   63978:	a809883a 	mov	r4,r21
   6397c:	980b883a 	mov	r5,r19
   63980:	000d883a 	mov	r6,zero
   63984:	01d00934 	movhi	r7,16420
   63988:	006c4700 	call	6c470 <__muldf3>
   6398c:	000d883a 	mov	r6,zero
   63990:	01d00934 	movhi	r7,16420
   63994:	8009883a 	mov	r4,r16
   63998:	880b883a 	mov	r5,r17
   6399c:	102b883a 	mov	r21,r2
   639a0:	1827883a 	mov	r19,r3
   639a4:	006c4700 	call	6c470 <__muldf3>
   639a8:	180b883a 	mov	r5,r3
   639ac:	1009883a 	mov	r4,r2
   639b0:	1821883a 	mov	r16,r3
   639b4:	1023883a 	mov	r17,r2
   639b8:	006d5d80 	call	6d5d8 <__fixdfsi>
   639bc:	1009883a 	mov	r4,r2
   639c0:	1029883a 	mov	r20,r2
   639c4:	006d6580 	call	6d658 <__floatsidf>
   639c8:	8809883a 	mov	r4,r17
   639cc:	800b883a 	mov	r5,r16
   639d0:	100d883a 	mov	r6,r2
   639d4:	180f883a 	mov	r7,r3
   639d8:	006ccdc0 	call	6ccdc <__subdf3>
   639dc:	a5000c04 	addi	r20,r20,48
   639e0:	a80d883a 	mov	r6,r21
   639e4:	980f883a 	mov	r7,r19
   639e8:	1009883a 	mov	r4,r2
   639ec:	180b883a 	mov	r5,r3
   639f0:	95000005 	stb	r20,0(r18)
   639f4:	1021883a 	mov	r16,r2
   639f8:	1823883a 	mov	r17,r3
   639fc:	006c37c0 	call	6c37c <__ledf2>
   63a00:	bdc00044 	addi	r23,r23,1
   63a04:	800d883a 	mov	r6,r16
   63a08:	880f883a 	mov	r7,r17
   63a0c:	0009883a 	mov	r4,zero
   63a10:	014ffc34 	movhi	r5,16368
   63a14:	103fcf0e 	bge	r2,zero,63954 <__alt_data_end+0xfffe3954>
   63a18:	d8c01317 	ldw	r3,76(sp)
   63a1c:	d8c00515 	stw	r3,20(sp)
   63a20:	d9400917 	ldw	r5,36(sp)
   63a24:	e009883a 	mov	r4,fp
   63a28:	00669900 	call	66990 <_Bfree>
   63a2c:	d9000517 	ldw	r4,20(sp)
   63a30:	d9802317 	ldw	r6,140(sp)
   63a34:	d9c02517 	ldw	r7,148(sp)
   63a38:	b8000005 	stb	zero,0(r23)
   63a3c:	20800044 	addi	r2,r4,1
   63a40:	30800015 	stw	r2,0(r6)
   63a44:	3802aa26 	beq	r7,zero,644f0 <_dtoa_r+0x1178>
   63a48:	3dc00015 	stw	r23,0(r7)
   63a4c:	d8800717 	ldw	r2,28(sp)
   63a50:	003e7906 	br	63438 <__alt_data_end+0xfffe3438>
   63a54:	00800434 	movhi	r2,16
   63a58:	10bfffc4 	addi	r2,r2,-1
   63a5c:	88a2703a 	and	r17,r17,r2
   63a60:	883e851e 	bne	r17,zero,63478 <__alt_data_end+0xfffe3478>
   63a64:	008001f4 	movhi	r2,7
   63a68:	10818f04 	addi	r2,r2,1596
   63a6c:	003e8406 	br	63480 <__alt_data_end+0xfffe3480>
   63a70:	10c00204 	addi	r3,r2,8
   63a74:	003e8706 	br	63494 <__alt_data_end+0xfffe3494>
   63a78:	01400434 	movhi	r5,16
   63a7c:	297fffc4 	addi	r5,r5,-1
   63a80:	994a703a 	and	r5,r19,r5
   63a84:	9009883a 	mov	r4,r18
   63a88:	843f0044 	addi	r16,r16,-1023
   63a8c:	294ffc34 	orhi	r5,r5,16368
   63a90:	dd800217 	ldw	r22,8(sp)
   63a94:	d8001115 	stw	zero,68(sp)
   63a98:	003ea506 	br	63530 <__alt_data_end+0xfffe3530>
   63a9c:	008001f4 	movhi	r2,7
   63aa0:	10818604 	addi	r2,r2,1560
   63aa4:	003e6406 	br	63438 <__alt_data_end+0xfffe3438>
   63aa8:	e0001115 	stw	zero,68(fp)
   63aac:	000b883a 	mov	r5,zero
   63ab0:	e009883a 	mov	r4,fp
   63ab4:	00668e80 	call	668e8 <_Balloc>
   63ab8:	01bfffc4 	movi	r6,-1
   63abc:	01c00044 	movi	r7,1
   63ac0:	d8800715 	stw	r2,28(sp)
   63ac4:	d9800c15 	stw	r6,48(sp)
   63ac8:	e0801015 	stw	r2,64(fp)
   63acc:	d8000315 	stw	zero,12(sp)
   63ad0:	d9c00b15 	stw	r7,44(sp)
   63ad4:	d9800615 	stw	r6,24(sp)
   63ad8:	d8002215 	stw	zero,136(sp)
   63adc:	d8800117 	ldw	r2,4(sp)
   63ae0:	10008916 	blt	r2,zero,63d08 <_dtoa_r+0x990>
   63ae4:	d9000517 	ldw	r4,20(sp)
   63ae8:	00c00384 	movi	r3,14
   63aec:	19008616 	blt	r3,r4,63d08 <_dtoa_r+0x990>
   63af0:	200490fa 	slli	r2,r4,3
   63af4:	00c001f4 	movhi	r3,7
   63af8:	d9802217 	ldw	r6,136(sp)
   63afc:	18c1ae04 	addi	r3,r3,1720
   63b00:	1885883a 	add	r2,r3,r2
   63b04:	14000017 	ldw	r16,0(r2)
   63b08:	14400117 	ldw	r17,4(r2)
   63b0c:	30016316 	blt	r6,zero,6409c <_dtoa_r+0xd24>
   63b10:	800d883a 	mov	r6,r16
   63b14:	880f883a 	mov	r7,r17
   63b18:	9009883a 	mov	r4,r18
   63b1c:	980b883a 	mov	r5,r19
   63b20:	006b8480 	call	6b848 <__divdf3>
   63b24:	180b883a 	mov	r5,r3
   63b28:	1009883a 	mov	r4,r2
   63b2c:	006d5d80 	call	6d5d8 <__fixdfsi>
   63b30:	1009883a 	mov	r4,r2
   63b34:	102b883a 	mov	r21,r2
   63b38:	006d6580 	call	6d658 <__floatsidf>
   63b3c:	800d883a 	mov	r6,r16
   63b40:	880f883a 	mov	r7,r17
   63b44:	1009883a 	mov	r4,r2
   63b48:	180b883a 	mov	r5,r3
   63b4c:	006c4700 	call	6c470 <__muldf3>
   63b50:	100d883a 	mov	r6,r2
   63b54:	180f883a 	mov	r7,r3
   63b58:	9009883a 	mov	r4,r18
   63b5c:	980b883a 	mov	r5,r19
   63b60:	006ccdc0 	call	6ccdc <__subdf3>
   63b64:	d9c00717 	ldw	r7,28(sp)
   63b68:	1009883a 	mov	r4,r2
   63b6c:	a8800c04 	addi	r2,r21,48
   63b70:	38800005 	stb	r2,0(r7)
   63b74:	3dc00044 	addi	r23,r7,1
   63b78:	d9c00617 	ldw	r7,24(sp)
   63b7c:	01800044 	movi	r6,1
   63b80:	180b883a 	mov	r5,r3
   63b84:	2005883a 	mov	r2,r4
   63b88:	39803826 	beq	r7,r6,63c6c <_dtoa_r+0x8f4>
   63b8c:	000d883a 	mov	r6,zero
   63b90:	01d00934 	movhi	r7,16420
   63b94:	006c4700 	call	6c470 <__muldf3>
   63b98:	000d883a 	mov	r6,zero
   63b9c:	000f883a 	mov	r7,zero
   63ba0:	1009883a 	mov	r4,r2
   63ba4:	180b883a 	mov	r5,r3
   63ba8:	1025883a 	mov	r18,r2
   63bac:	1827883a 	mov	r19,r3
   63bb0:	006c2180 	call	6c218 <__eqdf2>
   63bb4:	103f9a26 	beq	r2,zero,63a20 <__alt_data_end+0xfffe3a20>
   63bb8:	d9c00617 	ldw	r7,24(sp)
   63bbc:	d8c00717 	ldw	r3,28(sp)
   63bc0:	b829883a 	mov	r20,r23
   63bc4:	38bfffc4 	addi	r2,r7,-1
   63bc8:	18ad883a 	add	r22,r3,r2
   63bcc:	00000a06 	br	63bf8 <_dtoa_r+0x880>
   63bd0:	006c4700 	call	6c470 <__muldf3>
   63bd4:	000d883a 	mov	r6,zero
   63bd8:	000f883a 	mov	r7,zero
   63bdc:	1009883a 	mov	r4,r2
   63be0:	180b883a 	mov	r5,r3
   63be4:	1025883a 	mov	r18,r2
   63be8:	1827883a 	mov	r19,r3
   63bec:	b829883a 	mov	r20,r23
   63bf0:	006c2180 	call	6c218 <__eqdf2>
   63bf4:	103f8a26 	beq	r2,zero,63a20 <__alt_data_end+0xfffe3a20>
   63bf8:	800d883a 	mov	r6,r16
   63bfc:	880f883a 	mov	r7,r17
   63c00:	9009883a 	mov	r4,r18
   63c04:	980b883a 	mov	r5,r19
   63c08:	006b8480 	call	6b848 <__divdf3>
   63c0c:	180b883a 	mov	r5,r3
   63c10:	1009883a 	mov	r4,r2
   63c14:	006d5d80 	call	6d5d8 <__fixdfsi>
   63c18:	1009883a 	mov	r4,r2
   63c1c:	102b883a 	mov	r21,r2
   63c20:	006d6580 	call	6d658 <__floatsidf>
   63c24:	800d883a 	mov	r6,r16
   63c28:	880f883a 	mov	r7,r17
   63c2c:	1009883a 	mov	r4,r2
   63c30:	180b883a 	mov	r5,r3
   63c34:	006c4700 	call	6c470 <__muldf3>
   63c38:	100d883a 	mov	r6,r2
   63c3c:	180f883a 	mov	r7,r3
   63c40:	9009883a 	mov	r4,r18
   63c44:	980b883a 	mov	r5,r19
   63c48:	006ccdc0 	call	6ccdc <__subdf3>
   63c4c:	aa000c04 	addi	r8,r21,48
   63c50:	a2000005 	stb	r8,0(r20)
   63c54:	000d883a 	mov	r6,zero
   63c58:	01d00934 	movhi	r7,16420
   63c5c:	1009883a 	mov	r4,r2
   63c60:	180b883a 	mov	r5,r3
   63c64:	a5c00044 	addi	r23,r20,1
   63c68:	b53fd91e 	bne	r22,r20,63bd0 <__alt_data_end+0xfffe3bd0>
   63c6c:	100d883a 	mov	r6,r2
   63c70:	180f883a 	mov	r7,r3
   63c74:	1009883a 	mov	r4,r2
   63c78:	180b883a 	mov	r5,r3
   63c7c:	006af9c0 	call	6af9c <__adddf3>
   63c80:	100d883a 	mov	r6,r2
   63c84:	180f883a 	mov	r7,r3
   63c88:	8009883a 	mov	r4,r16
   63c8c:	880b883a 	mov	r5,r17
   63c90:	1027883a 	mov	r19,r2
   63c94:	1825883a 	mov	r18,r3
   63c98:	006c37c0 	call	6c37c <__ledf2>
   63c9c:	10000816 	blt	r2,zero,63cc0 <_dtoa_r+0x948>
   63ca0:	980d883a 	mov	r6,r19
   63ca4:	900f883a 	mov	r7,r18
   63ca8:	8009883a 	mov	r4,r16
   63cac:	880b883a 	mov	r5,r17
   63cb0:	006c2180 	call	6c218 <__eqdf2>
   63cb4:	103f5a1e 	bne	r2,zero,63a20 <__alt_data_end+0xfffe3a20>
   63cb8:	ad40004c 	andi	r21,r21,1
   63cbc:	a83f5826 	beq	r21,zero,63a20 <__alt_data_end+0xfffe3a20>
   63cc0:	bd3fffc3 	ldbu	r20,-1(r23)
   63cc4:	b8bfffc4 	addi	r2,r23,-1
   63cc8:	1007883a 	mov	r3,r2
   63ccc:	01400e44 	movi	r5,57
   63cd0:	d9800717 	ldw	r6,28(sp)
   63cd4:	00000506 	br	63cec <_dtoa_r+0x974>
   63cd8:	18ffffc4 	addi	r3,r3,-1
   63cdc:	11824726 	beq	r2,r6,645fc <_dtoa_r+0x1284>
   63ce0:	1d000003 	ldbu	r20,0(r3)
   63ce4:	102f883a 	mov	r23,r2
   63ce8:	10bfffc4 	addi	r2,r2,-1
   63cec:	a1003fcc 	andi	r4,r20,255
   63cf0:	2100201c 	xori	r4,r4,128
   63cf4:	213fe004 	addi	r4,r4,-128
   63cf8:	217ff726 	beq	r4,r5,63cd8 <__alt_data_end+0xfffe3cd8>
   63cfc:	a2000044 	addi	r8,r20,1
   63d00:	12000005 	stb	r8,0(r2)
   63d04:	003f4606 	br	63a20 <__alt_data_end+0xfffe3a20>
   63d08:	d9000b17 	ldw	r4,44(sp)
   63d0c:	2000c826 	beq	r4,zero,64030 <_dtoa_r+0xcb8>
   63d10:	d9800317 	ldw	r6,12(sp)
   63d14:	00c00044 	movi	r3,1
   63d18:	1980f90e 	bge	r3,r6,64100 <_dtoa_r+0xd88>
   63d1c:	d8800617 	ldw	r2,24(sp)
   63d20:	d8c00a17 	ldw	r3,40(sp)
   63d24:	157fffc4 	addi	r21,r2,-1
   63d28:	1d41f316 	blt	r3,r21,644f8 <_dtoa_r+0x1180>
   63d2c:	1d6bc83a 	sub	r21,r3,r21
   63d30:	d9c00617 	ldw	r7,24(sp)
   63d34:	3802aa16 	blt	r7,zero,647e0 <_dtoa_r+0x1468>
   63d38:	dd000817 	ldw	r20,32(sp)
   63d3c:	d8800617 	ldw	r2,24(sp)
   63d40:	d8c00817 	ldw	r3,32(sp)
   63d44:	01400044 	movi	r5,1
   63d48:	e009883a 	mov	r4,fp
   63d4c:	1887883a 	add	r3,r3,r2
   63d50:	d8c00815 	stw	r3,32(sp)
   63d54:	b0ad883a 	add	r22,r22,r2
   63d58:	0066d1c0 	call	66d1c <__i2b>
   63d5c:	1023883a 	mov	r17,r2
   63d60:	a0000826 	beq	r20,zero,63d84 <_dtoa_r+0xa0c>
   63d64:	0580070e 	bge	zero,r22,63d84 <_dtoa_r+0xa0c>
   63d68:	a005883a 	mov	r2,r20
   63d6c:	b500b916 	blt	r22,r20,64054 <_dtoa_r+0xcdc>
   63d70:	d9000817 	ldw	r4,32(sp)
   63d74:	a0a9c83a 	sub	r20,r20,r2
   63d78:	b0adc83a 	sub	r22,r22,r2
   63d7c:	2089c83a 	sub	r4,r4,r2
   63d80:	d9000815 	stw	r4,32(sp)
   63d84:	d9800a17 	ldw	r6,40(sp)
   63d88:	0181810e 	bge	zero,r6,64390 <_dtoa_r+0x1018>
   63d8c:	d9c00b17 	ldw	r7,44(sp)
   63d90:	3800b326 	beq	r7,zero,64060 <_dtoa_r+0xce8>
   63d94:	a800b226 	beq	r21,zero,64060 <_dtoa_r+0xce8>
   63d98:	880b883a 	mov	r5,r17
   63d9c:	a80d883a 	mov	r6,r21
   63da0:	e009883a 	mov	r4,fp
   63da4:	0066fe40 	call	66fe4 <__pow5mult>
   63da8:	d9800917 	ldw	r6,36(sp)
   63dac:	100b883a 	mov	r5,r2
   63db0:	e009883a 	mov	r4,fp
   63db4:	1023883a 	mov	r17,r2
   63db8:	0066d580 	call	66d58 <__multiply>
   63dbc:	1021883a 	mov	r16,r2
   63dc0:	d8800a17 	ldw	r2,40(sp)
   63dc4:	d9400917 	ldw	r5,36(sp)
   63dc8:	e009883a 	mov	r4,fp
   63dcc:	1545c83a 	sub	r2,r2,r21
   63dd0:	d8800a15 	stw	r2,40(sp)
   63dd4:	00669900 	call	66990 <_Bfree>
   63dd8:	d8c00a17 	ldw	r3,40(sp)
   63ddc:	18009f1e 	bne	r3,zero,6405c <_dtoa_r+0xce4>
   63de0:	05c00044 	movi	r23,1
   63de4:	e009883a 	mov	r4,fp
   63de8:	b80b883a 	mov	r5,r23
   63dec:	0066d1c0 	call	66d1c <__i2b>
   63df0:	d9000d17 	ldw	r4,52(sp)
   63df4:	102b883a 	mov	r21,r2
   63df8:	2000ce26 	beq	r4,zero,64134 <_dtoa_r+0xdbc>
   63dfc:	200d883a 	mov	r6,r4
   63e00:	100b883a 	mov	r5,r2
   63e04:	e009883a 	mov	r4,fp
   63e08:	0066fe40 	call	66fe4 <__pow5mult>
   63e0c:	d9800317 	ldw	r6,12(sp)
   63e10:	102b883a 	mov	r21,r2
   63e14:	b981810e 	bge	r23,r6,6441c <_dtoa_r+0x10a4>
   63e18:	0027883a 	mov	r19,zero
   63e1c:	a8800417 	ldw	r2,16(r21)
   63e20:	05c00804 	movi	r23,32
   63e24:	10800104 	addi	r2,r2,4
   63e28:	1085883a 	add	r2,r2,r2
   63e2c:	1085883a 	add	r2,r2,r2
   63e30:	a885883a 	add	r2,r21,r2
   63e34:	11000017 	ldw	r4,0(r2)
   63e38:	0066c040 	call	66c04 <__hi0bits>
   63e3c:	b885c83a 	sub	r2,r23,r2
   63e40:	1585883a 	add	r2,r2,r22
   63e44:	108007cc 	andi	r2,r2,31
   63e48:	1000b326 	beq	r2,zero,64118 <_dtoa_r+0xda0>
   63e4c:	00c00804 	movi	r3,32
   63e50:	1887c83a 	sub	r3,r3,r2
   63e54:	01000104 	movi	r4,4
   63e58:	20c2cd0e 	bge	r4,r3,64990 <_dtoa_r+0x1618>
   63e5c:	00c00704 	movi	r3,28
   63e60:	1885c83a 	sub	r2,r3,r2
   63e64:	d8c00817 	ldw	r3,32(sp)
   63e68:	a0a9883a 	add	r20,r20,r2
   63e6c:	b0ad883a 	add	r22,r22,r2
   63e70:	1887883a 	add	r3,r3,r2
   63e74:	d8c00815 	stw	r3,32(sp)
   63e78:	d9800817 	ldw	r6,32(sp)
   63e7c:	0180040e 	bge	zero,r6,63e90 <_dtoa_r+0xb18>
   63e80:	800b883a 	mov	r5,r16
   63e84:	e009883a 	mov	r4,fp
   63e88:	00671240 	call	67124 <__lshift>
   63e8c:	1021883a 	mov	r16,r2
   63e90:	0580050e 	bge	zero,r22,63ea8 <_dtoa_r+0xb30>
   63e94:	a80b883a 	mov	r5,r21
   63e98:	b00d883a 	mov	r6,r22
   63e9c:	e009883a 	mov	r4,fp
   63ea0:	00671240 	call	67124 <__lshift>
   63ea4:	102b883a 	mov	r21,r2
   63ea8:	d9c00e17 	ldw	r7,56(sp)
   63eac:	3801211e 	bne	r7,zero,64334 <_dtoa_r+0xfbc>
   63eb0:	d9800617 	ldw	r6,24(sp)
   63eb4:	0181380e 	bge	zero,r6,64398 <_dtoa_r+0x1020>
   63eb8:	d8c00b17 	ldw	r3,44(sp)
   63ebc:	1800ab1e 	bne	r3,zero,6416c <_dtoa_r+0xdf4>
   63ec0:	dc800717 	ldw	r18,28(sp)
   63ec4:	dcc00617 	ldw	r19,24(sp)
   63ec8:	9029883a 	mov	r20,r18
   63ecc:	00000206 	br	63ed8 <_dtoa_r+0xb60>
   63ed0:	00669b80 	call	669b8 <__multadd>
   63ed4:	1021883a 	mov	r16,r2
   63ed8:	a80b883a 	mov	r5,r21
   63edc:	8009883a 	mov	r4,r16
   63ee0:	00631500 	call	63150 <quorem>
   63ee4:	10800c04 	addi	r2,r2,48
   63ee8:	90800005 	stb	r2,0(r18)
   63eec:	94800044 	addi	r18,r18,1
   63ef0:	9507c83a 	sub	r3,r18,r20
   63ef4:	000f883a 	mov	r7,zero
   63ef8:	01800284 	movi	r6,10
   63efc:	800b883a 	mov	r5,r16
   63f00:	e009883a 	mov	r4,fp
   63f04:	1cfff216 	blt	r3,r19,63ed0 <__alt_data_end+0xfffe3ed0>
   63f08:	1011883a 	mov	r8,r2
   63f0c:	d8800617 	ldw	r2,24(sp)
   63f10:	0082370e 	bge	zero,r2,647f0 <_dtoa_r+0x1478>
   63f14:	d9000717 	ldw	r4,28(sp)
   63f18:	0025883a 	mov	r18,zero
   63f1c:	20af883a 	add	r23,r4,r2
   63f20:	01800044 	movi	r6,1
   63f24:	800b883a 	mov	r5,r16
   63f28:	e009883a 	mov	r4,fp
   63f2c:	da001715 	stw	r8,92(sp)
   63f30:	00671240 	call	67124 <__lshift>
   63f34:	a80b883a 	mov	r5,r21
   63f38:	1009883a 	mov	r4,r2
   63f3c:	d8800915 	stw	r2,36(sp)
   63f40:	006726c0 	call	6726c <__mcmp>
   63f44:	da001717 	ldw	r8,92(sp)
   63f48:	0081800e 	bge	zero,r2,6454c <_dtoa_r+0x11d4>
   63f4c:	b93fffc3 	ldbu	r4,-1(r23)
   63f50:	b8bfffc4 	addi	r2,r23,-1
   63f54:	1007883a 	mov	r3,r2
   63f58:	01800e44 	movi	r6,57
   63f5c:	d9c00717 	ldw	r7,28(sp)
   63f60:	00000506 	br	63f78 <_dtoa_r+0xc00>
   63f64:	18ffffc4 	addi	r3,r3,-1
   63f68:	11c12326 	beq	r2,r7,643f8 <_dtoa_r+0x1080>
   63f6c:	19000003 	ldbu	r4,0(r3)
   63f70:	102f883a 	mov	r23,r2
   63f74:	10bfffc4 	addi	r2,r2,-1
   63f78:	21403fcc 	andi	r5,r4,255
   63f7c:	2940201c 	xori	r5,r5,128
   63f80:	297fe004 	addi	r5,r5,-128
   63f84:	29bff726 	beq	r5,r6,63f64 <__alt_data_end+0xfffe3f64>
   63f88:	21000044 	addi	r4,r4,1
   63f8c:	11000005 	stb	r4,0(r2)
   63f90:	a80b883a 	mov	r5,r21
   63f94:	e009883a 	mov	r4,fp
   63f98:	00669900 	call	66990 <_Bfree>
   63f9c:	883ea026 	beq	r17,zero,63a20 <__alt_data_end+0xfffe3a20>
   63fa0:	90000426 	beq	r18,zero,63fb4 <_dtoa_r+0xc3c>
   63fa4:	94400326 	beq	r18,r17,63fb4 <_dtoa_r+0xc3c>
   63fa8:	900b883a 	mov	r5,r18
   63fac:	e009883a 	mov	r4,fp
   63fb0:	00669900 	call	66990 <_Bfree>
   63fb4:	880b883a 	mov	r5,r17
   63fb8:	e009883a 	mov	r4,fp
   63fbc:	00669900 	call	66990 <_Bfree>
   63fc0:	003e9706 	br	63a20 <__alt_data_end+0xfffe3a20>
   63fc4:	01800044 	movi	r6,1
   63fc8:	d9800e15 	stw	r6,56(sp)
   63fcc:	003d9606 	br	63628 <__alt_data_end+0xfffe3628>
   63fd0:	d8800817 	ldw	r2,32(sp)
   63fd4:	d8c00517 	ldw	r3,20(sp)
   63fd8:	d8000d15 	stw	zero,52(sp)
   63fdc:	10c5c83a 	sub	r2,r2,r3
   63fe0:	00c9c83a 	sub	r4,zero,r3
   63fe4:	d8800815 	stw	r2,32(sp)
   63fe8:	d9000a15 	stw	r4,40(sp)
   63fec:	003d9706 	br	6364c <__alt_data_end+0xfffe364c>
   63ff0:	05adc83a 	sub	r22,zero,r22
   63ff4:	dd800815 	stw	r22,32(sp)
   63ff8:	002d883a 	mov	r22,zero
   63ffc:	003d8e06 	br	63638 <__alt_data_end+0xfffe3638>
   64000:	d9000517 	ldw	r4,20(sp)
   64004:	006d6580 	call	6d658 <__floatsidf>
   64008:	100d883a 	mov	r6,r2
   6400c:	180f883a 	mov	r7,r3
   64010:	a009883a 	mov	r4,r20
   64014:	880b883a 	mov	r5,r17
   64018:	006c2180 	call	6c218 <__eqdf2>
   6401c:	103d7126 	beq	r2,zero,635e4 <__alt_data_end+0xfffe35e4>
   64020:	d9c00517 	ldw	r7,20(sp)
   64024:	39ffffc4 	addi	r7,r7,-1
   64028:	d9c00515 	stw	r7,20(sp)
   6402c:	003d6d06 	br	635e4 <__alt_data_end+0xfffe35e4>
   64030:	dd400a17 	ldw	r21,40(sp)
   64034:	dd000817 	ldw	r20,32(sp)
   64038:	0023883a 	mov	r17,zero
   6403c:	003f4806 	br	63d60 <__alt_data_end+0xfffe3d60>
   64040:	10e3c83a 	sub	r17,r2,r3
   64044:	9448983a 	sll	r4,r18,r17
   64048:	003d3206 	br	63514 <__alt_data_end+0xfffe3514>
   6404c:	d8000e15 	stw	zero,56(sp)
   64050:	003d7506 	br	63628 <__alt_data_end+0xfffe3628>
   64054:	b005883a 	mov	r2,r22
   64058:	003f4506 	br	63d70 <__alt_data_end+0xfffe3d70>
   6405c:	dc000915 	stw	r16,36(sp)
   64060:	d9800a17 	ldw	r6,40(sp)
   64064:	d9400917 	ldw	r5,36(sp)
   64068:	e009883a 	mov	r4,fp
   6406c:	0066fe40 	call	66fe4 <__pow5mult>
   64070:	1021883a 	mov	r16,r2
   64074:	003f5a06 	br	63de0 <__alt_data_end+0xfffe3de0>
   64078:	01c00044 	movi	r7,1
   6407c:	d9c00b15 	stw	r7,44(sp)
   64080:	d8802217 	ldw	r2,136(sp)
   64084:	0081280e 	bge	zero,r2,64528 <_dtoa_r+0x11b0>
   64088:	100d883a 	mov	r6,r2
   6408c:	1021883a 	mov	r16,r2
   64090:	d8800c15 	stw	r2,48(sp)
   64094:	d8800615 	stw	r2,24(sp)
   64098:	003d8806 	br	636bc <__alt_data_end+0xfffe36bc>
   6409c:	d8800617 	ldw	r2,24(sp)
   640a0:	00be9b16 	blt	zero,r2,63b10 <__alt_data_end+0xfffe3b10>
   640a4:	10010f1e 	bne	r2,zero,644e4 <_dtoa_r+0x116c>
   640a8:	880b883a 	mov	r5,r17
   640ac:	000d883a 	mov	r6,zero
   640b0:	01d00534 	movhi	r7,16404
   640b4:	8009883a 	mov	r4,r16
   640b8:	006c4700 	call	6c470 <__muldf3>
   640bc:	900d883a 	mov	r6,r18
   640c0:	980f883a 	mov	r7,r19
   640c4:	1009883a 	mov	r4,r2
   640c8:	180b883a 	mov	r5,r3
   640cc:	006c2a00 	call	6c2a0 <__gedf2>
   640d0:	002b883a 	mov	r21,zero
   640d4:	0023883a 	mov	r17,zero
   640d8:	1000bf16 	blt	r2,zero,643d8 <_dtoa_r+0x1060>
   640dc:	d9802217 	ldw	r6,136(sp)
   640e0:	ddc00717 	ldw	r23,28(sp)
   640e4:	018c303a 	nor	r6,zero,r6
   640e8:	d9800515 	stw	r6,20(sp)
   640ec:	a80b883a 	mov	r5,r21
   640f0:	e009883a 	mov	r4,fp
   640f4:	00669900 	call	66990 <_Bfree>
   640f8:	883e4926 	beq	r17,zero,63a20 <__alt_data_end+0xfffe3a20>
   640fc:	003fad06 	br	63fb4 <__alt_data_end+0xfffe3fb4>
   64100:	d9c01117 	ldw	r7,68(sp)
   64104:	3801bc26 	beq	r7,zero,647f8 <_dtoa_r+0x1480>
   64108:	10810cc4 	addi	r2,r2,1075
   6410c:	dd400a17 	ldw	r21,40(sp)
   64110:	dd000817 	ldw	r20,32(sp)
   64114:	003f0a06 	br	63d40 <__alt_data_end+0xfffe3d40>
   64118:	00800704 	movi	r2,28
   6411c:	d9000817 	ldw	r4,32(sp)
   64120:	a0a9883a 	add	r20,r20,r2
   64124:	b0ad883a 	add	r22,r22,r2
   64128:	2089883a 	add	r4,r4,r2
   6412c:	d9000815 	stw	r4,32(sp)
   64130:	003f5106 	br	63e78 <__alt_data_end+0xfffe3e78>
   64134:	d8c00317 	ldw	r3,12(sp)
   64138:	b8c1fc0e 	bge	r23,r3,6492c <_dtoa_r+0x15b4>
   6413c:	0027883a 	mov	r19,zero
   64140:	b805883a 	mov	r2,r23
   64144:	003f3e06 	br	63e40 <__alt_data_end+0xfffe3e40>
   64148:	880b883a 	mov	r5,r17
   6414c:	e009883a 	mov	r4,fp
   64150:	000f883a 	mov	r7,zero
   64154:	01800284 	movi	r6,10
   64158:	00669b80 	call	669b8 <__multadd>
   6415c:	d9000c17 	ldw	r4,48(sp)
   64160:	1023883a 	mov	r17,r2
   64164:	0102040e 	bge	zero,r4,64978 <_dtoa_r+0x1600>
   64168:	d9000615 	stw	r4,24(sp)
   6416c:	0500050e 	bge	zero,r20,64184 <_dtoa_r+0xe0c>
   64170:	880b883a 	mov	r5,r17
   64174:	a00d883a 	mov	r6,r20
   64178:	e009883a 	mov	r4,fp
   6417c:	00671240 	call	67124 <__lshift>
   64180:	1023883a 	mov	r17,r2
   64184:	9801241e 	bne	r19,zero,64618 <_dtoa_r+0x12a0>
   64188:	8829883a 	mov	r20,r17
   6418c:	d9000617 	ldw	r4,24(sp)
   64190:	dcc00717 	ldw	r19,28(sp)
   64194:	9480004c 	andi	r18,r18,1
   64198:	20bfffc4 	addi	r2,r4,-1
   6419c:	9885883a 	add	r2,r19,r2
   641a0:	d8800415 	stw	r2,16(sp)
   641a4:	dc800615 	stw	r18,24(sp)
   641a8:	a80b883a 	mov	r5,r21
   641ac:	8009883a 	mov	r4,r16
   641b0:	00631500 	call	63150 <quorem>
   641b4:	880b883a 	mov	r5,r17
   641b8:	8009883a 	mov	r4,r16
   641bc:	102f883a 	mov	r23,r2
   641c0:	006726c0 	call	6726c <__mcmp>
   641c4:	a80b883a 	mov	r5,r21
   641c8:	a00d883a 	mov	r6,r20
   641cc:	e009883a 	mov	r4,fp
   641d0:	102d883a 	mov	r22,r2
   641d4:	00672cc0 	call	672cc <__mdiff>
   641d8:	1007883a 	mov	r3,r2
   641dc:	10800317 	ldw	r2,12(r2)
   641e0:	bc800c04 	addi	r18,r23,48
   641e4:	180b883a 	mov	r5,r3
   641e8:	10004e1e 	bne	r2,zero,64324 <_dtoa_r+0xfac>
   641ec:	8009883a 	mov	r4,r16
   641f0:	d8c01615 	stw	r3,88(sp)
   641f4:	006726c0 	call	6726c <__mcmp>
   641f8:	d8c01617 	ldw	r3,88(sp)
   641fc:	e009883a 	mov	r4,fp
   64200:	d8801615 	stw	r2,88(sp)
   64204:	180b883a 	mov	r5,r3
   64208:	00669900 	call	66990 <_Bfree>
   6420c:	d8801617 	ldw	r2,88(sp)
   64210:	1000041e 	bne	r2,zero,64224 <_dtoa_r+0xeac>
   64214:	d9800317 	ldw	r6,12(sp)
   64218:	3000021e 	bne	r6,zero,64224 <_dtoa_r+0xeac>
   6421c:	d8c00617 	ldw	r3,24(sp)
   64220:	18003726 	beq	r3,zero,64300 <_dtoa_r+0xf88>
   64224:	b0002016 	blt	r22,zero,642a8 <_dtoa_r+0xf30>
   64228:	b000041e 	bne	r22,zero,6423c <_dtoa_r+0xec4>
   6422c:	d9000317 	ldw	r4,12(sp)
   64230:	2000021e 	bne	r4,zero,6423c <_dtoa_r+0xec4>
   64234:	d8c00617 	ldw	r3,24(sp)
   64238:	18001b26 	beq	r3,zero,642a8 <_dtoa_r+0xf30>
   6423c:	00810716 	blt	zero,r2,6465c <_dtoa_r+0x12e4>
   64240:	d8c00417 	ldw	r3,16(sp)
   64244:	9d800044 	addi	r22,r19,1
   64248:	9c800005 	stb	r18,0(r19)
   6424c:	b02f883a 	mov	r23,r22
   64250:	98c10626 	beq	r19,r3,6466c <_dtoa_r+0x12f4>
   64254:	800b883a 	mov	r5,r16
   64258:	000f883a 	mov	r7,zero
   6425c:	01800284 	movi	r6,10
   64260:	e009883a 	mov	r4,fp
   64264:	00669b80 	call	669b8 <__multadd>
   64268:	1021883a 	mov	r16,r2
   6426c:	000f883a 	mov	r7,zero
   64270:	01800284 	movi	r6,10
   64274:	880b883a 	mov	r5,r17
   64278:	e009883a 	mov	r4,fp
   6427c:	8d002526 	beq	r17,r20,64314 <_dtoa_r+0xf9c>
   64280:	00669b80 	call	669b8 <__multadd>
   64284:	a00b883a 	mov	r5,r20
   64288:	000f883a 	mov	r7,zero
   6428c:	01800284 	movi	r6,10
   64290:	e009883a 	mov	r4,fp
   64294:	1023883a 	mov	r17,r2
   64298:	00669b80 	call	669b8 <__multadd>
   6429c:	1029883a 	mov	r20,r2
   642a0:	b027883a 	mov	r19,r22
   642a4:	003fc006 	br	641a8 <__alt_data_end+0xfffe41a8>
   642a8:	9011883a 	mov	r8,r18
   642ac:	00800e0e 	bge	zero,r2,642e8 <_dtoa_r+0xf70>
   642b0:	800b883a 	mov	r5,r16
   642b4:	01800044 	movi	r6,1
   642b8:	e009883a 	mov	r4,fp
   642bc:	da001715 	stw	r8,92(sp)
   642c0:	00671240 	call	67124 <__lshift>
   642c4:	a80b883a 	mov	r5,r21
   642c8:	1009883a 	mov	r4,r2
   642cc:	1021883a 	mov	r16,r2
   642d0:	006726c0 	call	6726c <__mcmp>
   642d4:	da001717 	ldw	r8,92(sp)
   642d8:	0081960e 	bge	zero,r2,64934 <_dtoa_r+0x15bc>
   642dc:	00800e44 	movi	r2,57
   642e0:	40817026 	beq	r8,r2,648a4 <_dtoa_r+0x152c>
   642e4:	ba000c44 	addi	r8,r23,49
   642e8:	8825883a 	mov	r18,r17
   642ec:	9dc00044 	addi	r23,r19,1
   642f0:	9a000005 	stb	r8,0(r19)
   642f4:	a023883a 	mov	r17,r20
   642f8:	dc000915 	stw	r16,36(sp)
   642fc:	003f2406 	br	63f90 <__alt_data_end+0xfffe3f90>
   64300:	00800e44 	movi	r2,57
   64304:	9011883a 	mov	r8,r18
   64308:	90816626 	beq	r18,r2,648a4 <_dtoa_r+0x152c>
   6430c:	05bff516 	blt	zero,r22,642e4 <__alt_data_end+0xfffe42e4>
   64310:	003ff506 	br	642e8 <__alt_data_end+0xfffe42e8>
   64314:	00669b80 	call	669b8 <__multadd>
   64318:	1023883a 	mov	r17,r2
   6431c:	1029883a 	mov	r20,r2
   64320:	003fdf06 	br	642a0 <__alt_data_end+0xfffe42a0>
   64324:	e009883a 	mov	r4,fp
   64328:	00669900 	call	66990 <_Bfree>
   6432c:	00800044 	movi	r2,1
   64330:	003fbc06 	br	64224 <__alt_data_end+0xfffe4224>
   64334:	a80b883a 	mov	r5,r21
   64338:	8009883a 	mov	r4,r16
   6433c:	006726c0 	call	6726c <__mcmp>
   64340:	103edb0e 	bge	r2,zero,63eb0 <__alt_data_end+0xfffe3eb0>
   64344:	800b883a 	mov	r5,r16
   64348:	000f883a 	mov	r7,zero
   6434c:	01800284 	movi	r6,10
   64350:	e009883a 	mov	r4,fp
   64354:	00669b80 	call	669b8 <__multadd>
   64358:	1021883a 	mov	r16,r2
   6435c:	d8800517 	ldw	r2,20(sp)
   64360:	d8c00b17 	ldw	r3,44(sp)
   64364:	10bfffc4 	addi	r2,r2,-1
   64368:	d8800515 	stw	r2,20(sp)
   6436c:	183f761e 	bne	r3,zero,64148 <__alt_data_end+0xfffe4148>
   64370:	d9000c17 	ldw	r4,48(sp)
   64374:	0101730e 	bge	zero,r4,64944 <_dtoa_r+0x15cc>
   64378:	d9000615 	stw	r4,24(sp)
   6437c:	003ed006 	br	63ec0 <__alt_data_end+0xfffe3ec0>
   64380:	00800084 	movi	r2,2
   64384:	3081861e 	bne	r6,r2,649a0 <_dtoa_r+0x1628>
   64388:	d8000b15 	stw	zero,44(sp)
   6438c:	003f3c06 	br	64080 <__alt_data_end+0xfffe4080>
   64390:	dc000917 	ldw	r16,36(sp)
   64394:	003e9206 	br	63de0 <__alt_data_end+0xfffe3de0>
   64398:	d9c00317 	ldw	r7,12(sp)
   6439c:	00800084 	movi	r2,2
   643a0:	11fec50e 	bge	r2,r7,63eb8 <__alt_data_end+0xfffe3eb8>
   643a4:	d9000617 	ldw	r4,24(sp)
   643a8:	20013c1e 	bne	r4,zero,6489c <_dtoa_r+0x1524>
   643ac:	a80b883a 	mov	r5,r21
   643b0:	000f883a 	mov	r7,zero
   643b4:	01800144 	movi	r6,5
   643b8:	e009883a 	mov	r4,fp
   643bc:	00669b80 	call	669b8 <__multadd>
   643c0:	100b883a 	mov	r5,r2
   643c4:	8009883a 	mov	r4,r16
   643c8:	102b883a 	mov	r21,r2
   643cc:	006726c0 	call	6726c <__mcmp>
   643d0:	dc000915 	stw	r16,36(sp)
   643d4:	00bf410e 	bge	zero,r2,640dc <__alt_data_end+0xfffe40dc>
   643d8:	d9c00717 	ldw	r7,28(sp)
   643dc:	00800c44 	movi	r2,49
   643e0:	38800005 	stb	r2,0(r7)
   643e4:	d8800517 	ldw	r2,20(sp)
   643e8:	3dc00044 	addi	r23,r7,1
   643ec:	10800044 	addi	r2,r2,1
   643f0:	d8800515 	stw	r2,20(sp)
   643f4:	003f3d06 	br	640ec <__alt_data_end+0xfffe40ec>
   643f8:	d9800517 	ldw	r6,20(sp)
   643fc:	d9c00717 	ldw	r7,28(sp)
   64400:	00800c44 	movi	r2,49
   64404:	31800044 	addi	r6,r6,1
   64408:	d9800515 	stw	r6,20(sp)
   6440c:	38800005 	stb	r2,0(r7)
   64410:	003edf06 	br	63f90 <__alt_data_end+0xfffe3f90>
   64414:	d8000b15 	stw	zero,44(sp)
   64418:	003c9f06 	br	63698 <__alt_data_end+0xfffe3698>
   6441c:	903e7e1e 	bne	r18,zero,63e18 <__alt_data_end+0xfffe3e18>
   64420:	00800434 	movhi	r2,16
   64424:	10bfffc4 	addi	r2,r2,-1
   64428:	9884703a 	and	r2,r19,r2
   6442c:	1000ea1e 	bne	r2,zero,647d8 <_dtoa_r+0x1460>
   64430:	9cdffc2c 	andhi	r19,r19,32752
   64434:	9800e826 	beq	r19,zero,647d8 <_dtoa_r+0x1460>
   64438:	d9c00817 	ldw	r7,32(sp)
   6443c:	b5800044 	addi	r22,r22,1
   64440:	04c00044 	movi	r19,1
   64444:	39c00044 	addi	r7,r7,1
   64448:	d9c00815 	stw	r7,32(sp)
   6444c:	d8800d17 	ldw	r2,52(sp)
   64450:	103e721e 	bne	r2,zero,63e1c <__alt_data_end+0xfffe3e1c>
   64454:	00800044 	movi	r2,1
   64458:	003e7906 	br	63e40 <__alt_data_end+0xfffe3e40>
   6445c:	8009883a 	mov	r4,r16
   64460:	006d6580 	call	6d658 <__floatsidf>
   64464:	d9800f17 	ldw	r6,60(sp)
   64468:	d9c01017 	ldw	r7,64(sp)
   6446c:	1009883a 	mov	r4,r2
   64470:	180b883a 	mov	r5,r3
   64474:	006c4700 	call	6c470 <__muldf3>
   64478:	000d883a 	mov	r6,zero
   6447c:	01d00734 	movhi	r7,16412
   64480:	1009883a 	mov	r4,r2
   64484:	180b883a 	mov	r5,r3
   64488:	006af9c0 	call	6af9c <__adddf3>
   6448c:	047f3034 	movhi	r17,64704
   64490:	1021883a 	mov	r16,r2
   64494:	1c63883a 	add	r17,r3,r17
   64498:	d9000f17 	ldw	r4,60(sp)
   6449c:	d9401017 	ldw	r5,64(sp)
   644a0:	000d883a 	mov	r6,zero
   644a4:	01d00534 	movhi	r7,16404
   644a8:	006ccdc0 	call	6ccdc <__subdf3>
   644ac:	800d883a 	mov	r6,r16
   644b0:	880f883a 	mov	r7,r17
   644b4:	1009883a 	mov	r4,r2
   644b8:	180b883a 	mov	r5,r3
   644bc:	102b883a 	mov	r21,r2
   644c0:	1829883a 	mov	r20,r3
   644c4:	006c2a00 	call	6c2a0 <__gedf2>
   644c8:	00806c16 	blt	zero,r2,6467c <_dtoa_r+0x1304>
   644cc:	89e0003c 	xorhi	r7,r17,32768
   644d0:	800d883a 	mov	r6,r16
   644d4:	a809883a 	mov	r4,r21
   644d8:	a00b883a 	mov	r5,r20
   644dc:	006c37c0 	call	6c37c <__ledf2>
   644e0:	103d7e0e 	bge	r2,zero,63adc <__alt_data_end+0xfffe3adc>
   644e4:	002b883a 	mov	r21,zero
   644e8:	0023883a 	mov	r17,zero
   644ec:	003efb06 	br	640dc <__alt_data_end+0xfffe40dc>
   644f0:	d8800717 	ldw	r2,28(sp)
   644f4:	003bd006 	br	63438 <__alt_data_end+0xfffe3438>
   644f8:	d9000a17 	ldw	r4,40(sp)
   644fc:	d9800d17 	ldw	r6,52(sp)
   64500:	dd400a15 	stw	r21,40(sp)
   64504:	a905c83a 	sub	r2,r21,r4
   64508:	308d883a 	add	r6,r6,r2
   6450c:	d9800d15 	stw	r6,52(sp)
   64510:	002b883a 	mov	r21,zero
   64514:	003e0606 	br	63d30 <__alt_data_end+0xfffe3d30>
   64518:	9023883a 	mov	r17,r18
   6451c:	9829883a 	mov	r20,r19
   64520:	04000084 	movi	r16,2
   64524:	003c9206 	br	63770 <__alt_data_end+0xfffe3770>
   64528:	04000044 	movi	r16,1
   6452c:	dc000c15 	stw	r16,48(sp)
   64530:	dc000615 	stw	r16,24(sp)
   64534:	dc002215 	stw	r16,136(sp)
   64538:	e0001115 	stw	zero,68(fp)
   6453c:	000b883a 	mov	r5,zero
   64540:	003c6906 	br	636e8 <__alt_data_end+0xfffe36e8>
   64544:	3021883a 	mov	r16,r6
   64548:	003ffb06 	br	64538 <__alt_data_end+0xfffe4538>
   6454c:	1000021e 	bne	r2,zero,64558 <_dtoa_r+0x11e0>
   64550:	4200004c 	andi	r8,r8,1
   64554:	403e7d1e 	bne	r8,zero,63f4c <__alt_data_end+0xfffe3f4c>
   64558:	01000c04 	movi	r4,48
   6455c:	00000106 	br	64564 <_dtoa_r+0x11ec>
   64560:	102f883a 	mov	r23,r2
   64564:	b8bfffc4 	addi	r2,r23,-1
   64568:	10c00007 	ldb	r3,0(r2)
   6456c:	193ffc26 	beq	r3,r4,64560 <__alt_data_end+0xfffe4560>
   64570:	003e8706 	br	63f90 <__alt_data_end+0xfffe3f90>
   64574:	d8800517 	ldw	r2,20(sp)
   64578:	00a3c83a 	sub	r17,zero,r2
   6457c:	8800a426 	beq	r17,zero,64810 <_dtoa_r+0x1498>
   64580:	888003cc 	andi	r2,r17,15
   64584:	100490fa 	slli	r2,r2,3
   64588:	00c001f4 	movhi	r3,7
   6458c:	18c1ae04 	addi	r3,r3,1720
   64590:	1885883a 	add	r2,r3,r2
   64594:	11800017 	ldw	r6,0(r2)
   64598:	11c00117 	ldw	r7,4(r2)
   6459c:	9009883a 	mov	r4,r18
   645a0:	980b883a 	mov	r5,r19
   645a4:	8823d13a 	srai	r17,r17,4
   645a8:	006c4700 	call	6c470 <__muldf3>
   645ac:	d8800f15 	stw	r2,60(sp)
   645b0:	d8c01015 	stw	r3,64(sp)
   645b4:	8800e826 	beq	r17,zero,64958 <_dtoa_r+0x15e0>
   645b8:	050001f4 	movhi	r20,7
   645bc:	a501a404 	addi	r20,r20,1680
   645c0:	04000084 	movi	r16,2
   645c4:	8980004c 	andi	r6,r17,1
   645c8:	1009883a 	mov	r4,r2
   645cc:	8823d07a 	srai	r17,r17,1
   645d0:	180b883a 	mov	r5,r3
   645d4:	30000426 	beq	r6,zero,645e8 <_dtoa_r+0x1270>
   645d8:	a1800017 	ldw	r6,0(r20)
   645dc:	a1c00117 	ldw	r7,4(r20)
   645e0:	84000044 	addi	r16,r16,1
   645e4:	006c4700 	call	6c470 <__muldf3>
   645e8:	a5000204 	addi	r20,r20,8
   645ec:	883ff51e 	bne	r17,zero,645c4 <__alt_data_end+0xfffe45c4>
   645f0:	d8800f15 	stw	r2,60(sp)
   645f4:	d8c01015 	stw	r3,64(sp)
   645f8:	003c7606 	br	637d4 <__alt_data_end+0xfffe37d4>
   645fc:	00c00c04 	movi	r3,48
   64600:	10c00005 	stb	r3,0(r2)
   64604:	d8c00517 	ldw	r3,20(sp)
   64608:	bd3fffc3 	ldbu	r20,-1(r23)
   6460c:	18c00044 	addi	r3,r3,1
   64610:	d8c00515 	stw	r3,20(sp)
   64614:	003db906 	br	63cfc <__alt_data_end+0xfffe3cfc>
   64618:	89400117 	ldw	r5,4(r17)
   6461c:	e009883a 	mov	r4,fp
   64620:	00668e80 	call	668e8 <_Balloc>
   64624:	89800417 	ldw	r6,16(r17)
   64628:	89400304 	addi	r5,r17,12
   6462c:	11000304 	addi	r4,r2,12
   64630:	31800084 	addi	r6,r6,2
   64634:	318d883a 	add	r6,r6,r6
   64638:	318d883a 	add	r6,r6,r6
   6463c:	1027883a 	mov	r19,r2
   64640:	00609280 	call	60928 <memcpy>
   64644:	01800044 	movi	r6,1
   64648:	980b883a 	mov	r5,r19
   6464c:	e009883a 	mov	r4,fp
   64650:	00671240 	call	67124 <__lshift>
   64654:	1029883a 	mov	r20,r2
   64658:	003ecc06 	br	6418c <__alt_data_end+0xfffe418c>
   6465c:	00800e44 	movi	r2,57
   64660:	90809026 	beq	r18,r2,648a4 <_dtoa_r+0x152c>
   64664:	92000044 	addi	r8,r18,1
   64668:	003f1f06 	br	642e8 <__alt_data_end+0xfffe42e8>
   6466c:	9011883a 	mov	r8,r18
   64670:	8825883a 	mov	r18,r17
   64674:	a023883a 	mov	r17,r20
   64678:	003e2906 	br	63f20 <__alt_data_end+0xfffe3f20>
   6467c:	002b883a 	mov	r21,zero
   64680:	0023883a 	mov	r17,zero
   64684:	003f5406 	br	643d8 <__alt_data_end+0xfffe43d8>
   64688:	61bfffc4 	addi	r6,r12,-1
   6468c:	300490fa 	slli	r2,r6,3
   64690:	00c001f4 	movhi	r3,7
   64694:	18c1ae04 	addi	r3,r3,1720
   64698:	1885883a 	add	r2,r3,r2
   6469c:	11000017 	ldw	r4,0(r2)
   646a0:	11400117 	ldw	r5,4(r2)
   646a4:	d8800717 	ldw	r2,28(sp)
   646a8:	880f883a 	mov	r7,r17
   646ac:	d9801215 	stw	r6,72(sp)
   646b0:	800d883a 	mov	r6,r16
   646b4:	db001615 	stw	r12,88(sp)
   646b8:	15c00044 	addi	r23,r2,1
   646bc:	006c4700 	call	6c470 <__muldf3>
   646c0:	d9401017 	ldw	r5,64(sp)
   646c4:	d9000f17 	ldw	r4,60(sp)
   646c8:	d8c01515 	stw	r3,84(sp)
   646cc:	d8801415 	stw	r2,80(sp)
   646d0:	006d5d80 	call	6d5d8 <__fixdfsi>
   646d4:	1009883a 	mov	r4,r2
   646d8:	1021883a 	mov	r16,r2
   646dc:	006d6580 	call	6d658 <__floatsidf>
   646e0:	d9000f17 	ldw	r4,60(sp)
   646e4:	d9401017 	ldw	r5,64(sp)
   646e8:	100d883a 	mov	r6,r2
   646ec:	180f883a 	mov	r7,r3
   646f0:	006ccdc0 	call	6ccdc <__subdf3>
   646f4:	1829883a 	mov	r20,r3
   646f8:	d8c00717 	ldw	r3,28(sp)
   646fc:	84000c04 	addi	r16,r16,48
   64700:	1023883a 	mov	r17,r2
   64704:	1c000005 	stb	r16,0(r3)
   64708:	db001617 	ldw	r12,88(sp)
   6470c:	00800044 	movi	r2,1
   64710:	60802226 	beq	r12,r2,6479c <_dtoa_r+0x1424>
   64714:	d9c00717 	ldw	r7,28(sp)
   64718:	8805883a 	mov	r2,r17
   6471c:	b82b883a 	mov	r21,r23
   64720:	3b19883a 	add	r12,r7,r12
   64724:	6023883a 	mov	r17,r12
   64728:	a007883a 	mov	r3,r20
   6472c:	dc800f15 	stw	r18,60(sp)
   64730:	000d883a 	mov	r6,zero
   64734:	01d00934 	movhi	r7,16420
   64738:	1009883a 	mov	r4,r2
   6473c:	180b883a 	mov	r5,r3
   64740:	006c4700 	call	6c470 <__muldf3>
   64744:	180b883a 	mov	r5,r3
   64748:	1009883a 	mov	r4,r2
   6474c:	1829883a 	mov	r20,r3
   64750:	1025883a 	mov	r18,r2
   64754:	006d5d80 	call	6d5d8 <__fixdfsi>
   64758:	1009883a 	mov	r4,r2
   6475c:	1021883a 	mov	r16,r2
   64760:	006d6580 	call	6d658 <__floatsidf>
   64764:	100d883a 	mov	r6,r2
   64768:	180f883a 	mov	r7,r3
   6476c:	9009883a 	mov	r4,r18
   64770:	a00b883a 	mov	r5,r20
   64774:	84000c04 	addi	r16,r16,48
   64778:	006ccdc0 	call	6ccdc <__subdf3>
   6477c:	ad400044 	addi	r21,r21,1
   64780:	ac3fffc5 	stb	r16,-1(r21)
   64784:	ac7fea1e 	bne	r21,r17,64730 <__alt_data_end+0xfffe4730>
   64788:	1023883a 	mov	r17,r2
   6478c:	d8801217 	ldw	r2,72(sp)
   64790:	dc800f17 	ldw	r18,60(sp)
   64794:	1829883a 	mov	r20,r3
   64798:	b8af883a 	add	r23,r23,r2
   6479c:	d9001417 	ldw	r4,80(sp)
   647a0:	d9401517 	ldw	r5,84(sp)
   647a4:	000d883a 	mov	r6,zero
   647a8:	01cff834 	movhi	r7,16352
   647ac:	006af9c0 	call	6af9c <__adddf3>
   647b0:	880d883a 	mov	r6,r17
   647b4:	a00f883a 	mov	r7,r20
   647b8:	1009883a 	mov	r4,r2
   647bc:	180b883a 	mov	r5,r3
   647c0:	006c37c0 	call	6c37c <__ledf2>
   647c4:	10003e0e 	bge	r2,zero,648c0 <_dtoa_r+0x1548>
   647c8:	d9001317 	ldw	r4,76(sp)
   647cc:	bd3fffc3 	ldbu	r20,-1(r23)
   647d0:	d9000515 	stw	r4,20(sp)
   647d4:	003d3b06 	br	63cc4 <__alt_data_end+0xfffe3cc4>
   647d8:	0027883a 	mov	r19,zero
   647dc:	003f1b06 	br	6444c <__alt_data_end+0xfffe444c>
   647e0:	d8800817 	ldw	r2,32(sp)
   647e4:	11e9c83a 	sub	r20,r2,r7
   647e8:	0005883a 	mov	r2,zero
   647ec:	003d5406 	br	63d40 <__alt_data_end+0xfffe3d40>
   647f0:	00800044 	movi	r2,1
   647f4:	003dc706 	br	63f14 <__alt_data_end+0xfffe3f14>
   647f8:	d8c00217 	ldw	r3,8(sp)
   647fc:	00800d84 	movi	r2,54
   64800:	dd400a17 	ldw	r21,40(sp)
   64804:	10c5c83a 	sub	r2,r2,r3
   64808:	dd000817 	ldw	r20,32(sp)
   6480c:	003d4c06 	br	63d40 <__alt_data_end+0xfffe3d40>
   64810:	dc800f15 	stw	r18,60(sp)
   64814:	dcc01015 	stw	r19,64(sp)
   64818:	04000084 	movi	r16,2
   6481c:	003bed06 	br	637d4 <__alt_data_end+0xfffe37d4>
   64820:	d9000617 	ldw	r4,24(sp)
   64824:	203f0d26 	beq	r4,zero,6445c <__alt_data_end+0xfffe445c>
   64828:	d9800c17 	ldw	r6,48(sp)
   6482c:	01bcab0e 	bge	zero,r6,63adc <__alt_data_end+0xfffe3adc>
   64830:	d9401017 	ldw	r5,64(sp)
   64834:	d9000f17 	ldw	r4,60(sp)
   64838:	000d883a 	mov	r6,zero
   6483c:	01d00934 	movhi	r7,16420
   64840:	006c4700 	call	6c470 <__muldf3>
   64844:	81000044 	addi	r4,r16,1
   64848:	d8800f15 	stw	r2,60(sp)
   6484c:	d8c01015 	stw	r3,64(sp)
   64850:	006d6580 	call	6d658 <__floatsidf>
   64854:	d9800f17 	ldw	r6,60(sp)
   64858:	d9c01017 	ldw	r7,64(sp)
   6485c:	1009883a 	mov	r4,r2
   64860:	180b883a 	mov	r5,r3
   64864:	006c4700 	call	6c470 <__muldf3>
   64868:	01d00734 	movhi	r7,16412
   6486c:	000d883a 	mov	r6,zero
   64870:	1009883a 	mov	r4,r2
   64874:	180b883a 	mov	r5,r3
   64878:	006af9c0 	call	6af9c <__adddf3>
   6487c:	d9c00517 	ldw	r7,20(sp)
   64880:	047f3034 	movhi	r17,64704
   64884:	1021883a 	mov	r16,r2
   64888:	39ffffc4 	addi	r7,r7,-1
   6488c:	d9c01315 	stw	r7,76(sp)
   64890:	1c63883a 	add	r17,r3,r17
   64894:	db000c17 	ldw	r12,48(sp)
   64898:	003bea06 	br	63844 <__alt_data_end+0xfffe3844>
   6489c:	dc000915 	stw	r16,36(sp)
   648a0:	003e0e06 	br	640dc <__alt_data_end+0xfffe40dc>
   648a4:	01000e44 	movi	r4,57
   648a8:	8825883a 	mov	r18,r17
   648ac:	9dc00044 	addi	r23,r19,1
   648b0:	99000005 	stb	r4,0(r19)
   648b4:	a023883a 	mov	r17,r20
   648b8:	dc000915 	stw	r16,36(sp)
   648bc:	003da406 	br	63f50 <__alt_data_end+0xfffe3f50>
   648c0:	d9801417 	ldw	r6,80(sp)
   648c4:	d9c01517 	ldw	r7,84(sp)
   648c8:	0009883a 	mov	r4,zero
   648cc:	014ff834 	movhi	r5,16352
   648d0:	006ccdc0 	call	6ccdc <__subdf3>
   648d4:	880d883a 	mov	r6,r17
   648d8:	a00f883a 	mov	r7,r20
   648dc:	1009883a 	mov	r4,r2
   648e0:	180b883a 	mov	r5,r3
   648e4:	006c2a00 	call	6c2a0 <__gedf2>
   648e8:	00bc7c0e 	bge	zero,r2,63adc <__alt_data_end+0xfffe3adc>
   648ec:	01000c04 	movi	r4,48
   648f0:	00000106 	br	648f8 <_dtoa_r+0x1580>
   648f4:	102f883a 	mov	r23,r2
   648f8:	b8bfffc4 	addi	r2,r23,-1
   648fc:	10c00007 	ldb	r3,0(r2)
   64900:	193ffc26 	beq	r3,r4,648f4 <__alt_data_end+0xfffe48f4>
   64904:	d9801317 	ldw	r6,76(sp)
   64908:	d9800515 	stw	r6,20(sp)
   6490c:	003c4406 	br	63a20 <__alt_data_end+0xfffe3a20>
   64910:	d9801317 	ldw	r6,76(sp)
   64914:	d9800515 	stw	r6,20(sp)
   64918:	003cea06 	br	63cc4 <__alt_data_end+0xfffe3cc4>
   6491c:	dd800f17 	ldw	r22,60(sp)
   64920:	dcc01017 	ldw	r19,64(sp)
   64924:	dc801217 	ldw	r18,72(sp)
   64928:	003c6c06 	br	63adc <__alt_data_end+0xfffe3adc>
   6492c:	903e031e 	bne	r18,zero,6413c <__alt_data_end+0xfffe413c>
   64930:	003ebb06 	br	64420 <__alt_data_end+0xfffe4420>
   64934:	103e6c1e 	bne	r2,zero,642e8 <__alt_data_end+0xfffe42e8>
   64938:	4080004c 	andi	r2,r8,1
   6493c:	103e6a26 	beq	r2,zero,642e8 <__alt_data_end+0xfffe42e8>
   64940:	003e6606 	br	642dc <__alt_data_end+0xfffe42dc>
   64944:	d8c00317 	ldw	r3,12(sp)
   64948:	00800084 	movi	r2,2
   6494c:	10c02916 	blt	r2,r3,649f4 <_dtoa_r+0x167c>
   64950:	d9000c17 	ldw	r4,48(sp)
   64954:	003e8806 	br	64378 <__alt_data_end+0xfffe4378>
   64958:	04000084 	movi	r16,2
   6495c:	003b9d06 	br	637d4 <__alt_data_end+0xfffe37d4>
   64960:	d9001317 	ldw	r4,76(sp)
   64964:	d9000515 	stw	r4,20(sp)
   64968:	003cd606 	br	63cc4 <__alt_data_end+0xfffe3cc4>
   6496c:	d8801317 	ldw	r2,76(sp)
   64970:	d8800515 	stw	r2,20(sp)
   64974:	003c2a06 	br	63a20 <__alt_data_end+0xfffe3a20>
   64978:	d9800317 	ldw	r6,12(sp)
   6497c:	00800084 	movi	r2,2
   64980:	11801516 	blt	r2,r6,649d8 <_dtoa_r+0x1660>
   64984:	d9c00c17 	ldw	r7,48(sp)
   64988:	d9c00615 	stw	r7,24(sp)
   6498c:	003df706 	br	6416c <__alt_data_end+0xfffe416c>
   64990:	193d3926 	beq	r3,r4,63e78 <__alt_data_end+0xfffe3e78>
   64994:	00c00f04 	movi	r3,60
   64998:	1885c83a 	sub	r2,r3,r2
   6499c:	003ddf06 	br	6411c <__alt_data_end+0xfffe411c>
   649a0:	e009883a 	mov	r4,fp
   649a4:	e0001115 	stw	zero,68(fp)
   649a8:	000b883a 	mov	r5,zero
   649ac:	00668e80 	call	668e8 <_Balloc>
   649b0:	d8800715 	stw	r2,28(sp)
   649b4:	d8c00717 	ldw	r3,28(sp)
   649b8:	00bfffc4 	movi	r2,-1
   649bc:	01000044 	movi	r4,1
   649c0:	d8800c15 	stw	r2,48(sp)
   649c4:	e0c01015 	stw	r3,64(fp)
   649c8:	d9000b15 	stw	r4,44(sp)
   649cc:	d8800615 	stw	r2,24(sp)
   649d0:	d8002215 	stw	zero,136(sp)
   649d4:	003c4106 	br	63adc <__alt_data_end+0xfffe3adc>
   649d8:	d8c00c17 	ldw	r3,48(sp)
   649dc:	d8c00615 	stw	r3,24(sp)
   649e0:	003e7006 	br	643a4 <__alt_data_end+0xfffe43a4>
   649e4:	04400044 	movi	r17,1
   649e8:	003b2006 	br	6366c <__alt_data_end+0xfffe366c>
   649ec:	000b883a 	mov	r5,zero
   649f0:	003b3d06 	br	636e8 <__alt_data_end+0xfffe36e8>
   649f4:	d8800c17 	ldw	r2,48(sp)
   649f8:	d8800615 	stw	r2,24(sp)
   649fc:	003e6906 	br	643a4 <__alt_data_end+0xfffe43a4>

00064a00 <__sflush_r>:
   64a00:	2880030b 	ldhu	r2,12(r5)
   64a04:	defffb04 	addi	sp,sp,-20
   64a08:	dcc00315 	stw	r19,12(sp)
   64a0c:	dc400115 	stw	r17,4(sp)
   64a10:	dfc00415 	stw	ra,16(sp)
   64a14:	dc800215 	stw	r18,8(sp)
   64a18:	dc000015 	stw	r16,0(sp)
   64a1c:	10c0020c 	andi	r3,r2,8
   64a20:	2823883a 	mov	r17,r5
   64a24:	2027883a 	mov	r19,r4
   64a28:	1800311e 	bne	r3,zero,64af0 <__sflush_r+0xf0>
   64a2c:	28c00117 	ldw	r3,4(r5)
   64a30:	10820014 	ori	r2,r2,2048
   64a34:	2880030d 	sth	r2,12(r5)
   64a38:	00c04b0e 	bge	zero,r3,64b68 <__sflush_r+0x168>
   64a3c:	8a000a17 	ldw	r8,40(r17)
   64a40:	40002326 	beq	r8,zero,64ad0 <__sflush_r+0xd0>
   64a44:	9c000017 	ldw	r16,0(r19)
   64a48:	10c4000c 	andi	r3,r2,4096
   64a4c:	98000015 	stw	zero,0(r19)
   64a50:	18004826 	beq	r3,zero,64b74 <__sflush_r+0x174>
   64a54:	89801417 	ldw	r6,80(r17)
   64a58:	10c0010c 	andi	r3,r2,4
   64a5c:	18000626 	beq	r3,zero,64a78 <__sflush_r+0x78>
   64a60:	88c00117 	ldw	r3,4(r17)
   64a64:	88800c17 	ldw	r2,48(r17)
   64a68:	30cdc83a 	sub	r6,r6,r3
   64a6c:	10000226 	beq	r2,zero,64a78 <__sflush_r+0x78>
   64a70:	88800f17 	ldw	r2,60(r17)
   64a74:	308dc83a 	sub	r6,r6,r2
   64a78:	89400717 	ldw	r5,28(r17)
   64a7c:	000f883a 	mov	r7,zero
   64a80:	9809883a 	mov	r4,r19
   64a84:	403ee83a 	callr	r8
   64a88:	00ffffc4 	movi	r3,-1
   64a8c:	10c04426 	beq	r2,r3,64ba0 <__sflush_r+0x1a0>
   64a90:	88c0030b 	ldhu	r3,12(r17)
   64a94:	89000417 	ldw	r4,16(r17)
   64a98:	88000115 	stw	zero,4(r17)
   64a9c:	197dffcc 	andi	r5,r3,63487
   64aa0:	8940030d 	sth	r5,12(r17)
   64aa4:	89000015 	stw	r4,0(r17)
   64aa8:	18c4000c 	andi	r3,r3,4096
   64aac:	18002c1e 	bne	r3,zero,64b60 <__sflush_r+0x160>
   64ab0:	89400c17 	ldw	r5,48(r17)
   64ab4:	9c000015 	stw	r16,0(r19)
   64ab8:	28000526 	beq	r5,zero,64ad0 <__sflush_r+0xd0>
   64abc:	88801004 	addi	r2,r17,64
   64ac0:	28800226 	beq	r5,r2,64acc <__sflush_r+0xcc>
   64ac4:	9809883a 	mov	r4,r19
   64ac8:	006517c0 	call	6517c <_free_r>
   64acc:	88000c15 	stw	zero,48(r17)
   64ad0:	0005883a 	mov	r2,zero
   64ad4:	dfc00417 	ldw	ra,16(sp)
   64ad8:	dcc00317 	ldw	r19,12(sp)
   64adc:	dc800217 	ldw	r18,8(sp)
   64ae0:	dc400117 	ldw	r17,4(sp)
   64ae4:	dc000017 	ldw	r16,0(sp)
   64ae8:	dec00504 	addi	sp,sp,20
   64aec:	f800283a 	ret
   64af0:	2c800417 	ldw	r18,16(r5)
   64af4:	903ff626 	beq	r18,zero,64ad0 <__alt_data_end+0xfffe4ad0>
   64af8:	2c000017 	ldw	r16,0(r5)
   64afc:	108000cc 	andi	r2,r2,3
   64b00:	2c800015 	stw	r18,0(r5)
   64b04:	84a1c83a 	sub	r16,r16,r18
   64b08:	1000131e 	bne	r2,zero,64b58 <__sflush_r+0x158>
   64b0c:	28800517 	ldw	r2,20(r5)
   64b10:	88800215 	stw	r2,8(r17)
   64b14:	04000316 	blt	zero,r16,64b24 <__sflush_r+0x124>
   64b18:	003fed06 	br	64ad0 <__alt_data_end+0xfffe4ad0>
   64b1c:	90a5883a 	add	r18,r18,r2
   64b20:	043feb0e 	bge	zero,r16,64ad0 <__alt_data_end+0xfffe4ad0>
   64b24:	88800917 	ldw	r2,36(r17)
   64b28:	89400717 	ldw	r5,28(r17)
   64b2c:	800f883a 	mov	r7,r16
   64b30:	900d883a 	mov	r6,r18
   64b34:	9809883a 	mov	r4,r19
   64b38:	103ee83a 	callr	r2
   64b3c:	80a1c83a 	sub	r16,r16,r2
   64b40:	00bff616 	blt	zero,r2,64b1c <__alt_data_end+0xfffe4b1c>
   64b44:	88c0030b 	ldhu	r3,12(r17)
   64b48:	00bfffc4 	movi	r2,-1
   64b4c:	18c01014 	ori	r3,r3,64
   64b50:	88c0030d 	sth	r3,12(r17)
   64b54:	003fdf06 	br	64ad4 <__alt_data_end+0xfffe4ad4>
   64b58:	0005883a 	mov	r2,zero
   64b5c:	003fec06 	br	64b10 <__alt_data_end+0xfffe4b10>
   64b60:	88801415 	stw	r2,80(r17)
   64b64:	003fd206 	br	64ab0 <__alt_data_end+0xfffe4ab0>
   64b68:	28c00f17 	ldw	r3,60(r5)
   64b6c:	00ffb316 	blt	zero,r3,64a3c <__alt_data_end+0xfffe4a3c>
   64b70:	003fd706 	br	64ad0 <__alt_data_end+0xfffe4ad0>
   64b74:	89400717 	ldw	r5,28(r17)
   64b78:	000d883a 	mov	r6,zero
   64b7c:	01c00044 	movi	r7,1
   64b80:	9809883a 	mov	r4,r19
   64b84:	403ee83a 	callr	r8
   64b88:	100d883a 	mov	r6,r2
   64b8c:	00bfffc4 	movi	r2,-1
   64b90:	30801426 	beq	r6,r2,64be4 <__sflush_r+0x1e4>
   64b94:	8880030b 	ldhu	r2,12(r17)
   64b98:	8a000a17 	ldw	r8,40(r17)
   64b9c:	003fae06 	br	64a58 <__alt_data_end+0xfffe4a58>
   64ba0:	98c00017 	ldw	r3,0(r19)
   64ba4:	183fba26 	beq	r3,zero,64a90 <__alt_data_end+0xfffe4a90>
   64ba8:	01000744 	movi	r4,29
   64bac:	19000626 	beq	r3,r4,64bc8 <__sflush_r+0x1c8>
   64bb0:	01000584 	movi	r4,22
   64bb4:	19000426 	beq	r3,r4,64bc8 <__sflush_r+0x1c8>
   64bb8:	88c0030b 	ldhu	r3,12(r17)
   64bbc:	18c01014 	ori	r3,r3,64
   64bc0:	88c0030d 	sth	r3,12(r17)
   64bc4:	003fc306 	br	64ad4 <__alt_data_end+0xfffe4ad4>
   64bc8:	8880030b 	ldhu	r2,12(r17)
   64bcc:	88c00417 	ldw	r3,16(r17)
   64bd0:	88000115 	stw	zero,4(r17)
   64bd4:	10bdffcc 	andi	r2,r2,63487
   64bd8:	8880030d 	sth	r2,12(r17)
   64bdc:	88c00015 	stw	r3,0(r17)
   64be0:	003fb306 	br	64ab0 <__alt_data_end+0xfffe4ab0>
   64be4:	98800017 	ldw	r2,0(r19)
   64be8:	103fea26 	beq	r2,zero,64b94 <__alt_data_end+0xfffe4b94>
   64bec:	00c00744 	movi	r3,29
   64bf0:	10c00226 	beq	r2,r3,64bfc <__sflush_r+0x1fc>
   64bf4:	00c00584 	movi	r3,22
   64bf8:	10c0031e 	bne	r2,r3,64c08 <__sflush_r+0x208>
   64bfc:	9c000015 	stw	r16,0(r19)
   64c00:	0005883a 	mov	r2,zero
   64c04:	003fb306 	br	64ad4 <__alt_data_end+0xfffe4ad4>
   64c08:	88c0030b 	ldhu	r3,12(r17)
   64c0c:	3005883a 	mov	r2,r6
   64c10:	18c01014 	ori	r3,r3,64
   64c14:	88c0030d 	sth	r3,12(r17)
   64c18:	003fae06 	br	64ad4 <__alt_data_end+0xfffe4ad4>

00064c1c <_fflush_r>:
   64c1c:	defffd04 	addi	sp,sp,-12
   64c20:	dc000115 	stw	r16,4(sp)
   64c24:	dfc00215 	stw	ra,8(sp)
   64c28:	2021883a 	mov	r16,r4
   64c2c:	20000226 	beq	r4,zero,64c38 <_fflush_r+0x1c>
   64c30:	20800e17 	ldw	r2,56(r4)
   64c34:	10000c26 	beq	r2,zero,64c68 <_fflush_r+0x4c>
   64c38:	2880030f 	ldh	r2,12(r5)
   64c3c:	1000051e 	bne	r2,zero,64c54 <_fflush_r+0x38>
   64c40:	0005883a 	mov	r2,zero
   64c44:	dfc00217 	ldw	ra,8(sp)
   64c48:	dc000117 	ldw	r16,4(sp)
   64c4c:	dec00304 	addi	sp,sp,12
   64c50:	f800283a 	ret
   64c54:	8009883a 	mov	r4,r16
   64c58:	dfc00217 	ldw	ra,8(sp)
   64c5c:	dc000117 	ldw	r16,4(sp)
   64c60:	dec00304 	addi	sp,sp,12
   64c64:	0064a001 	jmpi	64a00 <__sflush_r>
   64c68:	d9400015 	stw	r5,0(sp)
   64c6c:	00650080 	call	65008 <__sinit>
   64c70:	d9400017 	ldw	r5,0(sp)
   64c74:	003ff006 	br	64c38 <__alt_data_end+0xfffe4c38>

00064c78 <fflush>:
   64c78:	20000526 	beq	r4,zero,64c90 <fflush+0x18>
   64c7c:	008001f4 	movhi	r2,7
   64c80:	10890f04 	addi	r2,r2,9276
   64c84:	200b883a 	mov	r5,r4
   64c88:	11000017 	ldw	r4,0(r2)
   64c8c:	0064c1c1 	jmpi	64c1c <_fflush_r>
   64c90:	008001f4 	movhi	r2,7
   64c94:	10890e04 	addi	r2,r2,9272
   64c98:	11000017 	ldw	r4,0(r2)
   64c9c:	014001b4 	movhi	r5,6
   64ca0:	29530704 	addi	r5,r5,19484
   64ca4:	0065a181 	jmpi	65a18 <_fwalk_reent>

00064ca8 <__fp_unlock>:
   64ca8:	0005883a 	mov	r2,zero
   64cac:	f800283a 	ret

00064cb0 <_cleanup_r>:
   64cb0:	014001f4 	movhi	r5,7
   64cb4:	29669b04 	addi	r5,r5,-26004
   64cb8:	0065a181 	jmpi	65a18 <_fwalk_reent>

00064cbc <__sinit.part.1>:
   64cbc:	defff704 	addi	sp,sp,-36
   64cc0:	00c001b4 	movhi	r3,6
   64cc4:	dfc00815 	stw	ra,32(sp)
   64cc8:	ddc00715 	stw	r23,28(sp)
   64ccc:	dd800615 	stw	r22,24(sp)
   64cd0:	dd400515 	stw	r21,20(sp)
   64cd4:	dd000415 	stw	r20,16(sp)
   64cd8:	dcc00315 	stw	r19,12(sp)
   64cdc:	dc800215 	stw	r18,8(sp)
   64ce0:	dc400115 	stw	r17,4(sp)
   64ce4:	dc000015 	stw	r16,0(sp)
   64ce8:	18d32c04 	addi	r3,r3,19632
   64cec:	24000117 	ldw	r16,4(r4)
   64cf0:	20c00f15 	stw	r3,60(r4)
   64cf4:	2080bb04 	addi	r2,r4,748
   64cf8:	00c000c4 	movi	r3,3
   64cfc:	20c0b915 	stw	r3,740(r4)
   64d00:	2080ba15 	stw	r2,744(r4)
   64d04:	2000b815 	stw	zero,736(r4)
   64d08:	05c00204 	movi	r23,8
   64d0c:	00800104 	movi	r2,4
   64d10:	2025883a 	mov	r18,r4
   64d14:	b80d883a 	mov	r6,r23
   64d18:	81001704 	addi	r4,r16,92
   64d1c:	000b883a 	mov	r5,zero
   64d20:	80000015 	stw	zero,0(r16)
   64d24:	80000115 	stw	zero,4(r16)
   64d28:	80000215 	stw	zero,8(r16)
   64d2c:	8080030d 	sth	r2,12(r16)
   64d30:	80001915 	stw	zero,100(r16)
   64d34:	8000038d 	sth	zero,14(r16)
   64d38:	80000415 	stw	zero,16(r16)
   64d3c:	80000515 	stw	zero,20(r16)
   64d40:	80000615 	stw	zero,24(r16)
   64d44:	00667c00 	call	667c0 <memset>
   64d48:	058001b4 	movhi	r22,6
   64d4c:	94400217 	ldw	r17,8(r18)
   64d50:	054001f4 	movhi	r21,7
   64d54:	050001f4 	movhi	r20,7
   64d58:	04c001f4 	movhi	r19,7
   64d5c:	b59ff304 	addi	r22,r22,32716
   64d60:	ad600a04 	addi	r21,r21,-32728
   64d64:	a5202904 	addi	r20,r20,-32604
   64d68:	9ce04004 	addi	r19,r19,-32512
   64d6c:	85800815 	stw	r22,32(r16)
   64d70:	85400915 	stw	r21,36(r16)
   64d74:	85000a15 	stw	r20,40(r16)
   64d78:	84c00b15 	stw	r19,44(r16)
   64d7c:	84000715 	stw	r16,28(r16)
   64d80:	00800284 	movi	r2,10
   64d84:	8880030d 	sth	r2,12(r17)
   64d88:	00800044 	movi	r2,1
   64d8c:	b80d883a 	mov	r6,r23
   64d90:	89001704 	addi	r4,r17,92
   64d94:	000b883a 	mov	r5,zero
   64d98:	88000015 	stw	zero,0(r17)
   64d9c:	88000115 	stw	zero,4(r17)
   64da0:	88000215 	stw	zero,8(r17)
   64da4:	88001915 	stw	zero,100(r17)
   64da8:	8880038d 	sth	r2,14(r17)
   64dac:	88000415 	stw	zero,16(r17)
   64db0:	88000515 	stw	zero,20(r17)
   64db4:	88000615 	stw	zero,24(r17)
   64db8:	00667c00 	call	667c0 <memset>
   64dbc:	94000317 	ldw	r16,12(r18)
   64dc0:	00800484 	movi	r2,18
   64dc4:	8c400715 	stw	r17,28(r17)
   64dc8:	8d800815 	stw	r22,32(r17)
   64dcc:	8d400915 	stw	r21,36(r17)
   64dd0:	8d000a15 	stw	r20,40(r17)
   64dd4:	8cc00b15 	stw	r19,44(r17)
   64dd8:	8080030d 	sth	r2,12(r16)
   64ddc:	00800084 	movi	r2,2
   64de0:	80000015 	stw	zero,0(r16)
   64de4:	80000115 	stw	zero,4(r16)
   64de8:	80000215 	stw	zero,8(r16)
   64dec:	80001915 	stw	zero,100(r16)
   64df0:	8080038d 	sth	r2,14(r16)
   64df4:	80000415 	stw	zero,16(r16)
   64df8:	80000515 	stw	zero,20(r16)
   64dfc:	80000615 	stw	zero,24(r16)
   64e00:	b80d883a 	mov	r6,r23
   64e04:	000b883a 	mov	r5,zero
   64e08:	81001704 	addi	r4,r16,92
   64e0c:	00667c00 	call	667c0 <memset>
   64e10:	00800044 	movi	r2,1
   64e14:	84000715 	stw	r16,28(r16)
   64e18:	85800815 	stw	r22,32(r16)
   64e1c:	85400915 	stw	r21,36(r16)
   64e20:	85000a15 	stw	r20,40(r16)
   64e24:	84c00b15 	stw	r19,44(r16)
   64e28:	90800e15 	stw	r2,56(r18)
   64e2c:	dfc00817 	ldw	ra,32(sp)
   64e30:	ddc00717 	ldw	r23,28(sp)
   64e34:	dd800617 	ldw	r22,24(sp)
   64e38:	dd400517 	ldw	r21,20(sp)
   64e3c:	dd000417 	ldw	r20,16(sp)
   64e40:	dcc00317 	ldw	r19,12(sp)
   64e44:	dc800217 	ldw	r18,8(sp)
   64e48:	dc400117 	ldw	r17,4(sp)
   64e4c:	dc000017 	ldw	r16,0(sp)
   64e50:	dec00904 	addi	sp,sp,36
   64e54:	f800283a 	ret

00064e58 <__fp_lock>:
   64e58:	0005883a 	mov	r2,zero
   64e5c:	f800283a 	ret

00064e60 <__sfmoreglue>:
   64e60:	defffc04 	addi	sp,sp,-16
   64e64:	dc800215 	stw	r18,8(sp)
   64e68:	2825883a 	mov	r18,r5
   64e6c:	dc000015 	stw	r16,0(sp)
   64e70:	01401a04 	movi	r5,104
   64e74:	2021883a 	mov	r16,r4
   64e78:	913fffc4 	addi	r4,r18,-1
   64e7c:	dfc00315 	stw	ra,12(sp)
   64e80:	dc400115 	stw	r17,4(sp)
   64e84:	00609000 	call	60900 <__mulsi3>
   64e88:	8009883a 	mov	r4,r16
   64e8c:	11401d04 	addi	r5,r2,116
   64e90:	1023883a 	mov	r17,r2
   64e94:	0065d740 	call	65d74 <_malloc_r>
   64e98:	1021883a 	mov	r16,r2
   64e9c:	10000726 	beq	r2,zero,64ebc <__sfmoreglue+0x5c>
   64ea0:	11000304 	addi	r4,r2,12
   64ea4:	10000015 	stw	zero,0(r2)
   64ea8:	14800115 	stw	r18,4(r2)
   64eac:	11000215 	stw	r4,8(r2)
   64eb0:	89801a04 	addi	r6,r17,104
   64eb4:	000b883a 	mov	r5,zero
   64eb8:	00667c00 	call	667c0 <memset>
   64ebc:	8005883a 	mov	r2,r16
   64ec0:	dfc00317 	ldw	ra,12(sp)
   64ec4:	dc800217 	ldw	r18,8(sp)
   64ec8:	dc400117 	ldw	r17,4(sp)
   64ecc:	dc000017 	ldw	r16,0(sp)
   64ed0:	dec00404 	addi	sp,sp,16
   64ed4:	f800283a 	ret

00064ed8 <__sfp>:
   64ed8:	defffb04 	addi	sp,sp,-20
   64edc:	dc000015 	stw	r16,0(sp)
   64ee0:	040001f4 	movhi	r16,7
   64ee4:	84090e04 	addi	r16,r16,9272
   64ee8:	dcc00315 	stw	r19,12(sp)
   64eec:	2027883a 	mov	r19,r4
   64ef0:	81000017 	ldw	r4,0(r16)
   64ef4:	dfc00415 	stw	ra,16(sp)
   64ef8:	dc800215 	stw	r18,8(sp)
   64efc:	20800e17 	ldw	r2,56(r4)
   64f00:	dc400115 	stw	r17,4(sp)
   64f04:	1000021e 	bne	r2,zero,64f10 <__sfp+0x38>
   64f08:	0064cbc0 	call	64cbc <__sinit.part.1>
   64f0c:	81000017 	ldw	r4,0(r16)
   64f10:	2480b804 	addi	r18,r4,736
   64f14:	047fffc4 	movi	r17,-1
   64f18:	91000117 	ldw	r4,4(r18)
   64f1c:	94000217 	ldw	r16,8(r18)
   64f20:	213fffc4 	addi	r4,r4,-1
   64f24:	20000a16 	blt	r4,zero,64f50 <__sfp+0x78>
   64f28:	8080030f 	ldh	r2,12(r16)
   64f2c:	10000c26 	beq	r2,zero,64f60 <__sfp+0x88>
   64f30:	80c01d04 	addi	r3,r16,116
   64f34:	00000206 	br	64f40 <__sfp+0x68>
   64f38:	18bfe60f 	ldh	r2,-104(r3)
   64f3c:	10000826 	beq	r2,zero,64f60 <__sfp+0x88>
   64f40:	213fffc4 	addi	r4,r4,-1
   64f44:	1c3ffd04 	addi	r16,r3,-12
   64f48:	18c01a04 	addi	r3,r3,104
   64f4c:	247ffa1e 	bne	r4,r17,64f38 <__alt_data_end+0xfffe4f38>
   64f50:	90800017 	ldw	r2,0(r18)
   64f54:	10001d26 	beq	r2,zero,64fcc <__sfp+0xf4>
   64f58:	1025883a 	mov	r18,r2
   64f5c:	003fee06 	br	64f18 <__alt_data_end+0xfffe4f18>
   64f60:	00bfffc4 	movi	r2,-1
   64f64:	8080038d 	sth	r2,14(r16)
   64f68:	00800044 	movi	r2,1
   64f6c:	8080030d 	sth	r2,12(r16)
   64f70:	80001915 	stw	zero,100(r16)
   64f74:	80000015 	stw	zero,0(r16)
   64f78:	80000215 	stw	zero,8(r16)
   64f7c:	80000115 	stw	zero,4(r16)
   64f80:	80000415 	stw	zero,16(r16)
   64f84:	80000515 	stw	zero,20(r16)
   64f88:	80000615 	stw	zero,24(r16)
   64f8c:	01800204 	movi	r6,8
   64f90:	000b883a 	mov	r5,zero
   64f94:	81001704 	addi	r4,r16,92
   64f98:	00667c00 	call	667c0 <memset>
   64f9c:	8005883a 	mov	r2,r16
   64fa0:	80000c15 	stw	zero,48(r16)
   64fa4:	80000d15 	stw	zero,52(r16)
   64fa8:	80001115 	stw	zero,68(r16)
   64fac:	80001215 	stw	zero,72(r16)
   64fb0:	dfc00417 	ldw	ra,16(sp)
   64fb4:	dcc00317 	ldw	r19,12(sp)
   64fb8:	dc800217 	ldw	r18,8(sp)
   64fbc:	dc400117 	ldw	r17,4(sp)
   64fc0:	dc000017 	ldw	r16,0(sp)
   64fc4:	dec00504 	addi	sp,sp,20
   64fc8:	f800283a 	ret
   64fcc:	01400104 	movi	r5,4
   64fd0:	9809883a 	mov	r4,r19
   64fd4:	0064e600 	call	64e60 <__sfmoreglue>
   64fd8:	90800015 	stw	r2,0(r18)
   64fdc:	103fde1e 	bne	r2,zero,64f58 <__alt_data_end+0xfffe4f58>
   64fe0:	00800304 	movi	r2,12
   64fe4:	98800015 	stw	r2,0(r19)
   64fe8:	0005883a 	mov	r2,zero
   64fec:	003ff006 	br	64fb0 <__alt_data_end+0xfffe4fb0>

00064ff0 <_cleanup>:
   64ff0:	008001f4 	movhi	r2,7
   64ff4:	10890e04 	addi	r2,r2,9272
   64ff8:	11000017 	ldw	r4,0(r2)
   64ffc:	014001f4 	movhi	r5,7
   65000:	29669b04 	addi	r5,r5,-26004
   65004:	0065a181 	jmpi	65a18 <_fwalk_reent>

00065008 <__sinit>:
   65008:	20800e17 	ldw	r2,56(r4)
   6500c:	10000126 	beq	r2,zero,65014 <__sinit+0xc>
   65010:	f800283a 	ret
   65014:	0064cbc1 	jmpi	64cbc <__sinit.part.1>

00065018 <__sfp_lock_acquire>:
   65018:	f800283a 	ret

0006501c <__sfp_lock_release>:
   6501c:	f800283a 	ret

00065020 <__sinit_lock_acquire>:
   65020:	f800283a 	ret

00065024 <__sinit_lock_release>:
   65024:	f800283a 	ret

00065028 <__fp_lock_all>:
   65028:	008001f4 	movhi	r2,7
   6502c:	10890f04 	addi	r2,r2,9276
   65030:	11000017 	ldw	r4,0(r2)
   65034:	014001b4 	movhi	r5,6
   65038:	29539604 	addi	r5,r5,20056
   6503c:	00659541 	jmpi	65954 <_fwalk>

00065040 <__fp_unlock_all>:
   65040:	008001f4 	movhi	r2,7
   65044:	10890f04 	addi	r2,r2,9276
   65048:	11000017 	ldw	r4,0(r2)
   6504c:	014001b4 	movhi	r5,6
   65050:	29532a04 	addi	r5,r5,19624
   65054:	00659541 	jmpi	65954 <_fwalk>

00065058 <_malloc_trim_r>:
   65058:	defffb04 	addi	sp,sp,-20
   6505c:	dcc00315 	stw	r19,12(sp)
   65060:	04c001f4 	movhi	r19,7
   65064:	dc800215 	stw	r18,8(sp)
   65068:	dc400115 	stw	r17,4(sp)
   6506c:	dc000015 	stw	r16,0(sp)
   65070:	dfc00415 	stw	ra,16(sp)
   65074:	2821883a 	mov	r16,r5
   65078:	9cc38a04 	addi	r19,r19,3624
   6507c:	2025883a 	mov	r18,r4
   65080:	006dddc0 	call	6dddc <__malloc_lock>
   65084:	98800217 	ldw	r2,8(r19)
   65088:	14400117 	ldw	r17,4(r2)
   6508c:	00bfff04 	movi	r2,-4
   65090:	88a2703a 	and	r17,r17,r2
   65094:	8c21c83a 	sub	r16,r17,r16
   65098:	8403fbc4 	addi	r16,r16,4079
   6509c:	8020d33a 	srli	r16,r16,12
   650a0:	0083ffc4 	movi	r2,4095
   650a4:	843fffc4 	addi	r16,r16,-1
   650a8:	8020933a 	slli	r16,r16,12
   650ac:	1400060e 	bge	r2,r16,650c8 <_malloc_trim_r+0x70>
   650b0:	000b883a 	mov	r5,zero
   650b4:	9009883a 	mov	r4,r18
   650b8:	0067f780 	call	67f78 <_sbrk_r>
   650bc:	98c00217 	ldw	r3,8(r19)
   650c0:	1c47883a 	add	r3,r3,r17
   650c4:	10c00a26 	beq	r2,r3,650f0 <_malloc_trim_r+0x98>
   650c8:	9009883a 	mov	r4,r18
   650cc:	006de000 	call	6de00 <__malloc_unlock>
   650d0:	0005883a 	mov	r2,zero
   650d4:	dfc00417 	ldw	ra,16(sp)
   650d8:	dcc00317 	ldw	r19,12(sp)
   650dc:	dc800217 	ldw	r18,8(sp)
   650e0:	dc400117 	ldw	r17,4(sp)
   650e4:	dc000017 	ldw	r16,0(sp)
   650e8:	dec00504 	addi	sp,sp,20
   650ec:	f800283a 	ret
   650f0:	040bc83a 	sub	r5,zero,r16
   650f4:	9009883a 	mov	r4,r18
   650f8:	0067f780 	call	67f78 <_sbrk_r>
   650fc:	00ffffc4 	movi	r3,-1
   65100:	10c00d26 	beq	r2,r3,65138 <_malloc_trim_r+0xe0>
   65104:	00c001f4 	movhi	r3,7
   65108:	18d01704 	addi	r3,r3,16476
   6510c:	18800017 	ldw	r2,0(r3)
   65110:	99000217 	ldw	r4,8(r19)
   65114:	8c23c83a 	sub	r17,r17,r16
   65118:	8c400054 	ori	r17,r17,1
   6511c:	1421c83a 	sub	r16,r2,r16
   65120:	24400115 	stw	r17,4(r4)
   65124:	9009883a 	mov	r4,r18
   65128:	1c000015 	stw	r16,0(r3)
   6512c:	006de000 	call	6de00 <__malloc_unlock>
   65130:	00800044 	movi	r2,1
   65134:	003fe706 	br	650d4 <__alt_data_end+0xfffe50d4>
   65138:	000b883a 	mov	r5,zero
   6513c:	9009883a 	mov	r4,r18
   65140:	0067f780 	call	67f78 <_sbrk_r>
   65144:	99000217 	ldw	r4,8(r19)
   65148:	014003c4 	movi	r5,15
   6514c:	1107c83a 	sub	r3,r2,r4
   65150:	28ffdd0e 	bge	r5,r3,650c8 <__alt_data_end+0xfffe50c8>
   65154:	014001f4 	movhi	r5,7
   65158:	29491104 	addi	r5,r5,9284
   6515c:	29400017 	ldw	r5,0(r5)
   65160:	18c00054 	ori	r3,r3,1
   65164:	20c00115 	stw	r3,4(r4)
   65168:	00c001f4 	movhi	r3,7
   6516c:	1145c83a 	sub	r2,r2,r5
   65170:	18d01704 	addi	r3,r3,16476
   65174:	18800015 	stw	r2,0(r3)
   65178:	003fd306 	br	650c8 <__alt_data_end+0xfffe50c8>

0006517c <_free_r>:
   6517c:	28004126 	beq	r5,zero,65284 <_free_r+0x108>
   65180:	defffd04 	addi	sp,sp,-12
   65184:	dc400115 	stw	r17,4(sp)
   65188:	dc000015 	stw	r16,0(sp)
   6518c:	2023883a 	mov	r17,r4
   65190:	2821883a 	mov	r16,r5
   65194:	dfc00215 	stw	ra,8(sp)
   65198:	006dddc0 	call	6dddc <__malloc_lock>
   6519c:	81ffff17 	ldw	r7,-4(r16)
   651a0:	00bfff84 	movi	r2,-2
   651a4:	010001f4 	movhi	r4,7
   651a8:	81bffe04 	addi	r6,r16,-8
   651ac:	3884703a 	and	r2,r7,r2
   651b0:	21038a04 	addi	r4,r4,3624
   651b4:	308b883a 	add	r5,r6,r2
   651b8:	2a400117 	ldw	r9,4(r5)
   651bc:	22000217 	ldw	r8,8(r4)
   651c0:	00ffff04 	movi	r3,-4
   651c4:	48c6703a 	and	r3,r9,r3
   651c8:	2a005726 	beq	r5,r8,65328 <_free_r+0x1ac>
   651cc:	28c00115 	stw	r3,4(r5)
   651d0:	39c0004c 	andi	r7,r7,1
   651d4:	3800091e 	bne	r7,zero,651fc <_free_r+0x80>
   651d8:	823ffe17 	ldw	r8,-8(r16)
   651dc:	22400204 	addi	r9,r4,8
   651e0:	320dc83a 	sub	r6,r6,r8
   651e4:	31c00217 	ldw	r7,8(r6)
   651e8:	1205883a 	add	r2,r2,r8
   651ec:	3a406526 	beq	r7,r9,65384 <_free_r+0x208>
   651f0:	32000317 	ldw	r8,12(r6)
   651f4:	3a000315 	stw	r8,12(r7)
   651f8:	41c00215 	stw	r7,8(r8)
   651fc:	28cf883a 	add	r7,r5,r3
   65200:	39c00117 	ldw	r7,4(r7)
   65204:	39c0004c 	andi	r7,r7,1
   65208:	38003a26 	beq	r7,zero,652f4 <_free_r+0x178>
   6520c:	10c00054 	ori	r3,r2,1
   65210:	30c00115 	stw	r3,4(r6)
   65214:	3087883a 	add	r3,r6,r2
   65218:	18800015 	stw	r2,0(r3)
   6521c:	00c07fc4 	movi	r3,511
   65220:	18801936 	bltu	r3,r2,65288 <_free_r+0x10c>
   65224:	1004d0fa 	srli	r2,r2,3
   65228:	01c00044 	movi	r7,1
   6522c:	21400117 	ldw	r5,4(r4)
   65230:	10c00044 	addi	r3,r2,1
   65234:	18c7883a 	add	r3,r3,r3
   65238:	1005d0ba 	srai	r2,r2,2
   6523c:	18c7883a 	add	r3,r3,r3
   65240:	18c7883a 	add	r3,r3,r3
   65244:	1907883a 	add	r3,r3,r4
   65248:	3884983a 	sll	r2,r7,r2
   6524c:	19c00017 	ldw	r7,0(r3)
   65250:	1a3ffe04 	addi	r8,r3,-8
   65254:	1144b03a 	or	r2,r2,r5
   65258:	32000315 	stw	r8,12(r6)
   6525c:	31c00215 	stw	r7,8(r6)
   65260:	20800115 	stw	r2,4(r4)
   65264:	19800015 	stw	r6,0(r3)
   65268:	39800315 	stw	r6,12(r7)
   6526c:	8809883a 	mov	r4,r17
   65270:	dfc00217 	ldw	ra,8(sp)
   65274:	dc400117 	ldw	r17,4(sp)
   65278:	dc000017 	ldw	r16,0(sp)
   6527c:	dec00304 	addi	sp,sp,12
   65280:	006de001 	jmpi	6de00 <__malloc_unlock>
   65284:	f800283a 	ret
   65288:	100ad27a 	srli	r5,r2,9
   6528c:	00c00104 	movi	r3,4
   65290:	19404a36 	bltu	r3,r5,653bc <_free_r+0x240>
   65294:	100ad1ba 	srli	r5,r2,6
   65298:	28c00e44 	addi	r3,r5,57
   6529c:	18c7883a 	add	r3,r3,r3
   652a0:	29400e04 	addi	r5,r5,56
   652a4:	18c7883a 	add	r3,r3,r3
   652a8:	18c7883a 	add	r3,r3,r3
   652ac:	1909883a 	add	r4,r3,r4
   652b0:	20c00017 	ldw	r3,0(r4)
   652b4:	01c001f4 	movhi	r7,7
   652b8:	213ffe04 	addi	r4,r4,-8
   652bc:	39c38a04 	addi	r7,r7,3624
   652c0:	20c04426 	beq	r4,r3,653d4 <_free_r+0x258>
   652c4:	01ffff04 	movi	r7,-4
   652c8:	19400117 	ldw	r5,4(r3)
   652cc:	29ca703a 	and	r5,r5,r7
   652d0:	1140022e 	bgeu	r2,r5,652dc <_free_r+0x160>
   652d4:	18c00217 	ldw	r3,8(r3)
   652d8:	20fffb1e 	bne	r4,r3,652c8 <__alt_data_end+0xfffe52c8>
   652dc:	19000317 	ldw	r4,12(r3)
   652e0:	31000315 	stw	r4,12(r6)
   652e4:	30c00215 	stw	r3,8(r6)
   652e8:	21800215 	stw	r6,8(r4)
   652ec:	19800315 	stw	r6,12(r3)
   652f0:	003fde06 	br	6526c <__alt_data_end+0xfffe526c>
   652f4:	29c00217 	ldw	r7,8(r5)
   652f8:	10c5883a 	add	r2,r2,r3
   652fc:	00c001f4 	movhi	r3,7
   65300:	18c38c04 	addi	r3,r3,3632
   65304:	38c03b26 	beq	r7,r3,653f4 <_free_r+0x278>
   65308:	2a000317 	ldw	r8,12(r5)
   6530c:	11400054 	ori	r5,r2,1
   65310:	3087883a 	add	r3,r6,r2
   65314:	3a000315 	stw	r8,12(r7)
   65318:	41c00215 	stw	r7,8(r8)
   6531c:	31400115 	stw	r5,4(r6)
   65320:	18800015 	stw	r2,0(r3)
   65324:	003fbd06 	br	6521c <__alt_data_end+0xfffe521c>
   65328:	39c0004c 	andi	r7,r7,1
   6532c:	10c5883a 	add	r2,r2,r3
   65330:	3800071e 	bne	r7,zero,65350 <_free_r+0x1d4>
   65334:	81fffe17 	ldw	r7,-8(r16)
   65338:	31cdc83a 	sub	r6,r6,r7
   6533c:	30c00317 	ldw	r3,12(r6)
   65340:	31400217 	ldw	r5,8(r6)
   65344:	11c5883a 	add	r2,r2,r7
   65348:	28c00315 	stw	r3,12(r5)
   6534c:	19400215 	stw	r5,8(r3)
   65350:	10c00054 	ori	r3,r2,1
   65354:	30c00115 	stw	r3,4(r6)
   65358:	00c001f4 	movhi	r3,7
   6535c:	18c91204 	addi	r3,r3,9288
   65360:	18c00017 	ldw	r3,0(r3)
   65364:	21800215 	stw	r6,8(r4)
   65368:	10ffc036 	bltu	r2,r3,6526c <__alt_data_end+0xfffe526c>
   6536c:	008001f4 	movhi	r2,7
   65370:	10900e04 	addi	r2,r2,16440
   65374:	11400017 	ldw	r5,0(r2)
   65378:	8809883a 	mov	r4,r17
   6537c:	00650580 	call	65058 <_malloc_trim_r>
   65380:	003fba06 	br	6526c <__alt_data_end+0xfffe526c>
   65384:	28c9883a 	add	r4,r5,r3
   65388:	21000117 	ldw	r4,4(r4)
   6538c:	2100004c 	andi	r4,r4,1
   65390:	2000391e 	bne	r4,zero,65478 <_free_r+0x2fc>
   65394:	29c00217 	ldw	r7,8(r5)
   65398:	29000317 	ldw	r4,12(r5)
   6539c:	1885883a 	add	r2,r3,r2
   653a0:	10c00054 	ori	r3,r2,1
   653a4:	39000315 	stw	r4,12(r7)
   653a8:	21c00215 	stw	r7,8(r4)
   653ac:	30c00115 	stw	r3,4(r6)
   653b0:	308d883a 	add	r6,r6,r2
   653b4:	30800015 	stw	r2,0(r6)
   653b8:	003fac06 	br	6526c <__alt_data_end+0xfffe526c>
   653bc:	00c00504 	movi	r3,20
   653c0:	19401536 	bltu	r3,r5,65418 <_free_r+0x29c>
   653c4:	28c01704 	addi	r3,r5,92
   653c8:	18c7883a 	add	r3,r3,r3
   653cc:	294016c4 	addi	r5,r5,91
   653d0:	003fb406 	br	652a4 <__alt_data_end+0xfffe52a4>
   653d4:	280bd0ba 	srai	r5,r5,2
   653d8:	00c00044 	movi	r3,1
   653dc:	38800117 	ldw	r2,4(r7)
   653e0:	194a983a 	sll	r5,r3,r5
   653e4:	2007883a 	mov	r3,r4
   653e8:	2884b03a 	or	r2,r5,r2
   653ec:	38800115 	stw	r2,4(r7)
   653f0:	003fbb06 	br	652e0 <__alt_data_end+0xfffe52e0>
   653f4:	21800515 	stw	r6,20(r4)
   653f8:	21800415 	stw	r6,16(r4)
   653fc:	10c00054 	ori	r3,r2,1
   65400:	31c00315 	stw	r7,12(r6)
   65404:	31c00215 	stw	r7,8(r6)
   65408:	30c00115 	stw	r3,4(r6)
   6540c:	308d883a 	add	r6,r6,r2
   65410:	30800015 	stw	r2,0(r6)
   65414:	003f9506 	br	6526c <__alt_data_end+0xfffe526c>
   65418:	00c01504 	movi	r3,84
   6541c:	19400536 	bltu	r3,r5,65434 <_free_r+0x2b8>
   65420:	100ad33a 	srli	r5,r2,12
   65424:	28c01bc4 	addi	r3,r5,111
   65428:	18c7883a 	add	r3,r3,r3
   6542c:	29401b84 	addi	r5,r5,110
   65430:	003f9c06 	br	652a4 <__alt_data_end+0xfffe52a4>
   65434:	00c05504 	movi	r3,340
   65438:	19400536 	bltu	r3,r5,65450 <_free_r+0x2d4>
   6543c:	100ad3fa 	srli	r5,r2,15
   65440:	28c01e04 	addi	r3,r5,120
   65444:	18c7883a 	add	r3,r3,r3
   65448:	29401dc4 	addi	r5,r5,119
   6544c:	003f9506 	br	652a4 <__alt_data_end+0xfffe52a4>
   65450:	00c15504 	movi	r3,1364
   65454:	19400536 	bltu	r3,r5,6546c <_free_r+0x2f0>
   65458:	100ad4ba 	srli	r5,r2,18
   6545c:	28c01f44 	addi	r3,r5,125
   65460:	18c7883a 	add	r3,r3,r3
   65464:	29401f04 	addi	r5,r5,124
   65468:	003f8e06 	br	652a4 <__alt_data_end+0xfffe52a4>
   6546c:	00c03f84 	movi	r3,254
   65470:	01401f84 	movi	r5,126
   65474:	003f8b06 	br	652a4 <__alt_data_end+0xfffe52a4>
   65478:	10c00054 	ori	r3,r2,1
   6547c:	30c00115 	stw	r3,4(r6)
   65480:	308d883a 	add	r6,r6,r2
   65484:	30800015 	stw	r2,0(r6)
   65488:	003f7806 	br	6526c <__alt_data_end+0xfffe526c>

0006548c <__sfvwrite_r>:
   6548c:	30800217 	ldw	r2,8(r6)
   65490:	10006726 	beq	r2,zero,65630 <__sfvwrite_r+0x1a4>
   65494:	28c0030b 	ldhu	r3,12(r5)
   65498:	defff404 	addi	sp,sp,-48
   6549c:	dd400715 	stw	r21,28(sp)
   654a0:	dd000615 	stw	r20,24(sp)
   654a4:	dc000215 	stw	r16,8(sp)
   654a8:	dfc00b15 	stw	ra,44(sp)
   654ac:	df000a15 	stw	fp,40(sp)
   654b0:	ddc00915 	stw	r23,36(sp)
   654b4:	dd800815 	stw	r22,32(sp)
   654b8:	dcc00515 	stw	r19,20(sp)
   654bc:	dc800415 	stw	r18,16(sp)
   654c0:	dc400315 	stw	r17,12(sp)
   654c4:	1880020c 	andi	r2,r3,8
   654c8:	2821883a 	mov	r16,r5
   654cc:	202b883a 	mov	r21,r4
   654d0:	3029883a 	mov	r20,r6
   654d4:	10002726 	beq	r2,zero,65574 <__sfvwrite_r+0xe8>
   654d8:	28800417 	ldw	r2,16(r5)
   654dc:	10002526 	beq	r2,zero,65574 <__sfvwrite_r+0xe8>
   654e0:	1880008c 	andi	r2,r3,2
   654e4:	a4400017 	ldw	r17,0(r20)
   654e8:	10002a26 	beq	r2,zero,65594 <__sfvwrite_r+0x108>
   654ec:	05a00034 	movhi	r22,32768
   654f0:	0027883a 	mov	r19,zero
   654f4:	0025883a 	mov	r18,zero
   654f8:	b5bf0004 	addi	r22,r22,-1024
   654fc:	980d883a 	mov	r6,r19
   65500:	a809883a 	mov	r4,r21
   65504:	90004626 	beq	r18,zero,65620 <__sfvwrite_r+0x194>
   65508:	900f883a 	mov	r7,r18
   6550c:	b480022e 	bgeu	r22,r18,65518 <__sfvwrite_r+0x8c>
   65510:	01e00034 	movhi	r7,32768
   65514:	39ff0004 	addi	r7,r7,-1024
   65518:	80800917 	ldw	r2,36(r16)
   6551c:	81400717 	ldw	r5,28(r16)
   65520:	103ee83a 	callr	r2
   65524:	00805a0e 	bge	zero,r2,65690 <__sfvwrite_r+0x204>
   65528:	a0c00217 	ldw	r3,8(r20)
   6552c:	98a7883a 	add	r19,r19,r2
   65530:	90a5c83a 	sub	r18,r18,r2
   65534:	1885c83a 	sub	r2,r3,r2
   65538:	a0800215 	stw	r2,8(r20)
   6553c:	103fef1e 	bne	r2,zero,654fc <__alt_data_end+0xfffe54fc>
   65540:	0005883a 	mov	r2,zero
   65544:	dfc00b17 	ldw	ra,44(sp)
   65548:	df000a17 	ldw	fp,40(sp)
   6554c:	ddc00917 	ldw	r23,36(sp)
   65550:	dd800817 	ldw	r22,32(sp)
   65554:	dd400717 	ldw	r21,28(sp)
   65558:	dd000617 	ldw	r20,24(sp)
   6555c:	dcc00517 	ldw	r19,20(sp)
   65560:	dc800417 	ldw	r18,16(sp)
   65564:	dc400317 	ldw	r17,12(sp)
   65568:	dc000217 	ldw	r16,8(sp)
   6556c:	dec00c04 	addi	sp,sp,48
   65570:	f800283a 	ret
   65574:	800b883a 	mov	r5,r16
   65578:	a809883a 	mov	r4,r21
   6557c:	0062ffc0 	call	62ffc <__swsetup_r>
   65580:	1000ee1e 	bne	r2,zero,6593c <__sfvwrite_r+0x4b0>
   65584:	80c0030b 	ldhu	r3,12(r16)
   65588:	a4400017 	ldw	r17,0(r20)
   6558c:	1880008c 	andi	r2,r3,2
   65590:	103fd61e 	bne	r2,zero,654ec <__alt_data_end+0xfffe54ec>
   65594:	1880004c 	andi	r2,r3,1
   65598:	1000421e 	bne	r2,zero,656a4 <__sfvwrite_r+0x218>
   6559c:	0039883a 	mov	fp,zero
   655a0:	0025883a 	mov	r18,zero
   655a4:	90001a26 	beq	r18,zero,65610 <__sfvwrite_r+0x184>
   655a8:	1880800c 	andi	r2,r3,512
   655ac:	84c00217 	ldw	r19,8(r16)
   655b0:	10002126 	beq	r2,zero,65638 <__sfvwrite_r+0x1ac>
   655b4:	982f883a 	mov	r23,r19
   655b8:	94c09636 	bltu	r18,r19,65814 <__sfvwrite_r+0x388>
   655bc:	1881200c 	andi	r2,r3,1152
   655c0:	1000a11e 	bne	r2,zero,65848 <__sfvwrite_r+0x3bc>
   655c4:	81000017 	ldw	r4,0(r16)
   655c8:	b80d883a 	mov	r6,r23
   655cc:	e00b883a 	mov	r5,fp
   655d0:	00666640 	call	66664 <memmove>
   655d4:	80c00217 	ldw	r3,8(r16)
   655d8:	81000017 	ldw	r4,0(r16)
   655dc:	9005883a 	mov	r2,r18
   655e0:	1ce7c83a 	sub	r19,r3,r19
   655e4:	25cf883a 	add	r7,r4,r23
   655e8:	84c00215 	stw	r19,8(r16)
   655ec:	81c00015 	stw	r7,0(r16)
   655f0:	a0c00217 	ldw	r3,8(r20)
   655f4:	e0b9883a 	add	fp,fp,r2
   655f8:	90a5c83a 	sub	r18,r18,r2
   655fc:	18a7c83a 	sub	r19,r3,r2
   65600:	a4c00215 	stw	r19,8(r20)
   65604:	983fce26 	beq	r19,zero,65540 <__alt_data_end+0xfffe5540>
   65608:	80c0030b 	ldhu	r3,12(r16)
   6560c:	903fe61e 	bne	r18,zero,655a8 <__alt_data_end+0xfffe55a8>
   65610:	8f000017 	ldw	fp,0(r17)
   65614:	8c800117 	ldw	r18,4(r17)
   65618:	8c400204 	addi	r17,r17,8
   6561c:	003fe106 	br	655a4 <__alt_data_end+0xfffe55a4>
   65620:	8cc00017 	ldw	r19,0(r17)
   65624:	8c800117 	ldw	r18,4(r17)
   65628:	8c400204 	addi	r17,r17,8
   6562c:	003fb306 	br	654fc <__alt_data_end+0xfffe54fc>
   65630:	0005883a 	mov	r2,zero
   65634:	f800283a 	ret
   65638:	81000017 	ldw	r4,0(r16)
   6563c:	80800417 	ldw	r2,16(r16)
   65640:	11005a36 	bltu	r2,r4,657ac <__sfvwrite_r+0x320>
   65644:	85c00517 	ldw	r23,20(r16)
   65648:	95c05836 	bltu	r18,r23,657ac <__sfvwrite_r+0x320>
   6564c:	00a00034 	movhi	r2,32768
   65650:	10bfffc4 	addi	r2,r2,-1
   65654:	9009883a 	mov	r4,r18
   65658:	1480012e 	bgeu	r2,r18,65660 <__sfvwrite_r+0x1d4>
   6565c:	1009883a 	mov	r4,r2
   65660:	b80b883a 	mov	r5,r23
   65664:	006ade80 	call	6ade8 <__divsi3>
   65668:	b80b883a 	mov	r5,r23
   6566c:	1009883a 	mov	r4,r2
   65670:	00609000 	call	60900 <__mulsi3>
   65674:	81400717 	ldw	r5,28(r16)
   65678:	80c00917 	ldw	r3,36(r16)
   6567c:	100f883a 	mov	r7,r2
   65680:	e00d883a 	mov	r6,fp
   65684:	a809883a 	mov	r4,r21
   65688:	183ee83a 	callr	r3
   6568c:	00bfd816 	blt	zero,r2,655f0 <__alt_data_end+0xfffe55f0>
   65690:	8080030b 	ldhu	r2,12(r16)
   65694:	10801014 	ori	r2,r2,64
   65698:	8080030d 	sth	r2,12(r16)
   6569c:	00bfffc4 	movi	r2,-1
   656a0:	003fa806 	br	65544 <__alt_data_end+0xfffe5544>
   656a4:	0027883a 	mov	r19,zero
   656a8:	0011883a 	mov	r8,zero
   656ac:	0039883a 	mov	fp,zero
   656b0:	0025883a 	mov	r18,zero
   656b4:	90001f26 	beq	r18,zero,65734 <__sfvwrite_r+0x2a8>
   656b8:	40005a26 	beq	r8,zero,65824 <__sfvwrite_r+0x398>
   656bc:	982d883a 	mov	r22,r19
   656c0:	94c0012e 	bgeu	r18,r19,656c8 <__sfvwrite_r+0x23c>
   656c4:	902d883a 	mov	r22,r18
   656c8:	81000017 	ldw	r4,0(r16)
   656cc:	80800417 	ldw	r2,16(r16)
   656d0:	b02f883a 	mov	r23,r22
   656d4:	81c00517 	ldw	r7,20(r16)
   656d8:	1100032e 	bgeu	r2,r4,656e8 <__sfvwrite_r+0x25c>
   656dc:	80c00217 	ldw	r3,8(r16)
   656e0:	38c7883a 	add	r3,r7,r3
   656e4:	1d801816 	blt	r3,r22,65748 <__sfvwrite_r+0x2bc>
   656e8:	b1c03e16 	blt	r22,r7,657e4 <__sfvwrite_r+0x358>
   656ec:	80800917 	ldw	r2,36(r16)
   656f0:	81400717 	ldw	r5,28(r16)
   656f4:	e00d883a 	mov	r6,fp
   656f8:	da000115 	stw	r8,4(sp)
   656fc:	a809883a 	mov	r4,r21
   65700:	103ee83a 	callr	r2
   65704:	102f883a 	mov	r23,r2
   65708:	da000117 	ldw	r8,4(sp)
   6570c:	00bfe00e 	bge	zero,r2,65690 <__alt_data_end+0xfffe5690>
   65710:	9de7c83a 	sub	r19,r19,r23
   65714:	98001f26 	beq	r19,zero,65794 <__sfvwrite_r+0x308>
   65718:	a0800217 	ldw	r2,8(r20)
   6571c:	e5f9883a 	add	fp,fp,r23
   65720:	95e5c83a 	sub	r18,r18,r23
   65724:	15efc83a 	sub	r23,r2,r23
   65728:	a5c00215 	stw	r23,8(r20)
   6572c:	b83f8426 	beq	r23,zero,65540 <__alt_data_end+0xfffe5540>
   65730:	903fe11e 	bne	r18,zero,656b8 <__alt_data_end+0xfffe56b8>
   65734:	8f000017 	ldw	fp,0(r17)
   65738:	8c800117 	ldw	r18,4(r17)
   6573c:	0011883a 	mov	r8,zero
   65740:	8c400204 	addi	r17,r17,8
   65744:	003fdb06 	br	656b4 <__alt_data_end+0xfffe56b4>
   65748:	180d883a 	mov	r6,r3
   6574c:	e00b883a 	mov	r5,fp
   65750:	da000115 	stw	r8,4(sp)
   65754:	d8c00015 	stw	r3,0(sp)
   65758:	00666640 	call	66664 <memmove>
   6575c:	d8c00017 	ldw	r3,0(sp)
   65760:	80800017 	ldw	r2,0(r16)
   65764:	800b883a 	mov	r5,r16
   65768:	a809883a 	mov	r4,r21
   6576c:	10c5883a 	add	r2,r2,r3
   65770:	80800015 	stw	r2,0(r16)
   65774:	d8c00015 	stw	r3,0(sp)
   65778:	0064c1c0 	call	64c1c <_fflush_r>
   6577c:	d8c00017 	ldw	r3,0(sp)
   65780:	da000117 	ldw	r8,4(sp)
   65784:	103fc21e 	bne	r2,zero,65690 <__alt_data_end+0xfffe5690>
   65788:	182f883a 	mov	r23,r3
   6578c:	9de7c83a 	sub	r19,r19,r23
   65790:	983fe11e 	bne	r19,zero,65718 <__alt_data_end+0xfffe5718>
   65794:	800b883a 	mov	r5,r16
   65798:	a809883a 	mov	r4,r21
   6579c:	0064c1c0 	call	64c1c <_fflush_r>
   657a0:	103fbb1e 	bne	r2,zero,65690 <__alt_data_end+0xfffe5690>
   657a4:	0011883a 	mov	r8,zero
   657a8:	003fdb06 	br	65718 <__alt_data_end+0xfffe5718>
   657ac:	94c0012e 	bgeu	r18,r19,657b4 <__sfvwrite_r+0x328>
   657b0:	9027883a 	mov	r19,r18
   657b4:	980d883a 	mov	r6,r19
   657b8:	e00b883a 	mov	r5,fp
   657bc:	00666640 	call	66664 <memmove>
   657c0:	80800217 	ldw	r2,8(r16)
   657c4:	80c00017 	ldw	r3,0(r16)
   657c8:	14c5c83a 	sub	r2,r2,r19
   657cc:	1cc7883a 	add	r3,r3,r19
   657d0:	80800215 	stw	r2,8(r16)
   657d4:	80c00015 	stw	r3,0(r16)
   657d8:	10004326 	beq	r2,zero,658e8 <__sfvwrite_r+0x45c>
   657dc:	9805883a 	mov	r2,r19
   657e0:	003f8306 	br	655f0 <__alt_data_end+0xfffe55f0>
   657e4:	b00d883a 	mov	r6,r22
   657e8:	e00b883a 	mov	r5,fp
   657ec:	da000115 	stw	r8,4(sp)
   657f0:	00666640 	call	66664 <memmove>
   657f4:	80800217 	ldw	r2,8(r16)
   657f8:	80c00017 	ldw	r3,0(r16)
   657fc:	da000117 	ldw	r8,4(sp)
   65800:	1585c83a 	sub	r2,r2,r22
   65804:	1dad883a 	add	r22,r3,r22
   65808:	80800215 	stw	r2,8(r16)
   6580c:	85800015 	stw	r22,0(r16)
   65810:	003fbf06 	br	65710 <__alt_data_end+0xfffe5710>
   65814:	81000017 	ldw	r4,0(r16)
   65818:	9027883a 	mov	r19,r18
   6581c:	902f883a 	mov	r23,r18
   65820:	003f6906 	br	655c8 <__alt_data_end+0xfffe55c8>
   65824:	900d883a 	mov	r6,r18
   65828:	01400284 	movi	r5,10
   6582c:	e009883a 	mov	r4,fp
   65830:	00665800 	call	66580 <memchr>
   65834:	10003e26 	beq	r2,zero,65930 <__sfvwrite_r+0x4a4>
   65838:	10800044 	addi	r2,r2,1
   6583c:	1727c83a 	sub	r19,r2,fp
   65840:	02000044 	movi	r8,1
   65844:	003f9d06 	br	656bc <__alt_data_end+0xfffe56bc>
   65848:	80800517 	ldw	r2,20(r16)
   6584c:	81400417 	ldw	r5,16(r16)
   65850:	81c00017 	ldw	r7,0(r16)
   65854:	10a7883a 	add	r19,r2,r2
   65858:	9885883a 	add	r2,r19,r2
   6585c:	1026d7fa 	srli	r19,r2,31
   65860:	396dc83a 	sub	r22,r7,r5
   65864:	b1000044 	addi	r4,r22,1
   65868:	9885883a 	add	r2,r19,r2
   6586c:	1027d07a 	srai	r19,r2,1
   65870:	2485883a 	add	r2,r4,r18
   65874:	980d883a 	mov	r6,r19
   65878:	9880022e 	bgeu	r19,r2,65884 <__sfvwrite_r+0x3f8>
   6587c:	1027883a 	mov	r19,r2
   65880:	100d883a 	mov	r6,r2
   65884:	18c1000c 	andi	r3,r3,1024
   65888:	18001c26 	beq	r3,zero,658fc <__sfvwrite_r+0x470>
   6588c:	300b883a 	mov	r5,r6
   65890:	a809883a 	mov	r4,r21
   65894:	0065d740 	call	65d74 <_malloc_r>
   65898:	102f883a 	mov	r23,r2
   6589c:	10002926 	beq	r2,zero,65944 <__sfvwrite_r+0x4b8>
   658a0:	81400417 	ldw	r5,16(r16)
   658a4:	b00d883a 	mov	r6,r22
   658a8:	1009883a 	mov	r4,r2
   658ac:	00609280 	call	60928 <memcpy>
   658b0:	8080030b 	ldhu	r2,12(r16)
   658b4:	00fedfc4 	movi	r3,-1153
   658b8:	10c4703a 	and	r2,r2,r3
   658bc:	10802014 	ori	r2,r2,128
   658c0:	8080030d 	sth	r2,12(r16)
   658c4:	bd89883a 	add	r4,r23,r22
   658c8:	9d8fc83a 	sub	r7,r19,r22
   658cc:	85c00415 	stw	r23,16(r16)
   658d0:	84c00515 	stw	r19,20(r16)
   658d4:	81000015 	stw	r4,0(r16)
   658d8:	9027883a 	mov	r19,r18
   658dc:	81c00215 	stw	r7,8(r16)
   658e0:	902f883a 	mov	r23,r18
   658e4:	003f3806 	br	655c8 <__alt_data_end+0xfffe55c8>
   658e8:	800b883a 	mov	r5,r16
   658ec:	a809883a 	mov	r4,r21
   658f0:	0064c1c0 	call	64c1c <_fflush_r>
   658f4:	103fb926 	beq	r2,zero,657dc <__alt_data_end+0xfffe57dc>
   658f8:	003f6506 	br	65690 <__alt_data_end+0xfffe5690>
   658fc:	a809883a 	mov	r4,r21
   65900:	00679a00 	call	679a0 <_realloc_r>
   65904:	102f883a 	mov	r23,r2
   65908:	103fee1e 	bne	r2,zero,658c4 <__alt_data_end+0xfffe58c4>
   6590c:	81400417 	ldw	r5,16(r16)
   65910:	a809883a 	mov	r4,r21
   65914:	006517c0 	call	6517c <_free_r>
   65918:	8080030b 	ldhu	r2,12(r16)
   6591c:	00ffdfc4 	movi	r3,-129
   65920:	1884703a 	and	r2,r3,r2
   65924:	00c00304 	movi	r3,12
   65928:	a8c00015 	stw	r3,0(r21)
   6592c:	003f5906 	br	65694 <__alt_data_end+0xfffe5694>
   65930:	94c00044 	addi	r19,r18,1
   65934:	02000044 	movi	r8,1
   65938:	003f6006 	br	656bc <__alt_data_end+0xfffe56bc>
   6593c:	00bfffc4 	movi	r2,-1
   65940:	003f0006 	br	65544 <__alt_data_end+0xfffe5544>
   65944:	00800304 	movi	r2,12
   65948:	a8800015 	stw	r2,0(r21)
   6594c:	8080030b 	ldhu	r2,12(r16)
   65950:	003f5006 	br	65694 <__alt_data_end+0xfffe5694>

00065954 <_fwalk>:
   65954:	defff704 	addi	sp,sp,-36
   65958:	dd000415 	stw	r20,16(sp)
   6595c:	dfc00815 	stw	ra,32(sp)
   65960:	ddc00715 	stw	r23,28(sp)
   65964:	dd800615 	stw	r22,24(sp)
   65968:	dd400515 	stw	r21,20(sp)
   6596c:	dcc00315 	stw	r19,12(sp)
   65970:	dc800215 	stw	r18,8(sp)
   65974:	dc400115 	stw	r17,4(sp)
   65978:	dc000015 	stw	r16,0(sp)
   6597c:	2500b804 	addi	r20,r4,736
   65980:	a0002326 	beq	r20,zero,65a10 <_fwalk+0xbc>
   65984:	282b883a 	mov	r21,r5
   65988:	002f883a 	mov	r23,zero
   6598c:	05800044 	movi	r22,1
   65990:	04ffffc4 	movi	r19,-1
   65994:	a4400117 	ldw	r17,4(r20)
   65998:	a4800217 	ldw	r18,8(r20)
   6599c:	8c7fffc4 	addi	r17,r17,-1
   659a0:	88000d16 	blt	r17,zero,659d8 <_fwalk+0x84>
   659a4:	94000304 	addi	r16,r18,12
   659a8:	94800384 	addi	r18,r18,14
   659ac:	8080000b 	ldhu	r2,0(r16)
   659b0:	8c7fffc4 	addi	r17,r17,-1
   659b4:	813ffd04 	addi	r4,r16,-12
   659b8:	b080042e 	bgeu	r22,r2,659cc <_fwalk+0x78>
   659bc:	9080000f 	ldh	r2,0(r18)
   659c0:	14c00226 	beq	r2,r19,659cc <_fwalk+0x78>
   659c4:	a83ee83a 	callr	r21
   659c8:	b8aeb03a 	or	r23,r23,r2
   659cc:	84001a04 	addi	r16,r16,104
   659d0:	94801a04 	addi	r18,r18,104
   659d4:	8cfff51e 	bne	r17,r19,659ac <__alt_data_end+0xfffe59ac>
   659d8:	a5000017 	ldw	r20,0(r20)
   659dc:	a03fed1e 	bne	r20,zero,65994 <__alt_data_end+0xfffe5994>
   659e0:	b805883a 	mov	r2,r23
   659e4:	dfc00817 	ldw	ra,32(sp)
   659e8:	ddc00717 	ldw	r23,28(sp)
   659ec:	dd800617 	ldw	r22,24(sp)
   659f0:	dd400517 	ldw	r21,20(sp)
   659f4:	dd000417 	ldw	r20,16(sp)
   659f8:	dcc00317 	ldw	r19,12(sp)
   659fc:	dc800217 	ldw	r18,8(sp)
   65a00:	dc400117 	ldw	r17,4(sp)
   65a04:	dc000017 	ldw	r16,0(sp)
   65a08:	dec00904 	addi	sp,sp,36
   65a0c:	f800283a 	ret
   65a10:	002f883a 	mov	r23,zero
   65a14:	003ff206 	br	659e0 <__alt_data_end+0xfffe59e0>

00065a18 <_fwalk_reent>:
   65a18:	defff704 	addi	sp,sp,-36
   65a1c:	dd000415 	stw	r20,16(sp)
   65a20:	dfc00815 	stw	ra,32(sp)
   65a24:	ddc00715 	stw	r23,28(sp)
   65a28:	dd800615 	stw	r22,24(sp)
   65a2c:	dd400515 	stw	r21,20(sp)
   65a30:	dcc00315 	stw	r19,12(sp)
   65a34:	dc800215 	stw	r18,8(sp)
   65a38:	dc400115 	stw	r17,4(sp)
   65a3c:	dc000015 	stw	r16,0(sp)
   65a40:	2500b804 	addi	r20,r4,736
   65a44:	a0002326 	beq	r20,zero,65ad4 <_fwalk_reent+0xbc>
   65a48:	282b883a 	mov	r21,r5
   65a4c:	2027883a 	mov	r19,r4
   65a50:	002f883a 	mov	r23,zero
   65a54:	05800044 	movi	r22,1
   65a58:	04bfffc4 	movi	r18,-1
   65a5c:	a4400117 	ldw	r17,4(r20)
   65a60:	a4000217 	ldw	r16,8(r20)
   65a64:	8c7fffc4 	addi	r17,r17,-1
   65a68:	88000c16 	blt	r17,zero,65a9c <_fwalk_reent+0x84>
   65a6c:	84000304 	addi	r16,r16,12
   65a70:	8080000b 	ldhu	r2,0(r16)
   65a74:	8c7fffc4 	addi	r17,r17,-1
   65a78:	817ffd04 	addi	r5,r16,-12
   65a7c:	b080052e 	bgeu	r22,r2,65a94 <_fwalk_reent+0x7c>
   65a80:	8080008f 	ldh	r2,2(r16)
   65a84:	9809883a 	mov	r4,r19
   65a88:	14800226 	beq	r2,r18,65a94 <_fwalk_reent+0x7c>
   65a8c:	a83ee83a 	callr	r21
   65a90:	b8aeb03a 	or	r23,r23,r2
   65a94:	84001a04 	addi	r16,r16,104
   65a98:	8cbff51e 	bne	r17,r18,65a70 <__alt_data_end+0xfffe5a70>
   65a9c:	a5000017 	ldw	r20,0(r20)
   65aa0:	a03fee1e 	bne	r20,zero,65a5c <__alt_data_end+0xfffe5a5c>
   65aa4:	b805883a 	mov	r2,r23
   65aa8:	dfc00817 	ldw	ra,32(sp)
   65aac:	ddc00717 	ldw	r23,28(sp)
   65ab0:	dd800617 	ldw	r22,24(sp)
   65ab4:	dd400517 	ldw	r21,20(sp)
   65ab8:	dd000417 	ldw	r20,16(sp)
   65abc:	dcc00317 	ldw	r19,12(sp)
   65ac0:	dc800217 	ldw	r18,8(sp)
   65ac4:	dc400117 	ldw	r17,4(sp)
   65ac8:	dc000017 	ldw	r16,0(sp)
   65acc:	dec00904 	addi	sp,sp,36
   65ad0:	f800283a 	ret
   65ad4:	002f883a 	mov	r23,zero
   65ad8:	003ff206 	br	65aa4 <__alt_data_end+0xfffe5aa4>

00065adc <_setlocale_r>:
   65adc:	30001b26 	beq	r6,zero,65b4c <_setlocale_r+0x70>
   65ae0:	014001f4 	movhi	r5,7
   65ae4:	defffe04 	addi	sp,sp,-8
   65ae8:	29419404 	addi	r5,r5,1616
   65aec:	3009883a 	mov	r4,r6
   65af0:	dc000015 	stw	r16,0(sp)
   65af4:	dfc00115 	stw	ra,4(sp)
   65af8:	3021883a 	mov	r16,r6
   65afc:	00681080 	call	68108 <strcmp>
   65b00:	1000061e 	bne	r2,zero,65b1c <_setlocale_r+0x40>
   65b04:	008001f4 	movhi	r2,7
   65b08:	10819304 	addi	r2,r2,1612
   65b0c:	dfc00117 	ldw	ra,4(sp)
   65b10:	dc000017 	ldw	r16,0(sp)
   65b14:	dec00204 	addi	sp,sp,8
   65b18:	f800283a 	ret
   65b1c:	014001f4 	movhi	r5,7
   65b20:	29419304 	addi	r5,r5,1612
   65b24:	8009883a 	mov	r4,r16
   65b28:	00681080 	call	68108 <strcmp>
   65b2c:	103ff526 	beq	r2,zero,65b04 <__alt_data_end+0xfffe5b04>
   65b30:	014001f4 	movhi	r5,7
   65b34:	29417e04 	addi	r5,r5,1528
   65b38:	8009883a 	mov	r4,r16
   65b3c:	00681080 	call	68108 <strcmp>
   65b40:	103ff026 	beq	r2,zero,65b04 <__alt_data_end+0xfffe5b04>
   65b44:	0005883a 	mov	r2,zero
   65b48:	003ff006 	br	65b0c <__alt_data_end+0xfffe5b0c>
   65b4c:	008001f4 	movhi	r2,7
   65b50:	10819304 	addi	r2,r2,1612
   65b54:	f800283a 	ret

00065b58 <__locale_charset>:
   65b58:	008001f4 	movhi	r2,7
   65b5c:	10837404 	addi	r2,r2,3536
   65b60:	f800283a 	ret

00065b64 <__locale_mb_cur_max>:
   65b64:	008001f4 	movhi	r2,7
   65b68:	10891004 	addi	r2,r2,9280
   65b6c:	10800017 	ldw	r2,0(r2)
   65b70:	f800283a 	ret

00065b74 <__locale_msgcharset>:
   65b74:	008001f4 	movhi	r2,7
   65b78:	10836c04 	addi	r2,r2,3504
   65b7c:	f800283a 	ret

00065b80 <__locale_cjk_lang>:
   65b80:	0005883a 	mov	r2,zero
   65b84:	f800283a 	ret

00065b88 <_localeconv_r>:
   65b88:	008001f4 	movhi	r2,7
   65b8c:	10837c04 	addi	r2,r2,3568
   65b90:	f800283a 	ret

00065b94 <setlocale>:
   65b94:	008001f4 	movhi	r2,7
   65b98:	10890f04 	addi	r2,r2,9276
   65b9c:	280d883a 	mov	r6,r5
   65ba0:	200b883a 	mov	r5,r4
   65ba4:	11000017 	ldw	r4,0(r2)
   65ba8:	0065adc1 	jmpi	65adc <_setlocale_r>

00065bac <localeconv>:
   65bac:	008001f4 	movhi	r2,7
   65bb0:	10837c04 	addi	r2,r2,3568
   65bb4:	f800283a 	ret

00065bb8 <__smakebuf_r>:
   65bb8:	2880030b 	ldhu	r2,12(r5)
   65bbc:	10c0008c 	andi	r3,r2,2
   65bc0:	1800411e 	bne	r3,zero,65cc8 <__smakebuf_r+0x110>
   65bc4:	deffec04 	addi	sp,sp,-80
   65bc8:	dc000f15 	stw	r16,60(sp)
   65bcc:	2821883a 	mov	r16,r5
   65bd0:	2940038f 	ldh	r5,14(r5)
   65bd4:	dc401015 	stw	r17,64(sp)
   65bd8:	dfc01315 	stw	ra,76(sp)
   65bdc:	dcc01215 	stw	r19,72(sp)
   65be0:	dc801115 	stw	r18,68(sp)
   65be4:	2023883a 	mov	r17,r4
   65be8:	28001c16 	blt	r5,zero,65c5c <__smakebuf_r+0xa4>
   65bec:	d80d883a 	mov	r6,sp
   65bf0:	0069d780 	call	69d78 <_fstat_r>
   65bf4:	10001816 	blt	r2,zero,65c58 <__smakebuf_r+0xa0>
   65bf8:	d8800117 	ldw	r2,4(sp)
   65bfc:	00e00014 	movui	r3,32768
   65c00:	10bc000c 	andi	r2,r2,61440
   65c04:	14c80020 	cmpeqi	r19,r2,8192
   65c08:	10c03726 	beq	r2,r3,65ce8 <__smakebuf_r+0x130>
   65c0c:	80c0030b 	ldhu	r3,12(r16)
   65c10:	18c20014 	ori	r3,r3,2048
   65c14:	80c0030d 	sth	r3,12(r16)
   65c18:	00c80004 	movi	r3,8192
   65c1c:	10c0521e 	bne	r2,r3,65d68 <__smakebuf_r+0x1b0>
   65c20:	8140038f 	ldh	r5,14(r16)
   65c24:	8809883a 	mov	r4,r17
   65c28:	0069dd40 	call	69dd4 <_isatty_r>
   65c2c:	10004c26 	beq	r2,zero,65d60 <__smakebuf_r+0x1a8>
   65c30:	8080030b 	ldhu	r2,12(r16)
   65c34:	80c010c4 	addi	r3,r16,67
   65c38:	80c00015 	stw	r3,0(r16)
   65c3c:	10800054 	ori	r2,r2,1
   65c40:	8080030d 	sth	r2,12(r16)
   65c44:	00800044 	movi	r2,1
   65c48:	80c00415 	stw	r3,16(r16)
   65c4c:	80800515 	stw	r2,20(r16)
   65c50:	04810004 	movi	r18,1024
   65c54:	00000706 	br	65c74 <__smakebuf_r+0xbc>
   65c58:	8080030b 	ldhu	r2,12(r16)
   65c5c:	10c0200c 	andi	r3,r2,128
   65c60:	18001f1e 	bne	r3,zero,65ce0 <__smakebuf_r+0x128>
   65c64:	04810004 	movi	r18,1024
   65c68:	10820014 	ori	r2,r2,2048
   65c6c:	8080030d 	sth	r2,12(r16)
   65c70:	0027883a 	mov	r19,zero
   65c74:	900b883a 	mov	r5,r18
   65c78:	8809883a 	mov	r4,r17
   65c7c:	0065d740 	call	65d74 <_malloc_r>
   65c80:	10002c26 	beq	r2,zero,65d34 <__smakebuf_r+0x17c>
   65c84:	80c0030b 	ldhu	r3,12(r16)
   65c88:	010001b4 	movhi	r4,6
   65c8c:	21132c04 	addi	r4,r4,19632
   65c90:	89000f15 	stw	r4,60(r17)
   65c94:	18c02014 	ori	r3,r3,128
   65c98:	80c0030d 	sth	r3,12(r16)
   65c9c:	80800015 	stw	r2,0(r16)
   65ca0:	80800415 	stw	r2,16(r16)
   65ca4:	84800515 	stw	r18,20(r16)
   65ca8:	98001a1e 	bne	r19,zero,65d14 <__smakebuf_r+0x15c>
   65cac:	dfc01317 	ldw	ra,76(sp)
   65cb0:	dcc01217 	ldw	r19,72(sp)
   65cb4:	dc801117 	ldw	r18,68(sp)
   65cb8:	dc401017 	ldw	r17,64(sp)
   65cbc:	dc000f17 	ldw	r16,60(sp)
   65cc0:	dec01404 	addi	sp,sp,80
   65cc4:	f800283a 	ret
   65cc8:	288010c4 	addi	r2,r5,67
   65ccc:	28800015 	stw	r2,0(r5)
   65cd0:	28800415 	stw	r2,16(r5)
   65cd4:	00800044 	movi	r2,1
   65cd8:	28800515 	stw	r2,20(r5)
   65cdc:	f800283a 	ret
   65ce0:	04801004 	movi	r18,64
   65ce4:	003fe006 	br	65c68 <__alt_data_end+0xfffe5c68>
   65ce8:	81000a17 	ldw	r4,40(r16)
   65cec:	00c001f4 	movhi	r3,7
   65cf0:	18e02904 	addi	r3,r3,-32604
   65cf4:	20ffc51e 	bne	r4,r3,65c0c <__alt_data_end+0xfffe5c0c>
   65cf8:	8080030b 	ldhu	r2,12(r16)
   65cfc:	04810004 	movi	r18,1024
   65d00:	84801315 	stw	r18,76(r16)
   65d04:	1484b03a 	or	r2,r2,r18
   65d08:	8080030d 	sth	r2,12(r16)
   65d0c:	0027883a 	mov	r19,zero
   65d10:	003fd806 	br	65c74 <__alt_data_end+0xfffe5c74>
   65d14:	8140038f 	ldh	r5,14(r16)
   65d18:	8809883a 	mov	r4,r17
   65d1c:	0069dd40 	call	69dd4 <_isatty_r>
   65d20:	103fe226 	beq	r2,zero,65cac <__alt_data_end+0xfffe5cac>
   65d24:	8080030b 	ldhu	r2,12(r16)
   65d28:	10800054 	ori	r2,r2,1
   65d2c:	8080030d 	sth	r2,12(r16)
   65d30:	003fde06 	br	65cac <__alt_data_end+0xfffe5cac>
   65d34:	8080030b 	ldhu	r2,12(r16)
   65d38:	10c0800c 	andi	r3,r2,512
   65d3c:	183fdb1e 	bne	r3,zero,65cac <__alt_data_end+0xfffe5cac>
   65d40:	10800094 	ori	r2,r2,2
   65d44:	80c010c4 	addi	r3,r16,67
   65d48:	8080030d 	sth	r2,12(r16)
   65d4c:	00800044 	movi	r2,1
   65d50:	80c00015 	stw	r3,0(r16)
   65d54:	80c00415 	stw	r3,16(r16)
   65d58:	80800515 	stw	r2,20(r16)
   65d5c:	003fd306 	br	65cac <__alt_data_end+0xfffe5cac>
   65d60:	04810004 	movi	r18,1024
   65d64:	003fc306 	br	65c74 <__alt_data_end+0xfffe5c74>
   65d68:	0027883a 	mov	r19,zero
   65d6c:	04810004 	movi	r18,1024
   65d70:	003fc006 	br	65c74 <__alt_data_end+0xfffe5c74>

00065d74 <_malloc_r>:
   65d74:	defff504 	addi	sp,sp,-44
   65d78:	dc800315 	stw	r18,12(sp)
   65d7c:	dfc00a15 	stw	ra,40(sp)
   65d80:	df000915 	stw	fp,36(sp)
   65d84:	ddc00815 	stw	r23,32(sp)
   65d88:	dd800715 	stw	r22,28(sp)
   65d8c:	dd400615 	stw	r21,24(sp)
   65d90:	dd000515 	stw	r20,20(sp)
   65d94:	dcc00415 	stw	r19,16(sp)
   65d98:	dc400215 	stw	r17,8(sp)
   65d9c:	dc000115 	stw	r16,4(sp)
   65da0:	288002c4 	addi	r2,r5,11
   65da4:	00c00584 	movi	r3,22
   65da8:	2025883a 	mov	r18,r4
   65dac:	18807f2e 	bgeu	r3,r2,65fac <_malloc_r+0x238>
   65db0:	047ffe04 	movi	r17,-8
   65db4:	1462703a 	and	r17,r2,r17
   65db8:	8800a316 	blt	r17,zero,66048 <_malloc_r+0x2d4>
   65dbc:	8940a236 	bltu	r17,r5,66048 <_malloc_r+0x2d4>
   65dc0:	006dddc0 	call	6dddc <__malloc_lock>
   65dc4:	00807dc4 	movi	r2,503
   65dc8:	1441e92e 	bgeu	r2,r17,66570 <_malloc_r+0x7fc>
   65dcc:	8804d27a 	srli	r2,r17,9
   65dd0:	1000a126 	beq	r2,zero,66058 <_malloc_r+0x2e4>
   65dd4:	00c00104 	movi	r3,4
   65dd8:	18811e36 	bltu	r3,r2,66254 <_malloc_r+0x4e0>
   65ddc:	8804d1ba 	srli	r2,r17,6
   65de0:	12000e44 	addi	r8,r2,57
   65de4:	11c00e04 	addi	r7,r2,56
   65de8:	4209883a 	add	r4,r8,r8
   65dec:	04c001f4 	movhi	r19,7
   65df0:	2109883a 	add	r4,r4,r4
   65df4:	9cc38a04 	addi	r19,r19,3624
   65df8:	2109883a 	add	r4,r4,r4
   65dfc:	9909883a 	add	r4,r19,r4
   65e00:	24000117 	ldw	r16,4(r4)
   65e04:	213ffe04 	addi	r4,r4,-8
   65e08:	24009726 	beq	r4,r16,66068 <_malloc_r+0x2f4>
   65e0c:	80800117 	ldw	r2,4(r16)
   65e10:	01bfff04 	movi	r6,-4
   65e14:	014003c4 	movi	r5,15
   65e18:	1184703a 	and	r2,r2,r6
   65e1c:	1447c83a 	sub	r3,r2,r17
   65e20:	28c00716 	blt	r5,r3,65e40 <_malloc_r+0xcc>
   65e24:	1800920e 	bge	r3,zero,66070 <_malloc_r+0x2fc>
   65e28:	84000317 	ldw	r16,12(r16)
   65e2c:	24008e26 	beq	r4,r16,66068 <_malloc_r+0x2f4>
   65e30:	80800117 	ldw	r2,4(r16)
   65e34:	1184703a 	and	r2,r2,r6
   65e38:	1447c83a 	sub	r3,r2,r17
   65e3c:	28fff90e 	bge	r5,r3,65e24 <__alt_data_end+0xfffe5e24>
   65e40:	3809883a 	mov	r4,r7
   65e44:	018001f4 	movhi	r6,7
   65e48:	9c000417 	ldw	r16,16(r19)
   65e4c:	31838a04 	addi	r6,r6,3624
   65e50:	32000204 	addi	r8,r6,8
   65e54:	82013426 	beq	r16,r8,66328 <_malloc_r+0x5b4>
   65e58:	80c00117 	ldw	r3,4(r16)
   65e5c:	00bfff04 	movi	r2,-4
   65e60:	188e703a 	and	r7,r3,r2
   65e64:	3c45c83a 	sub	r2,r7,r17
   65e68:	00c003c4 	movi	r3,15
   65e6c:	18811f16 	blt	r3,r2,662ec <_malloc_r+0x578>
   65e70:	32000515 	stw	r8,20(r6)
   65e74:	32000415 	stw	r8,16(r6)
   65e78:	10007f0e 	bge	r2,zero,66078 <_malloc_r+0x304>
   65e7c:	00807fc4 	movi	r2,511
   65e80:	11c0fd36 	bltu	r2,r7,66278 <_malloc_r+0x504>
   65e84:	3806d0fa 	srli	r3,r7,3
   65e88:	01c00044 	movi	r7,1
   65e8c:	30800117 	ldw	r2,4(r6)
   65e90:	19400044 	addi	r5,r3,1
   65e94:	294b883a 	add	r5,r5,r5
   65e98:	1807d0ba 	srai	r3,r3,2
   65e9c:	294b883a 	add	r5,r5,r5
   65ea0:	294b883a 	add	r5,r5,r5
   65ea4:	298b883a 	add	r5,r5,r6
   65ea8:	38c6983a 	sll	r3,r7,r3
   65eac:	29c00017 	ldw	r7,0(r5)
   65eb0:	2a7ffe04 	addi	r9,r5,-8
   65eb4:	1886b03a 	or	r3,r3,r2
   65eb8:	82400315 	stw	r9,12(r16)
   65ebc:	81c00215 	stw	r7,8(r16)
   65ec0:	30c00115 	stw	r3,4(r6)
   65ec4:	2c000015 	stw	r16,0(r5)
   65ec8:	3c000315 	stw	r16,12(r7)
   65ecc:	2005d0ba 	srai	r2,r4,2
   65ed0:	01400044 	movi	r5,1
   65ed4:	288a983a 	sll	r5,r5,r2
   65ed8:	19406f36 	bltu	r3,r5,66098 <_malloc_r+0x324>
   65edc:	28c4703a 	and	r2,r5,r3
   65ee0:	10000a1e 	bne	r2,zero,65f0c <_malloc_r+0x198>
   65ee4:	00bfff04 	movi	r2,-4
   65ee8:	294b883a 	add	r5,r5,r5
   65eec:	2088703a 	and	r4,r4,r2
   65ef0:	28c4703a 	and	r2,r5,r3
   65ef4:	21000104 	addi	r4,r4,4
   65ef8:	1000041e 	bne	r2,zero,65f0c <_malloc_r+0x198>
   65efc:	294b883a 	add	r5,r5,r5
   65f00:	28c4703a 	and	r2,r5,r3
   65f04:	21000104 	addi	r4,r4,4
   65f08:	103ffc26 	beq	r2,zero,65efc <__alt_data_end+0xfffe5efc>
   65f0c:	02bfff04 	movi	r10,-4
   65f10:	024003c4 	movi	r9,15
   65f14:	21800044 	addi	r6,r4,1
   65f18:	318d883a 	add	r6,r6,r6
   65f1c:	318d883a 	add	r6,r6,r6
   65f20:	318d883a 	add	r6,r6,r6
   65f24:	998d883a 	add	r6,r19,r6
   65f28:	333ffe04 	addi	r12,r6,-8
   65f2c:	2017883a 	mov	r11,r4
   65f30:	31800104 	addi	r6,r6,4
   65f34:	34000017 	ldw	r16,0(r6)
   65f38:	31fffd04 	addi	r7,r6,-12
   65f3c:	81c0041e 	bne	r16,r7,65f50 <_malloc_r+0x1dc>
   65f40:	0000fb06 	br	66330 <_malloc_r+0x5bc>
   65f44:	1801030e 	bge	r3,zero,66354 <_malloc_r+0x5e0>
   65f48:	84000317 	ldw	r16,12(r16)
   65f4c:	81c0f826 	beq	r16,r7,66330 <_malloc_r+0x5bc>
   65f50:	80800117 	ldw	r2,4(r16)
   65f54:	1284703a 	and	r2,r2,r10
   65f58:	1447c83a 	sub	r3,r2,r17
   65f5c:	48fff90e 	bge	r9,r3,65f44 <__alt_data_end+0xfffe5f44>
   65f60:	80800317 	ldw	r2,12(r16)
   65f64:	81000217 	ldw	r4,8(r16)
   65f68:	89400054 	ori	r5,r17,1
   65f6c:	81400115 	stw	r5,4(r16)
   65f70:	20800315 	stw	r2,12(r4)
   65f74:	11000215 	stw	r4,8(r2)
   65f78:	8463883a 	add	r17,r16,r17
   65f7c:	9c400515 	stw	r17,20(r19)
   65f80:	9c400415 	stw	r17,16(r19)
   65f84:	18800054 	ori	r2,r3,1
   65f88:	88800115 	stw	r2,4(r17)
   65f8c:	8a000315 	stw	r8,12(r17)
   65f90:	8a000215 	stw	r8,8(r17)
   65f94:	88e3883a 	add	r17,r17,r3
   65f98:	88c00015 	stw	r3,0(r17)
   65f9c:	9009883a 	mov	r4,r18
   65fa0:	006de000 	call	6de00 <__malloc_unlock>
   65fa4:	80800204 	addi	r2,r16,8
   65fa8:	00001b06 	br	66018 <_malloc_r+0x2a4>
   65fac:	04400404 	movi	r17,16
   65fb0:	89402536 	bltu	r17,r5,66048 <_malloc_r+0x2d4>
   65fb4:	006dddc0 	call	6dddc <__malloc_lock>
   65fb8:	00800184 	movi	r2,6
   65fbc:	01000084 	movi	r4,2
   65fc0:	04c001f4 	movhi	r19,7
   65fc4:	1085883a 	add	r2,r2,r2
   65fc8:	9cc38a04 	addi	r19,r19,3624
   65fcc:	1085883a 	add	r2,r2,r2
   65fd0:	9885883a 	add	r2,r19,r2
   65fd4:	14000117 	ldw	r16,4(r2)
   65fd8:	10fffe04 	addi	r3,r2,-8
   65fdc:	80c0d926 	beq	r16,r3,66344 <_malloc_r+0x5d0>
   65fe0:	80c00117 	ldw	r3,4(r16)
   65fe4:	81000317 	ldw	r4,12(r16)
   65fe8:	00bfff04 	movi	r2,-4
   65fec:	1884703a 	and	r2,r3,r2
   65ff0:	81400217 	ldw	r5,8(r16)
   65ff4:	8085883a 	add	r2,r16,r2
   65ff8:	10c00117 	ldw	r3,4(r2)
   65ffc:	29000315 	stw	r4,12(r5)
   66000:	21400215 	stw	r5,8(r4)
   66004:	18c00054 	ori	r3,r3,1
   66008:	10c00115 	stw	r3,4(r2)
   6600c:	9009883a 	mov	r4,r18
   66010:	006de000 	call	6de00 <__malloc_unlock>
   66014:	80800204 	addi	r2,r16,8
   66018:	dfc00a17 	ldw	ra,40(sp)
   6601c:	df000917 	ldw	fp,36(sp)
   66020:	ddc00817 	ldw	r23,32(sp)
   66024:	dd800717 	ldw	r22,28(sp)
   66028:	dd400617 	ldw	r21,24(sp)
   6602c:	dd000517 	ldw	r20,20(sp)
   66030:	dcc00417 	ldw	r19,16(sp)
   66034:	dc800317 	ldw	r18,12(sp)
   66038:	dc400217 	ldw	r17,8(sp)
   6603c:	dc000117 	ldw	r16,4(sp)
   66040:	dec00b04 	addi	sp,sp,44
   66044:	f800283a 	ret
   66048:	00800304 	movi	r2,12
   6604c:	90800015 	stw	r2,0(r18)
   66050:	0005883a 	mov	r2,zero
   66054:	003ff006 	br	66018 <__alt_data_end+0xfffe6018>
   66058:	01002004 	movi	r4,128
   6605c:	02001004 	movi	r8,64
   66060:	01c00fc4 	movi	r7,63
   66064:	003f6106 	br	65dec <__alt_data_end+0xfffe5dec>
   66068:	4009883a 	mov	r4,r8
   6606c:	003f7506 	br	65e44 <__alt_data_end+0xfffe5e44>
   66070:	81000317 	ldw	r4,12(r16)
   66074:	003fde06 	br	65ff0 <__alt_data_end+0xfffe5ff0>
   66078:	81c5883a 	add	r2,r16,r7
   6607c:	11400117 	ldw	r5,4(r2)
   66080:	9009883a 	mov	r4,r18
   66084:	29400054 	ori	r5,r5,1
   66088:	11400115 	stw	r5,4(r2)
   6608c:	006de000 	call	6de00 <__malloc_unlock>
   66090:	80800204 	addi	r2,r16,8
   66094:	003fe006 	br	66018 <__alt_data_end+0xfffe6018>
   66098:	9c000217 	ldw	r16,8(r19)
   6609c:	00bfff04 	movi	r2,-4
   660a0:	85800117 	ldw	r22,4(r16)
   660a4:	b0ac703a 	and	r22,r22,r2
   660a8:	b4400336 	bltu	r22,r17,660b8 <_malloc_r+0x344>
   660ac:	b445c83a 	sub	r2,r22,r17
   660b0:	00c003c4 	movi	r3,15
   660b4:	18805d16 	blt	r3,r2,6622c <_malloc_r+0x4b8>
   660b8:	05c001f4 	movhi	r23,7
   660bc:	008001f4 	movhi	r2,7
   660c0:	10900e04 	addi	r2,r2,16440
   660c4:	bdc91104 	addi	r23,r23,9284
   660c8:	15400017 	ldw	r21,0(r2)
   660cc:	b8c00017 	ldw	r3,0(r23)
   660d0:	00bfffc4 	movi	r2,-1
   660d4:	858d883a 	add	r6,r16,r22
   660d8:	8d6b883a 	add	r21,r17,r21
   660dc:	1880ea26 	beq	r3,r2,66488 <_malloc_r+0x714>
   660e0:	ad4403c4 	addi	r21,r21,4111
   660e4:	00bc0004 	movi	r2,-4096
   660e8:	a8aa703a 	and	r21,r21,r2
   660ec:	a80b883a 	mov	r5,r21
   660f0:	9009883a 	mov	r4,r18
   660f4:	d9800015 	stw	r6,0(sp)
   660f8:	0067f780 	call	67f78 <_sbrk_r>
   660fc:	1029883a 	mov	r20,r2
   66100:	00bfffc4 	movi	r2,-1
   66104:	d9800017 	ldw	r6,0(sp)
   66108:	a080e826 	beq	r20,r2,664ac <_malloc_r+0x738>
   6610c:	a180a636 	bltu	r20,r6,663a8 <_malloc_r+0x634>
   66110:	070001f4 	movhi	fp,7
   66114:	e7101704 	addi	fp,fp,16476
   66118:	e0800017 	ldw	r2,0(fp)
   6611c:	a887883a 	add	r3,r21,r2
   66120:	e0c00015 	stw	r3,0(fp)
   66124:	3500e626 	beq	r6,r20,664c0 <_malloc_r+0x74c>
   66128:	b9000017 	ldw	r4,0(r23)
   6612c:	00bfffc4 	movi	r2,-1
   66130:	2080ee26 	beq	r4,r2,664ec <_malloc_r+0x778>
   66134:	a185c83a 	sub	r2,r20,r6
   66138:	10c5883a 	add	r2,r2,r3
   6613c:	e0800015 	stw	r2,0(fp)
   66140:	a0c001cc 	andi	r3,r20,7
   66144:	1800bc26 	beq	r3,zero,66438 <_malloc_r+0x6c4>
   66148:	a0e9c83a 	sub	r20,r20,r3
   6614c:	00840204 	movi	r2,4104
   66150:	a5000204 	addi	r20,r20,8
   66154:	10c7c83a 	sub	r3,r2,r3
   66158:	a545883a 	add	r2,r20,r21
   6615c:	1083ffcc 	andi	r2,r2,4095
   66160:	18abc83a 	sub	r21,r3,r2
   66164:	a80b883a 	mov	r5,r21
   66168:	9009883a 	mov	r4,r18
   6616c:	0067f780 	call	67f78 <_sbrk_r>
   66170:	00ffffc4 	movi	r3,-1
   66174:	10c0e126 	beq	r2,r3,664fc <_malloc_r+0x788>
   66178:	1505c83a 	sub	r2,r2,r20
   6617c:	1545883a 	add	r2,r2,r21
   66180:	10800054 	ori	r2,r2,1
   66184:	e0c00017 	ldw	r3,0(fp)
   66188:	9d000215 	stw	r20,8(r19)
   6618c:	a0800115 	stw	r2,4(r20)
   66190:	a8c7883a 	add	r3,r21,r3
   66194:	e0c00015 	stw	r3,0(fp)
   66198:	84c00e26 	beq	r16,r19,661d4 <_malloc_r+0x460>
   6619c:	018003c4 	movi	r6,15
   661a0:	3580a72e 	bgeu	r6,r22,66440 <_malloc_r+0x6cc>
   661a4:	81400117 	ldw	r5,4(r16)
   661a8:	013ffe04 	movi	r4,-8
   661ac:	b0bffd04 	addi	r2,r22,-12
   661b0:	1104703a 	and	r2,r2,r4
   661b4:	2900004c 	andi	r4,r5,1
   661b8:	2088b03a 	or	r4,r4,r2
   661bc:	81000115 	stw	r4,4(r16)
   661c0:	01400144 	movi	r5,5
   661c4:	8089883a 	add	r4,r16,r2
   661c8:	21400115 	stw	r5,4(r4)
   661cc:	21400215 	stw	r5,8(r4)
   661d0:	3080cd36 	bltu	r6,r2,66508 <_malloc_r+0x794>
   661d4:	008001f4 	movhi	r2,7
   661d8:	10900d04 	addi	r2,r2,16436
   661dc:	11000017 	ldw	r4,0(r2)
   661e0:	20c0012e 	bgeu	r4,r3,661e8 <_malloc_r+0x474>
   661e4:	10c00015 	stw	r3,0(r2)
   661e8:	008001f4 	movhi	r2,7
   661ec:	10900c04 	addi	r2,r2,16432
   661f0:	11000017 	ldw	r4,0(r2)
   661f4:	9c000217 	ldw	r16,8(r19)
   661f8:	20c0012e 	bgeu	r4,r3,66200 <_malloc_r+0x48c>
   661fc:	10c00015 	stw	r3,0(r2)
   66200:	80c00117 	ldw	r3,4(r16)
   66204:	00bfff04 	movi	r2,-4
   66208:	1886703a 	and	r3,r3,r2
   6620c:	1c45c83a 	sub	r2,r3,r17
   66210:	1c400236 	bltu	r3,r17,6621c <_malloc_r+0x4a8>
   66214:	00c003c4 	movi	r3,15
   66218:	18800416 	blt	r3,r2,6622c <_malloc_r+0x4b8>
   6621c:	9009883a 	mov	r4,r18
   66220:	006de000 	call	6de00 <__malloc_unlock>
   66224:	0005883a 	mov	r2,zero
   66228:	003f7b06 	br	66018 <__alt_data_end+0xfffe6018>
   6622c:	88c00054 	ori	r3,r17,1
   66230:	80c00115 	stw	r3,4(r16)
   66234:	8463883a 	add	r17,r16,r17
   66238:	10800054 	ori	r2,r2,1
   6623c:	9c400215 	stw	r17,8(r19)
   66240:	88800115 	stw	r2,4(r17)
   66244:	9009883a 	mov	r4,r18
   66248:	006de000 	call	6de00 <__malloc_unlock>
   6624c:	80800204 	addi	r2,r16,8
   66250:	003f7106 	br	66018 <__alt_data_end+0xfffe6018>
   66254:	00c00504 	movi	r3,20
   66258:	18804a2e 	bgeu	r3,r2,66384 <_malloc_r+0x610>
   6625c:	00c01504 	movi	r3,84
   66260:	18806e36 	bltu	r3,r2,6641c <_malloc_r+0x6a8>
   66264:	8804d33a 	srli	r2,r17,12
   66268:	12001bc4 	addi	r8,r2,111
   6626c:	11c01b84 	addi	r7,r2,110
   66270:	4209883a 	add	r4,r8,r8
   66274:	003edd06 	br	65dec <__alt_data_end+0xfffe5dec>
   66278:	3804d27a 	srli	r2,r7,9
   6627c:	00c00104 	movi	r3,4
   66280:	1880442e 	bgeu	r3,r2,66394 <_malloc_r+0x620>
   66284:	00c00504 	movi	r3,20
   66288:	18808136 	bltu	r3,r2,66490 <_malloc_r+0x71c>
   6628c:	11401704 	addi	r5,r2,92
   66290:	10c016c4 	addi	r3,r2,91
   66294:	294b883a 	add	r5,r5,r5
   66298:	294b883a 	add	r5,r5,r5
   6629c:	294b883a 	add	r5,r5,r5
   662a0:	994b883a 	add	r5,r19,r5
   662a4:	28800017 	ldw	r2,0(r5)
   662a8:	018001f4 	movhi	r6,7
   662ac:	297ffe04 	addi	r5,r5,-8
   662b0:	31838a04 	addi	r6,r6,3624
   662b4:	28806526 	beq	r5,r2,6644c <_malloc_r+0x6d8>
   662b8:	01bfff04 	movi	r6,-4
   662bc:	10c00117 	ldw	r3,4(r2)
   662c0:	1986703a 	and	r3,r3,r6
   662c4:	38c0022e 	bgeu	r7,r3,662d0 <_malloc_r+0x55c>
   662c8:	10800217 	ldw	r2,8(r2)
   662cc:	28bffb1e 	bne	r5,r2,662bc <__alt_data_end+0xfffe62bc>
   662d0:	11400317 	ldw	r5,12(r2)
   662d4:	98c00117 	ldw	r3,4(r19)
   662d8:	81400315 	stw	r5,12(r16)
   662dc:	80800215 	stw	r2,8(r16)
   662e0:	2c000215 	stw	r16,8(r5)
   662e4:	14000315 	stw	r16,12(r2)
   662e8:	003ef806 	br	65ecc <__alt_data_end+0xfffe5ecc>
   662ec:	88c00054 	ori	r3,r17,1
   662f0:	80c00115 	stw	r3,4(r16)
   662f4:	8463883a 	add	r17,r16,r17
   662f8:	34400515 	stw	r17,20(r6)
   662fc:	34400415 	stw	r17,16(r6)
   66300:	10c00054 	ori	r3,r2,1
   66304:	8a000315 	stw	r8,12(r17)
   66308:	8a000215 	stw	r8,8(r17)
   6630c:	88c00115 	stw	r3,4(r17)
   66310:	88a3883a 	add	r17,r17,r2
   66314:	88800015 	stw	r2,0(r17)
   66318:	9009883a 	mov	r4,r18
   6631c:	006de000 	call	6de00 <__malloc_unlock>
   66320:	80800204 	addi	r2,r16,8
   66324:	003f3c06 	br	66018 <__alt_data_end+0xfffe6018>
   66328:	30c00117 	ldw	r3,4(r6)
   6632c:	003ee706 	br	65ecc <__alt_data_end+0xfffe5ecc>
   66330:	5ac00044 	addi	r11,r11,1
   66334:	588000cc 	andi	r2,r11,3
   66338:	31800204 	addi	r6,r6,8
   6633c:	103efd1e 	bne	r2,zero,65f34 <__alt_data_end+0xfffe5f34>
   66340:	00002406 	br	663d4 <_malloc_r+0x660>
   66344:	14000317 	ldw	r16,12(r2)
   66348:	143f251e 	bne	r2,r16,65fe0 <__alt_data_end+0xfffe5fe0>
   6634c:	21000084 	addi	r4,r4,2
   66350:	003ebc06 	br	65e44 <__alt_data_end+0xfffe5e44>
   66354:	8085883a 	add	r2,r16,r2
   66358:	10c00117 	ldw	r3,4(r2)
   6635c:	81000317 	ldw	r4,12(r16)
   66360:	81400217 	ldw	r5,8(r16)
   66364:	18c00054 	ori	r3,r3,1
   66368:	10c00115 	stw	r3,4(r2)
   6636c:	29000315 	stw	r4,12(r5)
   66370:	21400215 	stw	r5,8(r4)
   66374:	9009883a 	mov	r4,r18
   66378:	006de000 	call	6de00 <__malloc_unlock>
   6637c:	80800204 	addi	r2,r16,8
   66380:	003f2506 	br	66018 <__alt_data_end+0xfffe6018>
   66384:	12001704 	addi	r8,r2,92
   66388:	11c016c4 	addi	r7,r2,91
   6638c:	4209883a 	add	r4,r8,r8
   66390:	003e9606 	br	65dec <__alt_data_end+0xfffe5dec>
   66394:	3804d1ba 	srli	r2,r7,6
   66398:	11400e44 	addi	r5,r2,57
   6639c:	10c00e04 	addi	r3,r2,56
   663a0:	294b883a 	add	r5,r5,r5
   663a4:	003fbc06 	br	66298 <__alt_data_end+0xfffe6298>
   663a8:	84ff5926 	beq	r16,r19,66110 <__alt_data_end+0xfffe6110>
   663ac:	008001f4 	movhi	r2,7
   663b0:	10838a04 	addi	r2,r2,3624
   663b4:	14000217 	ldw	r16,8(r2)
   663b8:	00bfff04 	movi	r2,-4
   663bc:	80c00117 	ldw	r3,4(r16)
   663c0:	1886703a 	and	r3,r3,r2
   663c4:	003f9106 	br	6620c <__alt_data_end+0xfffe620c>
   663c8:	60800217 	ldw	r2,8(r12)
   663cc:	213fffc4 	addi	r4,r4,-1
   663d0:	1300651e 	bne	r2,r12,66568 <_malloc_r+0x7f4>
   663d4:	208000cc 	andi	r2,r4,3
   663d8:	633ffe04 	addi	r12,r12,-8
   663dc:	103ffa1e 	bne	r2,zero,663c8 <__alt_data_end+0xfffe63c8>
   663e0:	98800117 	ldw	r2,4(r19)
   663e4:	0146303a 	nor	r3,zero,r5
   663e8:	1884703a 	and	r2,r3,r2
   663ec:	98800115 	stw	r2,4(r19)
   663f0:	294b883a 	add	r5,r5,r5
   663f4:	117f2836 	bltu	r2,r5,66098 <__alt_data_end+0xfffe6098>
   663f8:	283f2726 	beq	r5,zero,66098 <__alt_data_end+0xfffe6098>
   663fc:	2886703a 	and	r3,r5,r2
   66400:	5809883a 	mov	r4,r11
   66404:	183ec31e 	bne	r3,zero,65f14 <__alt_data_end+0xfffe5f14>
   66408:	294b883a 	add	r5,r5,r5
   6640c:	2886703a 	and	r3,r5,r2
   66410:	21000104 	addi	r4,r4,4
   66414:	183ffc26 	beq	r3,zero,66408 <__alt_data_end+0xfffe6408>
   66418:	003ebe06 	br	65f14 <__alt_data_end+0xfffe5f14>
   6641c:	00c05504 	movi	r3,340
   66420:	18801236 	bltu	r3,r2,6646c <_malloc_r+0x6f8>
   66424:	8804d3fa 	srli	r2,r17,15
   66428:	12001e04 	addi	r8,r2,120
   6642c:	11c01dc4 	addi	r7,r2,119
   66430:	4209883a 	add	r4,r8,r8
   66434:	003e6d06 	br	65dec <__alt_data_end+0xfffe5dec>
   66438:	00c40004 	movi	r3,4096
   6643c:	003f4606 	br	66158 <__alt_data_end+0xfffe6158>
   66440:	00800044 	movi	r2,1
   66444:	a0800115 	stw	r2,4(r20)
   66448:	003f7406 	br	6621c <__alt_data_end+0xfffe621c>
   6644c:	1805d0ba 	srai	r2,r3,2
   66450:	01c00044 	movi	r7,1
   66454:	30c00117 	ldw	r3,4(r6)
   66458:	388e983a 	sll	r7,r7,r2
   6645c:	2805883a 	mov	r2,r5
   66460:	38c6b03a 	or	r3,r7,r3
   66464:	30c00115 	stw	r3,4(r6)
   66468:	003f9b06 	br	662d8 <__alt_data_end+0xfffe62d8>
   6646c:	00c15504 	movi	r3,1364
   66470:	18801a36 	bltu	r3,r2,664dc <_malloc_r+0x768>
   66474:	8804d4ba 	srli	r2,r17,18
   66478:	12001f44 	addi	r8,r2,125
   6647c:	11c01f04 	addi	r7,r2,124
   66480:	4209883a 	add	r4,r8,r8
   66484:	003e5906 	br	65dec <__alt_data_end+0xfffe5dec>
   66488:	ad400404 	addi	r21,r21,16
   6648c:	003f1706 	br	660ec <__alt_data_end+0xfffe60ec>
   66490:	00c01504 	movi	r3,84
   66494:	18802336 	bltu	r3,r2,66524 <_malloc_r+0x7b0>
   66498:	3804d33a 	srli	r2,r7,12
   6649c:	11401bc4 	addi	r5,r2,111
   664a0:	10c01b84 	addi	r3,r2,110
   664a4:	294b883a 	add	r5,r5,r5
   664a8:	003f7b06 	br	66298 <__alt_data_end+0xfffe6298>
   664ac:	9c000217 	ldw	r16,8(r19)
   664b0:	00bfff04 	movi	r2,-4
   664b4:	80c00117 	ldw	r3,4(r16)
   664b8:	1886703a 	and	r3,r3,r2
   664bc:	003f5306 	br	6620c <__alt_data_end+0xfffe620c>
   664c0:	3083ffcc 	andi	r2,r6,4095
   664c4:	103f181e 	bne	r2,zero,66128 <__alt_data_end+0xfffe6128>
   664c8:	99000217 	ldw	r4,8(r19)
   664cc:	b545883a 	add	r2,r22,r21
   664d0:	10800054 	ori	r2,r2,1
   664d4:	20800115 	stw	r2,4(r4)
   664d8:	003f3e06 	br	661d4 <__alt_data_end+0xfffe61d4>
   664dc:	01003f84 	movi	r4,254
   664e0:	02001fc4 	movi	r8,127
   664e4:	01c01f84 	movi	r7,126
   664e8:	003e4006 	br	65dec <__alt_data_end+0xfffe5dec>
   664ec:	008001f4 	movhi	r2,7
   664f0:	10891104 	addi	r2,r2,9284
   664f4:	15000015 	stw	r20,0(r2)
   664f8:	003f1106 	br	66140 <__alt_data_end+0xfffe6140>
   664fc:	00800044 	movi	r2,1
   66500:	002b883a 	mov	r21,zero
   66504:	003f1f06 	br	66184 <__alt_data_end+0xfffe6184>
   66508:	81400204 	addi	r5,r16,8
   6650c:	9009883a 	mov	r4,r18
   66510:	006517c0 	call	6517c <_free_r>
   66514:	008001f4 	movhi	r2,7
   66518:	10901704 	addi	r2,r2,16476
   6651c:	10c00017 	ldw	r3,0(r2)
   66520:	003f2c06 	br	661d4 <__alt_data_end+0xfffe61d4>
   66524:	00c05504 	movi	r3,340
   66528:	18800536 	bltu	r3,r2,66540 <_malloc_r+0x7cc>
   6652c:	3804d3fa 	srli	r2,r7,15
   66530:	11401e04 	addi	r5,r2,120
   66534:	10c01dc4 	addi	r3,r2,119
   66538:	294b883a 	add	r5,r5,r5
   6653c:	003f5606 	br	66298 <__alt_data_end+0xfffe6298>
   66540:	00c15504 	movi	r3,1364
   66544:	18800536 	bltu	r3,r2,6655c <_malloc_r+0x7e8>
   66548:	3804d4ba 	srli	r2,r7,18
   6654c:	11401f44 	addi	r5,r2,125
   66550:	10c01f04 	addi	r3,r2,124
   66554:	294b883a 	add	r5,r5,r5
   66558:	003f4f06 	br	66298 <__alt_data_end+0xfffe6298>
   6655c:	01403f84 	movi	r5,254
   66560:	00c01f84 	movi	r3,126
   66564:	003f4c06 	br	66298 <__alt_data_end+0xfffe6298>
   66568:	98800117 	ldw	r2,4(r19)
   6656c:	003fa006 	br	663f0 <__alt_data_end+0xfffe63f0>
   66570:	8808d0fa 	srli	r4,r17,3
   66574:	20800044 	addi	r2,r4,1
   66578:	1085883a 	add	r2,r2,r2
   6657c:	003e9006 	br	65fc0 <__alt_data_end+0xfffe5fc0>

00066580 <memchr>:
   66580:	208000cc 	andi	r2,r4,3
   66584:	280f883a 	mov	r7,r5
   66588:	10003426 	beq	r2,zero,6665c <memchr+0xdc>
   6658c:	30bfffc4 	addi	r2,r6,-1
   66590:	30001a26 	beq	r6,zero,665fc <memchr+0x7c>
   66594:	20c00003 	ldbu	r3,0(r4)
   66598:	29803fcc 	andi	r6,r5,255
   6659c:	30c0051e 	bne	r6,r3,665b4 <memchr+0x34>
   665a0:	00001806 	br	66604 <memchr+0x84>
   665a4:	10001526 	beq	r2,zero,665fc <memchr+0x7c>
   665a8:	20c00003 	ldbu	r3,0(r4)
   665ac:	10bfffc4 	addi	r2,r2,-1
   665b0:	30c01426 	beq	r6,r3,66604 <memchr+0x84>
   665b4:	21000044 	addi	r4,r4,1
   665b8:	20c000cc 	andi	r3,r4,3
   665bc:	183ff91e 	bne	r3,zero,665a4 <__alt_data_end+0xfffe65a4>
   665c0:	020000c4 	movi	r8,3
   665c4:	40801136 	bltu	r8,r2,6660c <memchr+0x8c>
   665c8:	10000c26 	beq	r2,zero,665fc <memchr+0x7c>
   665cc:	20c00003 	ldbu	r3,0(r4)
   665d0:	29403fcc 	andi	r5,r5,255
   665d4:	28c00b26 	beq	r5,r3,66604 <memchr+0x84>
   665d8:	20c00044 	addi	r3,r4,1
   665dc:	39803fcc 	andi	r6,r7,255
   665e0:	2089883a 	add	r4,r4,r2
   665e4:	00000306 	br	665f4 <memchr+0x74>
   665e8:	18c00044 	addi	r3,r3,1
   665ec:	197fffc3 	ldbu	r5,-1(r3)
   665f0:	31400526 	beq	r6,r5,66608 <memchr+0x88>
   665f4:	1805883a 	mov	r2,r3
   665f8:	20fffb1e 	bne	r4,r3,665e8 <__alt_data_end+0xfffe65e8>
   665fc:	0005883a 	mov	r2,zero
   66600:	f800283a 	ret
   66604:	2005883a 	mov	r2,r4
   66608:	f800283a 	ret
   6660c:	28c03fcc 	andi	r3,r5,255
   66610:	1812923a 	slli	r9,r3,8
   66614:	02ffbff4 	movhi	r11,65279
   66618:	02a02074 	movhi	r10,32897
   6661c:	48d2b03a 	or	r9,r9,r3
   66620:	4806943a 	slli	r3,r9,16
   66624:	5affbfc4 	addi	r11,r11,-257
   66628:	52a02004 	addi	r10,r10,-32640
   6662c:	48d2b03a 	or	r9,r9,r3
   66630:	20c00017 	ldw	r3,0(r4)
   66634:	48c6f03a 	xor	r3,r9,r3
   66638:	1acd883a 	add	r6,r3,r11
   6663c:	00c6303a 	nor	r3,zero,r3
   66640:	30c6703a 	and	r3,r6,r3
   66644:	1a86703a 	and	r3,r3,r10
   66648:	183fe01e 	bne	r3,zero,665cc <__alt_data_end+0xfffe65cc>
   6664c:	10bfff04 	addi	r2,r2,-4
   66650:	21000104 	addi	r4,r4,4
   66654:	40bff636 	bltu	r8,r2,66630 <__alt_data_end+0xfffe6630>
   66658:	003fdb06 	br	665c8 <__alt_data_end+0xfffe65c8>
   6665c:	3005883a 	mov	r2,r6
   66660:	003fd706 	br	665c0 <__alt_data_end+0xfffe65c0>

00066664 <memmove>:
   66664:	2005883a 	mov	r2,r4
   66668:	29000b2e 	bgeu	r5,r4,66698 <memmove+0x34>
   6666c:	298f883a 	add	r7,r5,r6
   66670:	21c0092e 	bgeu	r4,r7,66698 <memmove+0x34>
   66674:	2187883a 	add	r3,r4,r6
   66678:	198bc83a 	sub	r5,r3,r6
   6667c:	30004826 	beq	r6,zero,667a0 <memmove+0x13c>
   66680:	39ffffc4 	addi	r7,r7,-1
   66684:	39000003 	ldbu	r4,0(r7)
   66688:	18ffffc4 	addi	r3,r3,-1
   6668c:	19000005 	stb	r4,0(r3)
   66690:	28fffb1e 	bne	r5,r3,66680 <__alt_data_end+0xfffe6680>
   66694:	f800283a 	ret
   66698:	00c003c4 	movi	r3,15
   6669c:	1980412e 	bgeu	r3,r6,667a4 <memmove+0x140>
   666a0:	2886b03a 	or	r3,r5,r2
   666a4:	18c000cc 	andi	r3,r3,3
   666a8:	1800401e 	bne	r3,zero,667ac <memmove+0x148>
   666ac:	33fffc04 	addi	r15,r6,-16
   666b0:	781ed13a 	srli	r15,r15,4
   666b4:	28c00104 	addi	r3,r5,4
   666b8:	13400104 	addi	r13,r2,4
   666bc:	781c913a 	slli	r14,r15,4
   666c0:	2b000204 	addi	r12,r5,8
   666c4:	12c00204 	addi	r11,r2,8
   666c8:	73800504 	addi	r14,r14,20
   666cc:	2a800304 	addi	r10,r5,12
   666d0:	12400304 	addi	r9,r2,12
   666d4:	2b9d883a 	add	r14,r5,r14
   666d8:	2811883a 	mov	r8,r5
   666dc:	100f883a 	mov	r7,r2
   666e0:	41000017 	ldw	r4,0(r8)
   666e4:	39c00404 	addi	r7,r7,16
   666e8:	18c00404 	addi	r3,r3,16
   666ec:	393ffc15 	stw	r4,-16(r7)
   666f0:	193ffc17 	ldw	r4,-16(r3)
   666f4:	6b400404 	addi	r13,r13,16
   666f8:	5ac00404 	addi	r11,r11,16
   666fc:	693ffc15 	stw	r4,-16(r13)
   66700:	61000017 	ldw	r4,0(r12)
   66704:	4a400404 	addi	r9,r9,16
   66708:	42000404 	addi	r8,r8,16
   6670c:	593ffc15 	stw	r4,-16(r11)
   66710:	51000017 	ldw	r4,0(r10)
   66714:	63000404 	addi	r12,r12,16
   66718:	52800404 	addi	r10,r10,16
   6671c:	493ffc15 	stw	r4,-16(r9)
   66720:	1bbfef1e 	bne	r3,r14,666e0 <__alt_data_end+0xfffe66e0>
   66724:	79000044 	addi	r4,r15,1
   66728:	2008913a 	slli	r4,r4,4
   6672c:	328003cc 	andi	r10,r6,15
   66730:	02c000c4 	movi	r11,3
   66734:	1107883a 	add	r3,r2,r4
   66738:	290b883a 	add	r5,r5,r4
   6673c:	5a801e2e 	bgeu	r11,r10,667b8 <memmove+0x154>
   66740:	1813883a 	mov	r9,r3
   66744:	2811883a 	mov	r8,r5
   66748:	500f883a 	mov	r7,r10
   6674c:	41000017 	ldw	r4,0(r8)
   66750:	4a400104 	addi	r9,r9,4
   66754:	39ffff04 	addi	r7,r7,-4
   66758:	493fff15 	stw	r4,-4(r9)
   6675c:	42000104 	addi	r8,r8,4
   66760:	59fffa36 	bltu	r11,r7,6674c <__alt_data_end+0xfffe674c>
   66764:	513fff04 	addi	r4,r10,-4
   66768:	2008d0ba 	srli	r4,r4,2
   6676c:	318000cc 	andi	r6,r6,3
   66770:	21000044 	addi	r4,r4,1
   66774:	2109883a 	add	r4,r4,r4
   66778:	2109883a 	add	r4,r4,r4
   6677c:	1907883a 	add	r3,r3,r4
   66780:	290b883a 	add	r5,r5,r4
   66784:	30000b26 	beq	r6,zero,667b4 <memmove+0x150>
   66788:	198d883a 	add	r6,r3,r6
   6678c:	29c00003 	ldbu	r7,0(r5)
   66790:	18c00044 	addi	r3,r3,1
   66794:	29400044 	addi	r5,r5,1
   66798:	19ffffc5 	stb	r7,-1(r3)
   6679c:	19bffb1e 	bne	r3,r6,6678c <__alt_data_end+0xfffe678c>
   667a0:	f800283a 	ret
   667a4:	1007883a 	mov	r3,r2
   667a8:	003ff606 	br	66784 <__alt_data_end+0xfffe6784>
   667ac:	1007883a 	mov	r3,r2
   667b0:	003ff506 	br	66788 <__alt_data_end+0xfffe6788>
   667b4:	f800283a 	ret
   667b8:	500d883a 	mov	r6,r10
   667bc:	003ff106 	br	66784 <__alt_data_end+0xfffe6784>

000667c0 <memset>:
   667c0:	20c000cc 	andi	r3,r4,3
   667c4:	2005883a 	mov	r2,r4
   667c8:	18004426 	beq	r3,zero,668dc <memset+0x11c>
   667cc:	31ffffc4 	addi	r7,r6,-1
   667d0:	30004026 	beq	r6,zero,668d4 <memset+0x114>
   667d4:	2813883a 	mov	r9,r5
   667d8:	200d883a 	mov	r6,r4
   667dc:	2007883a 	mov	r3,r4
   667e0:	00000406 	br	667f4 <memset+0x34>
   667e4:	3a3fffc4 	addi	r8,r7,-1
   667e8:	31800044 	addi	r6,r6,1
   667ec:	38003926 	beq	r7,zero,668d4 <memset+0x114>
   667f0:	400f883a 	mov	r7,r8
   667f4:	18c00044 	addi	r3,r3,1
   667f8:	32400005 	stb	r9,0(r6)
   667fc:	1a0000cc 	andi	r8,r3,3
   66800:	403ff81e 	bne	r8,zero,667e4 <__alt_data_end+0xfffe67e4>
   66804:	010000c4 	movi	r4,3
   66808:	21c02d2e 	bgeu	r4,r7,668c0 <memset+0x100>
   6680c:	29003fcc 	andi	r4,r5,255
   66810:	200c923a 	slli	r6,r4,8
   66814:	3108b03a 	or	r4,r6,r4
   66818:	200c943a 	slli	r6,r4,16
   6681c:	218cb03a 	or	r6,r4,r6
   66820:	010003c4 	movi	r4,15
   66824:	21c0182e 	bgeu	r4,r7,66888 <memset+0xc8>
   66828:	3b3ffc04 	addi	r12,r7,-16
   6682c:	6018d13a 	srli	r12,r12,4
   66830:	1a000104 	addi	r8,r3,4
   66834:	1ac00204 	addi	r11,r3,8
   66838:	6008913a 	slli	r4,r12,4
   6683c:	1a800304 	addi	r10,r3,12
   66840:	1813883a 	mov	r9,r3
   66844:	21000504 	addi	r4,r4,20
   66848:	1909883a 	add	r4,r3,r4
   6684c:	49800015 	stw	r6,0(r9)
   66850:	41800015 	stw	r6,0(r8)
   66854:	59800015 	stw	r6,0(r11)
   66858:	51800015 	stw	r6,0(r10)
   6685c:	42000404 	addi	r8,r8,16
   66860:	4a400404 	addi	r9,r9,16
   66864:	5ac00404 	addi	r11,r11,16
   66868:	52800404 	addi	r10,r10,16
   6686c:	413ff71e 	bne	r8,r4,6684c <__alt_data_end+0xfffe684c>
   66870:	63000044 	addi	r12,r12,1
   66874:	6018913a 	slli	r12,r12,4
   66878:	39c003cc 	andi	r7,r7,15
   6687c:	010000c4 	movi	r4,3
   66880:	1b07883a 	add	r3,r3,r12
   66884:	21c00e2e 	bgeu	r4,r7,668c0 <memset+0x100>
   66888:	1813883a 	mov	r9,r3
   6688c:	3811883a 	mov	r8,r7
   66890:	010000c4 	movi	r4,3
   66894:	49800015 	stw	r6,0(r9)
   66898:	423fff04 	addi	r8,r8,-4
   6689c:	4a400104 	addi	r9,r9,4
   668a0:	223ffc36 	bltu	r4,r8,66894 <__alt_data_end+0xfffe6894>
   668a4:	393fff04 	addi	r4,r7,-4
   668a8:	2008d0ba 	srli	r4,r4,2
   668ac:	39c000cc 	andi	r7,r7,3
   668b0:	21000044 	addi	r4,r4,1
   668b4:	2109883a 	add	r4,r4,r4
   668b8:	2109883a 	add	r4,r4,r4
   668bc:	1907883a 	add	r3,r3,r4
   668c0:	38000526 	beq	r7,zero,668d8 <memset+0x118>
   668c4:	19cf883a 	add	r7,r3,r7
   668c8:	19400005 	stb	r5,0(r3)
   668cc:	18c00044 	addi	r3,r3,1
   668d0:	38fffd1e 	bne	r7,r3,668c8 <__alt_data_end+0xfffe68c8>
   668d4:	f800283a 	ret
   668d8:	f800283a 	ret
   668dc:	2007883a 	mov	r3,r4
   668e0:	300f883a 	mov	r7,r6
   668e4:	003fc706 	br	66804 <__alt_data_end+0xfffe6804>

000668e8 <_Balloc>:
   668e8:	20801317 	ldw	r2,76(r4)
   668ec:	defffc04 	addi	sp,sp,-16
   668f0:	dc400115 	stw	r17,4(sp)
   668f4:	dc000015 	stw	r16,0(sp)
   668f8:	dfc00315 	stw	ra,12(sp)
   668fc:	dc800215 	stw	r18,8(sp)
   66900:	2023883a 	mov	r17,r4
   66904:	2821883a 	mov	r16,r5
   66908:	10000f26 	beq	r2,zero,66948 <_Balloc+0x60>
   6690c:	8407883a 	add	r3,r16,r16
   66910:	18c7883a 	add	r3,r3,r3
   66914:	10c7883a 	add	r3,r2,r3
   66918:	18800017 	ldw	r2,0(r3)
   6691c:	10001126 	beq	r2,zero,66964 <_Balloc+0x7c>
   66920:	11000017 	ldw	r4,0(r2)
   66924:	19000015 	stw	r4,0(r3)
   66928:	10000415 	stw	zero,16(r2)
   6692c:	10000315 	stw	zero,12(r2)
   66930:	dfc00317 	ldw	ra,12(sp)
   66934:	dc800217 	ldw	r18,8(sp)
   66938:	dc400117 	ldw	r17,4(sp)
   6693c:	dc000017 	ldw	r16,0(sp)
   66940:	dec00404 	addi	sp,sp,16
   66944:	f800283a 	ret
   66948:	01800844 	movi	r6,33
   6694c:	01400104 	movi	r5,4
   66950:	00699900 	call	69990 <_calloc_r>
   66954:	88801315 	stw	r2,76(r17)
   66958:	103fec1e 	bne	r2,zero,6690c <__alt_data_end+0xfffe690c>
   6695c:	0005883a 	mov	r2,zero
   66960:	003ff306 	br	66930 <__alt_data_end+0xfffe6930>
   66964:	01400044 	movi	r5,1
   66968:	2c24983a 	sll	r18,r5,r16
   6696c:	8809883a 	mov	r4,r17
   66970:	91800144 	addi	r6,r18,5
   66974:	318d883a 	add	r6,r6,r6
   66978:	318d883a 	add	r6,r6,r6
   6697c:	00699900 	call	69990 <_calloc_r>
   66980:	103ff626 	beq	r2,zero,6695c <__alt_data_end+0xfffe695c>
   66984:	14000115 	stw	r16,4(r2)
   66988:	14800215 	stw	r18,8(r2)
   6698c:	003fe606 	br	66928 <__alt_data_end+0xfffe6928>

00066990 <_Bfree>:
   66990:	28000826 	beq	r5,zero,669b4 <_Bfree+0x24>
   66994:	28c00117 	ldw	r3,4(r5)
   66998:	20801317 	ldw	r2,76(r4)
   6699c:	18c7883a 	add	r3,r3,r3
   669a0:	18c7883a 	add	r3,r3,r3
   669a4:	10c5883a 	add	r2,r2,r3
   669a8:	10c00017 	ldw	r3,0(r2)
   669ac:	28c00015 	stw	r3,0(r5)
   669b0:	11400015 	stw	r5,0(r2)
   669b4:	f800283a 	ret

000669b8 <__multadd>:
   669b8:	defff704 	addi	sp,sp,-36
   669bc:	dc800215 	stw	r18,8(sp)
   669c0:	2c800417 	ldw	r18,16(r5)
   669c4:	dd800615 	stw	r22,24(sp)
   669c8:	dd400515 	stw	r21,20(sp)
   669cc:	dd000415 	stw	r20,16(sp)
   669d0:	dcc00315 	stw	r19,12(sp)
   669d4:	dc400115 	stw	r17,4(sp)
   669d8:	dc000015 	stw	r16,0(sp)
   669dc:	dfc00815 	stw	ra,32(sp)
   669e0:	ddc00715 	stw	r23,28(sp)
   669e4:	2827883a 	mov	r19,r5
   669e8:	2029883a 	mov	r20,r4
   669ec:	3023883a 	mov	r17,r6
   669f0:	3821883a 	mov	r16,r7
   669f4:	2d400504 	addi	r21,r5,20
   669f8:	002d883a 	mov	r22,zero
   669fc:	adc00017 	ldw	r23,0(r21)
   66a00:	880b883a 	mov	r5,r17
   66a04:	ad400104 	addi	r21,r21,4
   66a08:	b93fffcc 	andi	r4,r23,65535
   66a0c:	00609000 	call	60900 <__mulsi3>
   66a10:	b808d43a 	srli	r4,r23,16
   66a14:	880b883a 	mov	r5,r17
   66a18:	1421883a 	add	r16,r2,r16
   66a1c:	00609000 	call	60900 <__mulsi3>
   66a20:	800ed43a 	srli	r7,r16,16
   66a24:	80ffffcc 	andi	r3,r16,65535
   66a28:	b5800044 	addi	r22,r22,1
   66a2c:	11c5883a 	add	r2,r2,r7
   66a30:	100e943a 	slli	r7,r2,16
   66a34:	1020d43a 	srli	r16,r2,16
   66a38:	38c7883a 	add	r3,r7,r3
   66a3c:	a8ffff15 	stw	r3,-4(r21)
   66a40:	b4bfee16 	blt	r22,r18,669fc <__alt_data_end+0xfffe69fc>
   66a44:	80000926 	beq	r16,zero,66a6c <__multadd+0xb4>
   66a48:	98800217 	ldw	r2,8(r19)
   66a4c:	9080130e 	bge	r18,r2,66a9c <__multadd+0xe4>
   66a50:	90800144 	addi	r2,r18,5
   66a54:	1085883a 	add	r2,r2,r2
   66a58:	1085883a 	add	r2,r2,r2
   66a5c:	9885883a 	add	r2,r19,r2
   66a60:	14000015 	stw	r16,0(r2)
   66a64:	94800044 	addi	r18,r18,1
   66a68:	9c800415 	stw	r18,16(r19)
   66a6c:	9805883a 	mov	r2,r19
   66a70:	dfc00817 	ldw	ra,32(sp)
   66a74:	ddc00717 	ldw	r23,28(sp)
   66a78:	dd800617 	ldw	r22,24(sp)
   66a7c:	dd400517 	ldw	r21,20(sp)
   66a80:	dd000417 	ldw	r20,16(sp)
   66a84:	dcc00317 	ldw	r19,12(sp)
   66a88:	dc800217 	ldw	r18,8(sp)
   66a8c:	dc400117 	ldw	r17,4(sp)
   66a90:	dc000017 	ldw	r16,0(sp)
   66a94:	dec00904 	addi	sp,sp,36
   66a98:	f800283a 	ret
   66a9c:	99400117 	ldw	r5,4(r19)
   66aa0:	a009883a 	mov	r4,r20
   66aa4:	29400044 	addi	r5,r5,1
   66aa8:	00668e80 	call	668e8 <_Balloc>
   66aac:	99800417 	ldw	r6,16(r19)
   66ab0:	99400304 	addi	r5,r19,12
   66ab4:	11000304 	addi	r4,r2,12
   66ab8:	31800084 	addi	r6,r6,2
   66abc:	318d883a 	add	r6,r6,r6
   66ac0:	318d883a 	add	r6,r6,r6
   66ac4:	1023883a 	mov	r17,r2
   66ac8:	00609280 	call	60928 <memcpy>
   66acc:	98000a26 	beq	r19,zero,66af8 <__multadd+0x140>
   66ad0:	98c00117 	ldw	r3,4(r19)
   66ad4:	a0801317 	ldw	r2,76(r20)
   66ad8:	18c7883a 	add	r3,r3,r3
   66adc:	18c7883a 	add	r3,r3,r3
   66ae0:	10c5883a 	add	r2,r2,r3
   66ae4:	10c00017 	ldw	r3,0(r2)
   66ae8:	98c00015 	stw	r3,0(r19)
   66aec:	14c00015 	stw	r19,0(r2)
   66af0:	8827883a 	mov	r19,r17
   66af4:	003fd606 	br	66a50 <__alt_data_end+0xfffe6a50>
   66af8:	8827883a 	mov	r19,r17
   66afc:	003fd406 	br	66a50 <__alt_data_end+0xfffe6a50>

00066b00 <__s2b>:
   66b00:	defff904 	addi	sp,sp,-28
   66b04:	dc400115 	stw	r17,4(sp)
   66b08:	dc000015 	stw	r16,0(sp)
   66b0c:	2023883a 	mov	r17,r4
   66b10:	2821883a 	mov	r16,r5
   66b14:	39000204 	addi	r4,r7,8
   66b18:	01400244 	movi	r5,9
   66b1c:	dcc00315 	stw	r19,12(sp)
   66b20:	dc800215 	stw	r18,8(sp)
   66b24:	dfc00615 	stw	ra,24(sp)
   66b28:	dd400515 	stw	r21,20(sp)
   66b2c:	dd000415 	stw	r20,16(sp)
   66b30:	3825883a 	mov	r18,r7
   66b34:	3027883a 	mov	r19,r6
   66b38:	006ade80 	call	6ade8 <__divsi3>
   66b3c:	00c00044 	movi	r3,1
   66b40:	000b883a 	mov	r5,zero
   66b44:	1880030e 	bge	r3,r2,66b54 <__s2b+0x54>
   66b48:	18c7883a 	add	r3,r3,r3
   66b4c:	29400044 	addi	r5,r5,1
   66b50:	18bffd16 	blt	r3,r2,66b48 <__alt_data_end+0xfffe6b48>
   66b54:	8809883a 	mov	r4,r17
   66b58:	00668e80 	call	668e8 <_Balloc>
   66b5c:	d8c00717 	ldw	r3,28(sp)
   66b60:	10c00515 	stw	r3,20(r2)
   66b64:	00c00044 	movi	r3,1
   66b68:	10c00415 	stw	r3,16(r2)
   66b6c:	00c00244 	movi	r3,9
   66b70:	1cc0210e 	bge	r3,r19,66bf8 <__s2b+0xf8>
   66b74:	80eb883a 	add	r21,r16,r3
   66b78:	a829883a 	mov	r20,r21
   66b7c:	84e1883a 	add	r16,r16,r19
   66b80:	a1c00007 	ldb	r7,0(r20)
   66b84:	01800284 	movi	r6,10
   66b88:	a5000044 	addi	r20,r20,1
   66b8c:	100b883a 	mov	r5,r2
   66b90:	39fff404 	addi	r7,r7,-48
   66b94:	8809883a 	mov	r4,r17
   66b98:	00669b80 	call	669b8 <__multadd>
   66b9c:	a43ff81e 	bne	r20,r16,66b80 <__alt_data_end+0xfffe6b80>
   66ba0:	ace1883a 	add	r16,r21,r19
   66ba4:	843ffe04 	addi	r16,r16,-8
   66ba8:	9c800a0e 	bge	r19,r18,66bd4 <__s2b+0xd4>
   66bac:	94e5c83a 	sub	r18,r18,r19
   66bb0:	84a5883a 	add	r18,r16,r18
   66bb4:	81c00007 	ldb	r7,0(r16)
   66bb8:	01800284 	movi	r6,10
   66bbc:	84000044 	addi	r16,r16,1
   66bc0:	100b883a 	mov	r5,r2
   66bc4:	39fff404 	addi	r7,r7,-48
   66bc8:	8809883a 	mov	r4,r17
   66bcc:	00669b80 	call	669b8 <__multadd>
   66bd0:	84bff81e 	bne	r16,r18,66bb4 <__alt_data_end+0xfffe6bb4>
   66bd4:	dfc00617 	ldw	ra,24(sp)
   66bd8:	dd400517 	ldw	r21,20(sp)
   66bdc:	dd000417 	ldw	r20,16(sp)
   66be0:	dcc00317 	ldw	r19,12(sp)
   66be4:	dc800217 	ldw	r18,8(sp)
   66be8:	dc400117 	ldw	r17,4(sp)
   66bec:	dc000017 	ldw	r16,0(sp)
   66bf0:	dec00704 	addi	sp,sp,28
   66bf4:	f800283a 	ret
   66bf8:	84000284 	addi	r16,r16,10
   66bfc:	1827883a 	mov	r19,r3
   66c00:	003fe906 	br	66ba8 <__alt_data_end+0xfffe6ba8>

00066c04 <__hi0bits>:
   66c04:	20bfffec 	andhi	r2,r4,65535
   66c08:	1000141e 	bne	r2,zero,66c5c <__hi0bits+0x58>
   66c0c:	2008943a 	slli	r4,r4,16
   66c10:	00800404 	movi	r2,16
   66c14:	20ffc02c 	andhi	r3,r4,65280
   66c18:	1800021e 	bne	r3,zero,66c24 <__hi0bits+0x20>
   66c1c:	2008923a 	slli	r4,r4,8
   66c20:	10800204 	addi	r2,r2,8
   66c24:	20fc002c 	andhi	r3,r4,61440
   66c28:	1800021e 	bne	r3,zero,66c34 <__hi0bits+0x30>
   66c2c:	2008913a 	slli	r4,r4,4
   66c30:	10800104 	addi	r2,r2,4
   66c34:	20f0002c 	andhi	r3,r4,49152
   66c38:	1800031e 	bne	r3,zero,66c48 <__hi0bits+0x44>
   66c3c:	2109883a 	add	r4,r4,r4
   66c40:	10800084 	addi	r2,r2,2
   66c44:	2109883a 	add	r4,r4,r4
   66c48:	20000316 	blt	r4,zero,66c58 <__hi0bits+0x54>
   66c4c:	2110002c 	andhi	r4,r4,16384
   66c50:	2000041e 	bne	r4,zero,66c64 <__hi0bits+0x60>
   66c54:	00800804 	movi	r2,32
   66c58:	f800283a 	ret
   66c5c:	0005883a 	mov	r2,zero
   66c60:	003fec06 	br	66c14 <__alt_data_end+0xfffe6c14>
   66c64:	10800044 	addi	r2,r2,1
   66c68:	f800283a 	ret

00066c6c <__lo0bits>:
   66c6c:	20c00017 	ldw	r3,0(r4)
   66c70:	188001cc 	andi	r2,r3,7
   66c74:	10000826 	beq	r2,zero,66c98 <__lo0bits+0x2c>
   66c78:	1880004c 	andi	r2,r3,1
   66c7c:	1000211e 	bne	r2,zero,66d04 <__lo0bits+0x98>
   66c80:	1880008c 	andi	r2,r3,2
   66c84:	1000211e 	bne	r2,zero,66d0c <__lo0bits+0xa0>
   66c88:	1806d0ba 	srli	r3,r3,2
   66c8c:	00800084 	movi	r2,2
   66c90:	20c00015 	stw	r3,0(r4)
   66c94:	f800283a 	ret
   66c98:	18bfffcc 	andi	r2,r3,65535
   66c9c:	10001326 	beq	r2,zero,66cec <__lo0bits+0x80>
   66ca0:	0005883a 	mov	r2,zero
   66ca4:	19403fcc 	andi	r5,r3,255
   66ca8:	2800021e 	bne	r5,zero,66cb4 <__lo0bits+0x48>
   66cac:	1806d23a 	srli	r3,r3,8
   66cb0:	10800204 	addi	r2,r2,8
   66cb4:	194003cc 	andi	r5,r3,15
   66cb8:	2800021e 	bne	r5,zero,66cc4 <__lo0bits+0x58>
   66cbc:	1806d13a 	srli	r3,r3,4
   66cc0:	10800104 	addi	r2,r2,4
   66cc4:	194000cc 	andi	r5,r3,3
   66cc8:	2800021e 	bne	r5,zero,66cd4 <__lo0bits+0x68>
   66ccc:	1806d0ba 	srli	r3,r3,2
   66cd0:	10800084 	addi	r2,r2,2
   66cd4:	1940004c 	andi	r5,r3,1
   66cd8:	2800081e 	bne	r5,zero,66cfc <__lo0bits+0x90>
   66cdc:	1806d07a 	srli	r3,r3,1
   66ce0:	1800051e 	bne	r3,zero,66cf8 <__lo0bits+0x8c>
   66ce4:	00800804 	movi	r2,32
   66ce8:	f800283a 	ret
   66cec:	1806d43a 	srli	r3,r3,16
   66cf0:	00800404 	movi	r2,16
   66cf4:	003feb06 	br	66ca4 <__alt_data_end+0xfffe6ca4>
   66cf8:	10800044 	addi	r2,r2,1
   66cfc:	20c00015 	stw	r3,0(r4)
   66d00:	f800283a 	ret
   66d04:	0005883a 	mov	r2,zero
   66d08:	f800283a 	ret
   66d0c:	1806d07a 	srli	r3,r3,1
   66d10:	00800044 	movi	r2,1
   66d14:	20c00015 	stw	r3,0(r4)
   66d18:	f800283a 	ret

00066d1c <__i2b>:
   66d1c:	defffd04 	addi	sp,sp,-12
   66d20:	dc000015 	stw	r16,0(sp)
   66d24:	04000044 	movi	r16,1
   66d28:	dc400115 	stw	r17,4(sp)
   66d2c:	2823883a 	mov	r17,r5
   66d30:	800b883a 	mov	r5,r16
   66d34:	dfc00215 	stw	ra,8(sp)
   66d38:	00668e80 	call	668e8 <_Balloc>
   66d3c:	14400515 	stw	r17,20(r2)
   66d40:	14000415 	stw	r16,16(r2)
   66d44:	dfc00217 	ldw	ra,8(sp)
   66d48:	dc400117 	ldw	r17,4(sp)
   66d4c:	dc000017 	ldw	r16,0(sp)
   66d50:	dec00304 	addi	sp,sp,12
   66d54:	f800283a 	ret

00066d58 <__multiply>:
   66d58:	deffef04 	addi	sp,sp,-68
   66d5c:	dc400815 	stw	r17,32(sp)
   66d60:	dc000715 	stw	r16,28(sp)
   66d64:	34400417 	ldw	r17,16(r6)
   66d68:	2c000417 	ldw	r16,16(r5)
   66d6c:	dd800d15 	stw	r22,52(sp)
   66d70:	dc800915 	stw	r18,36(sp)
   66d74:	dfc01015 	stw	ra,64(sp)
   66d78:	df000f15 	stw	fp,60(sp)
   66d7c:	ddc00e15 	stw	r23,56(sp)
   66d80:	dd400c15 	stw	r21,48(sp)
   66d84:	dd000b15 	stw	r20,44(sp)
   66d88:	dcc00a15 	stw	r19,40(sp)
   66d8c:	2825883a 	mov	r18,r5
   66d90:	302d883a 	mov	r22,r6
   66d94:	8440050e 	bge	r16,r17,66dac <__multiply+0x54>
   66d98:	8007883a 	mov	r3,r16
   66d9c:	3025883a 	mov	r18,r6
   66da0:	8821883a 	mov	r16,r17
   66da4:	282d883a 	mov	r22,r5
   66da8:	1823883a 	mov	r17,r3
   66dac:	90800217 	ldw	r2,8(r18)
   66db0:	8447883a 	add	r3,r16,r17
   66db4:	d8c00215 	stw	r3,8(sp)
   66db8:	91400117 	ldw	r5,4(r18)
   66dbc:	10c0010e 	bge	r2,r3,66dc4 <__multiply+0x6c>
   66dc0:	29400044 	addi	r5,r5,1
   66dc4:	00668e80 	call	668e8 <_Balloc>
   66dc8:	d8c00217 	ldw	r3,8(sp)
   66dcc:	d8800615 	stw	r2,24(sp)
   66dd0:	18eb883a 	add	r21,r3,r3
   66dd4:	ad6b883a 	add	r21,r21,r21
   66dd8:	10c00504 	addi	r3,r2,20
   66ddc:	1d6b883a 	add	r21,r3,r21
   66de0:	d8c00115 	stw	r3,4(sp)
   66de4:	dd400315 	stw	r21,12(sp)
   66de8:	1805883a 	mov	r2,r3
   66dec:	1d40042e 	bgeu	r3,r21,66e00 <__multiply+0xa8>
   66df0:	d8c00317 	ldw	r3,12(sp)
   66df4:	10000015 	stw	zero,0(r2)
   66df8:	10800104 	addi	r2,r2,4
   66dfc:	10fffc36 	bltu	r2,r3,66df0 <__alt_data_end+0xfffe6df0>
   66e00:	8c63883a 	add	r17,r17,r17
   66e04:	b5800504 	addi	r22,r22,20
   66e08:	8c63883a 	add	r17,r17,r17
   66e0c:	94800504 	addi	r18,r18,20
   66e10:	8421883a 	add	r16,r16,r16
   66e14:	b463883a 	add	r17,r22,r17
   66e18:	8421883a 	add	r16,r16,r16
   66e1c:	dd800015 	stw	r22,0(sp)
   66e20:	dc800415 	stw	r18,16(sp)
   66e24:	dc400515 	stw	r17,20(sp)
   66e28:	9429883a 	add	r20,r18,r16
   66e2c:	b4404f2e 	bgeu	r22,r17,66f6c <__multiply+0x214>
   66e30:	d8c00017 	ldw	r3,0(sp)
   66e34:	1c800017 	ldw	r18,0(r3)
   66e38:	947fffcc 	andi	r17,r18,65535
   66e3c:	88001e26 	beq	r17,zero,66eb8 <__multiply+0x160>
   66e40:	dd800117 	ldw	r22,4(sp)
   66e44:	dd400417 	ldw	r21,16(sp)
   66e48:	0027883a 	mov	r19,zero
   66e4c:	ac800017 	ldw	r18,0(r21)
   66e50:	b4000017 	ldw	r16,0(r22)
   66e54:	880b883a 	mov	r5,r17
   66e58:	913fffcc 	andi	r4,r18,65535
   66e5c:	00609000 	call	60900 <__mulsi3>
   66e60:	9008d43a 	srli	r4,r18,16
   66e64:	84bfffcc 	andi	r18,r16,65535
   66e68:	1485883a 	add	r2,r2,r18
   66e6c:	14e5883a 	add	r18,r2,r19
   66e70:	8020d43a 	srli	r16,r16,16
   66e74:	9026d43a 	srli	r19,r18,16
   66e78:	880b883a 	mov	r5,r17
   66e7c:	00609000 	call	60900 <__mulsi3>
   66e80:	1405883a 	add	r2,r2,r16
   66e84:	14e1883a 	add	r16,r2,r19
   66e88:	90ffffcc 	andi	r3,r18,65535
   66e8c:	8024943a 	slli	r18,r16,16
   66e90:	ad400104 	addi	r21,r21,4
   66e94:	b005883a 	mov	r2,r22
   66e98:	90c6b03a 	or	r3,r18,r3
   66e9c:	b0c00015 	stw	r3,0(r22)
   66ea0:	8026d43a 	srli	r19,r16,16
   66ea4:	b5800104 	addi	r22,r22,4
   66ea8:	ad3fe836 	bltu	r21,r20,66e4c <__alt_data_end+0xfffe6e4c>
   66eac:	d8c00017 	ldw	r3,0(sp)
   66eb0:	14c00115 	stw	r19,4(r2)
   66eb4:	1c800017 	ldw	r18,0(r3)
   66eb8:	9024d43a 	srli	r18,r18,16
   66ebc:	90002226 	beq	r18,zero,66f48 <__multiply+0x1f0>
   66ec0:	d8c00117 	ldw	r3,4(sp)
   66ec4:	dd800417 	ldw	r22,16(sp)
   66ec8:	002f883a 	mov	r23,zero
   66ecc:	1f000017 	ldw	fp,0(r3)
   66ed0:	1823883a 	mov	r17,r3
   66ed4:	182b883a 	mov	r21,r3
   66ed8:	e021883a 	mov	r16,fp
   66edc:	00000106 	br	66ee4 <__multiply+0x18c>
   66ee0:	982b883a 	mov	r21,r19
   66ee4:	b100000b 	ldhu	r4,0(r22)
   66ee8:	8020d43a 	srli	r16,r16,16
   66eec:	900b883a 	mov	r5,r18
   66ef0:	00609000 	call	60900 <__mulsi3>
   66ef4:	1405883a 	add	r2,r2,r16
   66ef8:	15ef883a 	add	r23,r2,r23
   66efc:	b804943a 	slli	r2,r23,16
   66f00:	e0ffffcc 	andi	r3,fp,65535
   66f04:	8c400104 	addi	r17,r17,4
   66f08:	10c6b03a 	or	r3,r2,r3
   66f0c:	88ffff15 	stw	r3,-4(r17)
   66f10:	b5800104 	addi	r22,r22,4
   66f14:	b13fff17 	ldw	r4,-4(r22)
   66f18:	acc00104 	addi	r19,r21,4
   66f1c:	900b883a 	mov	r5,r18
   66f20:	2008d43a 	srli	r4,r4,16
   66f24:	9c000017 	ldw	r16,0(r19)
   66f28:	00609000 	call	60900 <__mulsi3>
   66f2c:	b806d43a 	srli	r3,r23,16
   66f30:	813fffcc 	andi	r4,r16,65535
   66f34:	1105883a 	add	r2,r2,r4
   66f38:	10f9883a 	add	fp,r2,r3
   66f3c:	e02ed43a 	srli	r23,fp,16
   66f40:	b53fe736 	bltu	r22,r20,66ee0 <__alt_data_end+0xfffe6ee0>
   66f44:	af000115 	stw	fp,4(r21)
   66f48:	d8c00017 	ldw	r3,0(sp)
   66f4c:	d9000517 	ldw	r4,20(sp)
   66f50:	18c00104 	addi	r3,r3,4
   66f54:	d8c00015 	stw	r3,0(sp)
   66f58:	d8c00117 	ldw	r3,4(sp)
   66f5c:	18c00104 	addi	r3,r3,4
   66f60:	d8c00115 	stw	r3,4(sp)
   66f64:	d8c00017 	ldw	r3,0(sp)
   66f68:	193fb136 	bltu	r3,r4,66e30 <__alt_data_end+0xfffe6e30>
   66f6c:	d8c00217 	ldw	r3,8(sp)
   66f70:	00c00c0e 	bge	zero,r3,66fa4 <__multiply+0x24c>
   66f74:	d8c00317 	ldw	r3,12(sp)
   66f78:	18bfff17 	ldw	r2,-4(r3)
   66f7c:	1d7fff04 	addi	r21,r3,-4
   66f80:	10000326 	beq	r2,zero,66f90 <__multiply+0x238>
   66f84:	00000706 	br	66fa4 <__multiply+0x24c>
   66f88:	a8800017 	ldw	r2,0(r21)
   66f8c:	1000051e 	bne	r2,zero,66fa4 <__multiply+0x24c>
   66f90:	d8c00217 	ldw	r3,8(sp)
   66f94:	ad7fff04 	addi	r21,r21,-4
   66f98:	18ffffc4 	addi	r3,r3,-1
   66f9c:	d8c00215 	stw	r3,8(sp)
   66fa0:	183ff91e 	bne	r3,zero,66f88 <__alt_data_end+0xfffe6f88>
   66fa4:	d8c00617 	ldw	r3,24(sp)
   66fa8:	d9000217 	ldw	r4,8(sp)
   66fac:	1805883a 	mov	r2,r3
   66fb0:	19000415 	stw	r4,16(r3)
   66fb4:	dfc01017 	ldw	ra,64(sp)
   66fb8:	df000f17 	ldw	fp,60(sp)
   66fbc:	ddc00e17 	ldw	r23,56(sp)
   66fc0:	dd800d17 	ldw	r22,52(sp)
   66fc4:	dd400c17 	ldw	r21,48(sp)
   66fc8:	dd000b17 	ldw	r20,44(sp)
   66fcc:	dcc00a17 	ldw	r19,40(sp)
   66fd0:	dc800917 	ldw	r18,36(sp)
   66fd4:	dc400817 	ldw	r17,32(sp)
   66fd8:	dc000717 	ldw	r16,28(sp)
   66fdc:	dec01104 	addi	sp,sp,68
   66fe0:	f800283a 	ret

00066fe4 <__pow5mult>:
   66fe4:	defffa04 	addi	sp,sp,-24
   66fe8:	dcc00315 	stw	r19,12(sp)
   66fec:	dc000015 	stw	r16,0(sp)
   66ff0:	dfc00515 	stw	ra,20(sp)
   66ff4:	dd000415 	stw	r20,16(sp)
   66ff8:	dc800215 	stw	r18,8(sp)
   66ffc:	dc400115 	stw	r17,4(sp)
   67000:	308000cc 	andi	r2,r6,3
   67004:	3021883a 	mov	r16,r6
   67008:	2027883a 	mov	r19,r4
   6700c:	10002f1e 	bne	r2,zero,670cc <__pow5mult+0xe8>
   67010:	2825883a 	mov	r18,r5
   67014:	8021d0ba 	srai	r16,r16,2
   67018:	80001a26 	beq	r16,zero,67084 <__pow5mult+0xa0>
   6701c:	9c401217 	ldw	r17,72(r19)
   67020:	8800061e 	bne	r17,zero,6703c <__pow5mult+0x58>
   67024:	00003406 	br	670f8 <__pow5mult+0x114>
   67028:	8021d07a 	srai	r16,r16,1
   6702c:	80001526 	beq	r16,zero,67084 <__pow5mult+0xa0>
   67030:	88800017 	ldw	r2,0(r17)
   67034:	10001c26 	beq	r2,zero,670a8 <__pow5mult+0xc4>
   67038:	1023883a 	mov	r17,r2
   6703c:	8080004c 	andi	r2,r16,1
   67040:	103ff926 	beq	r2,zero,67028 <__alt_data_end+0xfffe7028>
   67044:	880d883a 	mov	r6,r17
   67048:	900b883a 	mov	r5,r18
   6704c:	9809883a 	mov	r4,r19
   67050:	0066d580 	call	66d58 <__multiply>
   67054:	90001b26 	beq	r18,zero,670c4 <__pow5mult+0xe0>
   67058:	91000117 	ldw	r4,4(r18)
   6705c:	98c01317 	ldw	r3,76(r19)
   67060:	8021d07a 	srai	r16,r16,1
   67064:	2109883a 	add	r4,r4,r4
   67068:	2109883a 	add	r4,r4,r4
   6706c:	1907883a 	add	r3,r3,r4
   67070:	19000017 	ldw	r4,0(r3)
   67074:	91000015 	stw	r4,0(r18)
   67078:	1c800015 	stw	r18,0(r3)
   6707c:	1025883a 	mov	r18,r2
   67080:	803feb1e 	bne	r16,zero,67030 <__alt_data_end+0xfffe7030>
   67084:	9005883a 	mov	r2,r18
   67088:	dfc00517 	ldw	ra,20(sp)
   6708c:	dd000417 	ldw	r20,16(sp)
   67090:	dcc00317 	ldw	r19,12(sp)
   67094:	dc800217 	ldw	r18,8(sp)
   67098:	dc400117 	ldw	r17,4(sp)
   6709c:	dc000017 	ldw	r16,0(sp)
   670a0:	dec00604 	addi	sp,sp,24
   670a4:	f800283a 	ret
   670a8:	880d883a 	mov	r6,r17
   670ac:	880b883a 	mov	r5,r17
   670b0:	9809883a 	mov	r4,r19
   670b4:	0066d580 	call	66d58 <__multiply>
   670b8:	88800015 	stw	r2,0(r17)
   670bc:	10000015 	stw	zero,0(r2)
   670c0:	003fdd06 	br	67038 <__alt_data_end+0xfffe7038>
   670c4:	1025883a 	mov	r18,r2
   670c8:	003fd706 	br	67028 <__alt_data_end+0xfffe7028>
   670cc:	10bfffc4 	addi	r2,r2,-1
   670d0:	1085883a 	add	r2,r2,r2
   670d4:	00c001f4 	movhi	r3,7
   670d8:	18c19704 	addi	r3,r3,1628
   670dc:	1085883a 	add	r2,r2,r2
   670e0:	1885883a 	add	r2,r3,r2
   670e4:	11800017 	ldw	r6,0(r2)
   670e8:	000f883a 	mov	r7,zero
   670ec:	00669b80 	call	669b8 <__multadd>
   670f0:	1025883a 	mov	r18,r2
   670f4:	003fc706 	br	67014 <__alt_data_end+0xfffe7014>
   670f8:	05000044 	movi	r20,1
   670fc:	a00b883a 	mov	r5,r20
   67100:	9809883a 	mov	r4,r19
   67104:	00668e80 	call	668e8 <_Balloc>
   67108:	1023883a 	mov	r17,r2
   6710c:	00809c44 	movi	r2,625
   67110:	88800515 	stw	r2,20(r17)
   67114:	8d000415 	stw	r20,16(r17)
   67118:	9c401215 	stw	r17,72(r19)
   6711c:	88000015 	stw	zero,0(r17)
   67120:	003fc606 	br	6703c <__alt_data_end+0xfffe703c>

00067124 <__lshift>:
   67124:	defff904 	addi	sp,sp,-28
   67128:	dd400515 	stw	r21,20(sp)
   6712c:	dcc00315 	stw	r19,12(sp)
   67130:	302bd17a 	srai	r21,r6,5
   67134:	2cc00417 	ldw	r19,16(r5)
   67138:	28800217 	ldw	r2,8(r5)
   6713c:	dd000415 	stw	r20,16(sp)
   67140:	ace7883a 	add	r19,r21,r19
   67144:	dc800215 	stw	r18,8(sp)
   67148:	dc400115 	stw	r17,4(sp)
   6714c:	dc000015 	stw	r16,0(sp)
   67150:	dfc00615 	stw	ra,24(sp)
   67154:	9c000044 	addi	r16,r19,1
   67158:	2823883a 	mov	r17,r5
   6715c:	3029883a 	mov	r20,r6
   67160:	2025883a 	mov	r18,r4
   67164:	29400117 	ldw	r5,4(r5)
   67168:	1400030e 	bge	r2,r16,67178 <__lshift+0x54>
   6716c:	1085883a 	add	r2,r2,r2
   67170:	29400044 	addi	r5,r5,1
   67174:	143ffd16 	blt	r2,r16,6716c <__alt_data_end+0xfffe716c>
   67178:	9009883a 	mov	r4,r18
   6717c:	00668e80 	call	668e8 <_Balloc>
   67180:	10c00504 	addi	r3,r2,20
   67184:	0540070e 	bge	zero,r21,671a4 <__lshift+0x80>
   67188:	ad6b883a 	add	r21,r21,r21
   6718c:	ad6b883a 	add	r21,r21,r21
   67190:	1809883a 	mov	r4,r3
   67194:	1d47883a 	add	r3,r3,r21
   67198:	20000015 	stw	zero,0(r4)
   6719c:	21000104 	addi	r4,r4,4
   671a0:	193ffd1e 	bne	r3,r4,67198 <__alt_data_end+0xfffe7198>
   671a4:	8a000417 	ldw	r8,16(r17)
   671a8:	89000504 	addi	r4,r17,20
   671ac:	a18007cc 	andi	r6,r20,31
   671b0:	4211883a 	add	r8,r8,r8
   671b4:	4211883a 	add	r8,r8,r8
   671b8:	2211883a 	add	r8,r4,r8
   671bc:	30002326 	beq	r6,zero,6724c <__lshift+0x128>
   671c0:	02400804 	movi	r9,32
   671c4:	4993c83a 	sub	r9,r9,r6
   671c8:	000b883a 	mov	r5,zero
   671cc:	21c00017 	ldw	r7,0(r4)
   671d0:	1815883a 	mov	r10,r3
   671d4:	18c00104 	addi	r3,r3,4
   671d8:	398e983a 	sll	r7,r7,r6
   671dc:	21000104 	addi	r4,r4,4
   671e0:	394ab03a 	or	r5,r7,r5
   671e4:	197fff15 	stw	r5,-4(r3)
   671e8:	217fff17 	ldw	r5,-4(r4)
   671ec:	2a4ad83a 	srl	r5,r5,r9
   671f0:	223ff636 	bltu	r4,r8,671cc <__alt_data_end+0xfffe71cc>
   671f4:	51400115 	stw	r5,4(r10)
   671f8:	28001a1e 	bne	r5,zero,67264 <__lshift+0x140>
   671fc:	843fffc4 	addi	r16,r16,-1
   67200:	14000415 	stw	r16,16(r2)
   67204:	88000826 	beq	r17,zero,67228 <__lshift+0x104>
   67208:	89000117 	ldw	r4,4(r17)
   6720c:	90c01317 	ldw	r3,76(r18)
   67210:	2109883a 	add	r4,r4,r4
   67214:	2109883a 	add	r4,r4,r4
   67218:	1907883a 	add	r3,r3,r4
   6721c:	19000017 	ldw	r4,0(r3)
   67220:	89000015 	stw	r4,0(r17)
   67224:	1c400015 	stw	r17,0(r3)
   67228:	dfc00617 	ldw	ra,24(sp)
   6722c:	dd400517 	ldw	r21,20(sp)
   67230:	dd000417 	ldw	r20,16(sp)
   67234:	dcc00317 	ldw	r19,12(sp)
   67238:	dc800217 	ldw	r18,8(sp)
   6723c:	dc400117 	ldw	r17,4(sp)
   67240:	dc000017 	ldw	r16,0(sp)
   67244:	dec00704 	addi	sp,sp,28
   67248:	f800283a 	ret
   6724c:	21400017 	ldw	r5,0(r4)
   67250:	18c00104 	addi	r3,r3,4
   67254:	21000104 	addi	r4,r4,4
   67258:	197fff15 	stw	r5,-4(r3)
   6725c:	223ffb36 	bltu	r4,r8,6724c <__alt_data_end+0xfffe724c>
   67260:	003fe606 	br	671fc <__alt_data_end+0xfffe71fc>
   67264:	9c000084 	addi	r16,r19,2
   67268:	003fe406 	br	671fc <__alt_data_end+0xfffe71fc>

0006726c <__mcmp>:
   6726c:	20800417 	ldw	r2,16(r4)
   67270:	28c00417 	ldw	r3,16(r5)
   67274:	10c5c83a 	sub	r2,r2,r3
   67278:	1000111e 	bne	r2,zero,672c0 <__mcmp+0x54>
   6727c:	18c7883a 	add	r3,r3,r3
   67280:	18c7883a 	add	r3,r3,r3
   67284:	21000504 	addi	r4,r4,20
   67288:	29400504 	addi	r5,r5,20
   6728c:	20c5883a 	add	r2,r4,r3
   67290:	28cb883a 	add	r5,r5,r3
   67294:	00000106 	br	6729c <__mcmp+0x30>
   67298:	20800a2e 	bgeu	r4,r2,672c4 <__mcmp+0x58>
   6729c:	10bfff04 	addi	r2,r2,-4
   672a0:	297fff04 	addi	r5,r5,-4
   672a4:	11800017 	ldw	r6,0(r2)
   672a8:	28c00017 	ldw	r3,0(r5)
   672ac:	30fffa26 	beq	r6,r3,67298 <__alt_data_end+0xfffe7298>
   672b0:	30c00236 	bltu	r6,r3,672bc <__mcmp+0x50>
   672b4:	00800044 	movi	r2,1
   672b8:	f800283a 	ret
   672bc:	00bfffc4 	movi	r2,-1
   672c0:	f800283a 	ret
   672c4:	0005883a 	mov	r2,zero
   672c8:	f800283a 	ret

000672cc <__mdiff>:
   672cc:	28c00417 	ldw	r3,16(r5)
   672d0:	30800417 	ldw	r2,16(r6)
   672d4:	defffa04 	addi	sp,sp,-24
   672d8:	dcc00315 	stw	r19,12(sp)
   672dc:	dc800215 	stw	r18,8(sp)
   672e0:	dfc00515 	stw	ra,20(sp)
   672e4:	dd000415 	stw	r20,16(sp)
   672e8:	dc400115 	stw	r17,4(sp)
   672ec:	dc000015 	stw	r16,0(sp)
   672f0:	1887c83a 	sub	r3,r3,r2
   672f4:	2825883a 	mov	r18,r5
   672f8:	3027883a 	mov	r19,r6
   672fc:	1800141e 	bne	r3,zero,67350 <__mdiff+0x84>
   67300:	1085883a 	add	r2,r2,r2
   67304:	1085883a 	add	r2,r2,r2
   67308:	2a000504 	addi	r8,r5,20
   6730c:	34000504 	addi	r16,r6,20
   67310:	4087883a 	add	r3,r8,r2
   67314:	8085883a 	add	r2,r16,r2
   67318:	00000106 	br	67320 <__mdiff+0x54>
   6731c:	40c0592e 	bgeu	r8,r3,67484 <__mdiff+0x1b8>
   67320:	18ffff04 	addi	r3,r3,-4
   67324:	10bfff04 	addi	r2,r2,-4
   67328:	19c00017 	ldw	r7,0(r3)
   6732c:	11400017 	ldw	r5,0(r2)
   67330:	397ffa26 	beq	r7,r5,6731c <__alt_data_end+0xfffe731c>
   67334:	3940592e 	bgeu	r7,r5,6749c <__mdiff+0x1d0>
   67338:	9005883a 	mov	r2,r18
   6733c:	4023883a 	mov	r17,r8
   67340:	9825883a 	mov	r18,r19
   67344:	05000044 	movi	r20,1
   67348:	1027883a 	mov	r19,r2
   6734c:	00000406 	br	67360 <__mdiff+0x94>
   67350:	18005616 	blt	r3,zero,674ac <__mdiff+0x1e0>
   67354:	34400504 	addi	r17,r6,20
   67358:	2c000504 	addi	r16,r5,20
   6735c:	0029883a 	mov	r20,zero
   67360:	91400117 	ldw	r5,4(r18)
   67364:	00668e80 	call	668e8 <_Balloc>
   67368:	92400417 	ldw	r9,16(r18)
   6736c:	9b000417 	ldw	r12,16(r19)
   67370:	12c00504 	addi	r11,r2,20
   67374:	4a51883a 	add	r8,r9,r9
   67378:	6319883a 	add	r12,r12,r12
   6737c:	4211883a 	add	r8,r8,r8
   67380:	6319883a 	add	r12,r12,r12
   67384:	15000315 	stw	r20,12(r2)
   67388:	8211883a 	add	r8,r16,r8
   6738c:	8b19883a 	add	r12,r17,r12
   67390:	0007883a 	mov	r3,zero
   67394:	81400017 	ldw	r5,0(r16)
   67398:	89c00017 	ldw	r7,0(r17)
   6739c:	59800104 	addi	r6,r11,4
   673a0:	293fffcc 	andi	r4,r5,65535
   673a4:	20c7883a 	add	r3,r4,r3
   673a8:	393fffcc 	andi	r4,r7,65535
   673ac:	1909c83a 	sub	r4,r3,r4
   673b0:	280ad43a 	srli	r5,r5,16
   673b4:	380ed43a 	srli	r7,r7,16
   673b8:	2007d43a 	srai	r3,r4,16
   673bc:	213fffcc 	andi	r4,r4,65535
   673c0:	29cbc83a 	sub	r5,r5,r7
   673c4:	28c7883a 	add	r3,r5,r3
   673c8:	180a943a 	slli	r5,r3,16
   673cc:	8c400104 	addi	r17,r17,4
   673d0:	84000104 	addi	r16,r16,4
   673d4:	2908b03a 	or	r4,r5,r4
   673d8:	59000015 	stw	r4,0(r11)
   673dc:	1807d43a 	srai	r3,r3,16
   673e0:	3015883a 	mov	r10,r6
   673e4:	3017883a 	mov	r11,r6
   673e8:	8b3fea36 	bltu	r17,r12,67394 <__alt_data_end+0xfffe7394>
   673ec:	8200162e 	bgeu	r16,r8,67448 <__mdiff+0x17c>
   673f0:	8017883a 	mov	r11,r16
   673f4:	59400017 	ldw	r5,0(r11)
   673f8:	31800104 	addi	r6,r6,4
   673fc:	5ac00104 	addi	r11,r11,4
   67400:	293fffcc 	andi	r4,r5,65535
   67404:	20c7883a 	add	r3,r4,r3
   67408:	280ed43a 	srli	r7,r5,16
   6740c:	180bd43a 	srai	r5,r3,16
   67410:	193fffcc 	andi	r4,r3,65535
   67414:	3947883a 	add	r3,r7,r5
   67418:	180a943a 	slli	r5,r3,16
   6741c:	1807d43a 	srai	r3,r3,16
   67420:	2908b03a 	or	r4,r5,r4
   67424:	313fff15 	stw	r4,-4(r6)
   67428:	5a3ff236 	bltu	r11,r8,673f4 <__alt_data_end+0xfffe73f4>
   6742c:	0406303a 	nor	r3,zero,r16
   67430:	1a07883a 	add	r3,r3,r8
   67434:	1806d0ba 	srli	r3,r3,2
   67438:	18c00044 	addi	r3,r3,1
   6743c:	18c7883a 	add	r3,r3,r3
   67440:	18c7883a 	add	r3,r3,r3
   67444:	50d5883a 	add	r10,r10,r3
   67448:	50ffff04 	addi	r3,r10,-4
   6744c:	2000041e 	bne	r4,zero,67460 <__mdiff+0x194>
   67450:	18ffff04 	addi	r3,r3,-4
   67454:	19000017 	ldw	r4,0(r3)
   67458:	4a7fffc4 	addi	r9,r9,-1
   6745c:	203ffc26 	beq	r4,zero,67450 <__alt_data_end+0xfffe7450>
   67460:	12400415 	stw	r9,16(r2)
   67464:	dfc00517 	ldw	ra,20(sp)
   67468:	dd000417 	ldw	r20,16(sp)
   6746c:	dcc00317 	ldw	r19,12(sp)
   67470:	dc800217 	ldw	r18,8(sp)
   67474:	dc400117 	ldw	r17,4(sp)
   67478:	dc000017 	ldw	r16,0(sp)
   6747c:	dec00604 	addi	sp,sp,24
   67480:	f800283a 	ret
   67484:	000b883a 	mov	r5,zero
   67488:	00668e80 	call	668e8 <_Balloc>
   6748c:	00c00044 	movi	r3,1
   67490:	10c00415 	stw	r3,16(r2)
   67494:	10000515 	stw	zero,20(r2)
   67498:	003ff206 	br	67464 <__alt_data_end+0xfffe7464>
   6749c:	8023883a 	mov	r17,r16
   674a0:	0029883a 	mov	r20,zero
   674a4:	4021883a 	mov	r16,r8
   674a8:	003fad06 	br	67360 <__alt_data_end+0xfffe7360>
   674ac:	9005883a 	mov	r2,r18
   674b0:	94400504 	addi	r17,r18,20
   674b4:	9c000504 	addi	r16,r19,20
   674b8:	9825883a 	mov	r18,r19
   674bc:	05000044 	movi	r20,1
   674c0:	1027883a 	mov	r19,r2
   674c4:	003fa606 	br	67360 <__alt_data_end+0xfffe7360>

000674c8 <__ulp>:
   674c8:	295ffc2c 	andhi	r5,r5,32752
   674cc:	00bf3034 	movhi	r2,64704
   674d0:	2887883a 	add	r3,r5,r2
   674d4:	00c0020e 	bge	zero,r3,674e0 <__ulp+0x18>
   674d8:	0005883a 	mov	r2,zero
   674dc:	f800283a 	ret
   674e0:	00c7c83a 	sub	r3,zero,r3
   674e4:	1807d53a 	srai	r3,r3,20
   674e8:	008004c4 	movi	r2,19
   674ec:	10c00b0e 	bge	r2,r3,6751c <__ulp+0x54>
   674f0:	18bffb04 	addi	r2,r3,-20
   674f4:	01000784 	movi	r4,30
   674f8:	0007883a 	mov	r3,zero
   674fc:	20800516 	blt	r4,r2,67514 <__ulp+0x4c>
   67500:	010007c4 	movi	r4,31
   67504:	2089c83a 	sub	r4,r4,r2
   67508:	00800044 	movi	r2,1
   6750c:	1104983a 	sll	r2,r2,r4
   67510:	f800283a 	ret
   67514:	00800044 	movi	r2,1
   67518:	f800283a 	ret
   6751c:	01400234 	movhi	r5,8
   67520:	28c7d83a 	sra	r3,r5,r3
   67524:	0005883a 	mov	r2,zero
   67528:	f800283a 	ret

0006752c <__b2d>:
   6752c:	defffa04 	addi	sp,sp,-24
   67530:	dc000015 	stw	r16,0(sp)
   67534:	24000417 	ldw	r16,16(r4)
   67538:	dc400115 	stw	r17,4(sp)
   6753c:	24400504 	addi	r17,r4,20
   67540:	8421883a 	add	r16,r16,r16
   67544:	8421883a 	add	r16,r16,r16
   67548:	8c21883a 	add	r16,r17,r16
   6754c:	dc800215 	stw	r18,8(sp)
   67550:	84bfff17 	ldw	r18,-4(r16)
   67554:	dd000415 	stw	r20,16(sp)
   67558:	dcc00315 	stw	r19,12(sp)
   6755c:	9009883a 	mov	r4,r18
   67560:	2829883a 	mov	r20,r5
   67564:	dfc00515 	stw	ra,20(sp)
   67568:	0066c040 	call	66c04 <__hi0bits>
   6756c:	00c00804 	movi	r3,32
   67570:	1889c83a 	sub	r4,r3,r2
   67574:	a1000015 	stw	r4,0(r20)
   67578:	01000284 	movi	r4,10
   6757c:	84ffff04 	addi	r19,r16,-4
   67580:	20801216 	blt	r4,r2,675cc <__b2d+0xa0>
   67584:	018002c4 	movi	r6,11
   67588:	308dc83a 	sub	r6,r6,r2
   6758c:	9186d83a 	srl	r3,r18,r6
   67590:	18cffc34 	orhi	r3,r3,16368
   67594:	8cc0212e 	bgeu	r17,r19,6761c <__b2d+0xf0>
   67598:	813ffe17 	ldw	r4,-8(r16)
   6759c:	218cd83a 	srl	r6,r4,r6
   675a0:	10800544 	addi	r2,r2,21
   675a4:	9084983a 	sll	r2,r18,r2
   675a8:	1184b03a 	or	r2,r2,r6
   675ac:	dfc00517 	ldw	ra,20(sp)
   675b0:	dd000417 	ldw	r20,16(sp)
   675b4:	dcc00317 	ldw	r19,12(sp)
   675b8:	dc800217 	ldw	r18,8(sp)
   675bc:	dc400117 	ldw	r17,4(sp)
   675c0:	dc000017 	ldw	r16,0(sp)
   675c4:	dec00604 	addi	sp,sp,24
   675c8:	f800283a 	ret
   675cc:	8cc00f2e 	bgeu	r17,r19,6760c <__b2d+0xe0>
   675d0:	117ffd44 	addi	r5,r2,-11
   675d4:	80bffe17 	ldw	r2,-8(r16)
   675d8:	28000e26 	beq	r5,zero,67614 <__b2d+0xe8>
   675dc:	1949c83a 	sub	r4,r3,r5
   675e0:	9164983a 	sll	r18,r18,r5
   675e4:	1106d83a 	srl	r3,r2,r4
   675e8:	81bffe04 	addi	r6,r16,-8
   675ec:	948ffc34 	orhi	r18,r18,16368
   675f0:	90c6b03a 	or	r3,r18,r3
   675f4:	89800e2e 	bgeu	r17,r6,67630 <__b2d+0x104>
   675f8:	81bffd17 	ldw	r6,-12(r16)
   675fc:	1144983a 	sll	r2,r2,r5
   67600:	310ad83a 	srl	r5,r6,r4
   67604:	2884b03a 	or	r2,r5,r2
   67608:	003fe806 	br	675ac <__alt_data_end+0xfffe75ac>
   6760c:	10bffd44 	addi	r2,r2,-11
   67610:	1000041e 	bne	r2,zero,67624 <__b2d+0xf8>
   67614:	90cffc34 	orhi	r3,r18,16368
   67618:	003fe406 	br	675ac <__alt_data_end+0xfffe75ac>
   6761c:	000d883a 	mov	r6,zero
   67620:	003fdf06 	br	675a0 <__alt_data_end+0xfffe75a0>
   67624:	90a4983a 	sll	r18,r18,r2
   67628:	0005883a 	mov	r2,zero
   6762c:	003ff906 	br	67614 <__alt_data_end+0xfffe7614>
   67630:	1144983a 	sll	r2,r2,r5
   67634:	003fdd06 	br	675ac <__alt_data_end+0xfffe75ac>

00067638 <__d2b>:
   67638:	defff804 	addi	sp,sp,-32
   6763c:	dc000215 	stw	r16,8(sp)
   67640:	3021883a 	mov	r16,r6
   67644:	dc400315 	stw	r17,12(sp)
   67648:	8022907a 	slli	r17,r16,1
   6764c:	dd000615 	stw	r20,24(sp)
   67650:	2829883a 	mov	r20,r5
   67654:	01400044 	movi	r5,1
   67658:	dcc00515 	stw	r19,20(sp)
   6765c:	dc800415 	stw	r18,16(sp)
   67660:	dfc00715 	stw	ra,28(sp)
   67664:	3825883a 	mov	r18,r7
   67668:	8822d57a 	srli	r17,r17,21
   6766c:	00668e80 	call	668e8 <_Balloc>
   67670:	1027883a 	mov	r19,r2
   67674:	00800434 	movhi	r2,16
   67678:	10bfffc4 	addi	r2,r2,-1
   6767c:	808c703a 	and	r6,r16,r2
   67680:	88000126 	beq	r17,zero,67688 <__d2b+0x50>
   67684:	31800434 	orhi	r6,r6,16
   67688:	d9800015 	stw	r6,0(sp)
   6768c:	a0002426 	beq	r20,zero,67720 <__d2b+0xe8>
   67690:	d9000104 	addi	r4,sp,4
   67694:	dd000115 	stw	r20,4(sp)
   67698:	0066c6c0 	call	66c6c <__lo0bits>
   6769c:	d8c00017 	ldw	r3,0(sp)
   676a0:	10002f1e 	bne	r2,zero,67760 <__d2b+0x128>
   676a4:	d9000117 	ldw	r4,4(sp)
   676a8:	99000515 	stw	r4,20(r19)
   676ac:	1821003a 	cmpeq	r16,r3,zero
   676b0:	01000084 	movi	r4,2
   676b4:	2421c83a 	sub	r16,r4,r16
   676b8:	98c00615 	stw	r3,24(r19)
   676bc:	9c000415 	stw	r16,16(r19)
   676c0:	88001f1e 	bne	r17,zero,67740 <__d2b+0x108>
   676c4:	10bef384 	addi	r2,r2,-1074
   676c8:	90800015 	stw	r2,0(r18)
   676cc:	00900034 	movhi	r2,16384
   676d0:	10bfffc4 	addi	r2,r2,-1
   676d4:	8085883a 	add	r2,r16,r2
   676d8:	1085883a 	add	r2,r2,r2
   676dc:	1085883a 	add	r2,r2,r2
   676e0:	9885883a 	add	r2,r19,r2
   676e4:	11000517 	ldw	r4,20(r2)
   676e8:	8020917a 	slli	r16,r16,5
   676ec:	0066c040 	call	66c04 <__hi0bits>
   676f0:	d8c00817 	ldw	r3,32(sp)
   676f4:	8085c83a 	sub	r2,r16,r2
   676f8:	18800015 	stw	r2,0(r3)
   676fc:	9805883a 	mov	r2,r19
   67700:	dfc00717 	ldw	ra,28(sp)
   67704:	dd000617 	ldw	r20,24(sp)
   67708:	dcc00517 	ldw	r19,20(sp)
   6770c:	dc800417 	ldw	r18,16(sp)
   67710:	dc400317 	ldw	r17,12(sp)
   67714:	dc000217 	ldw	r16,8(sp)
   67718:	dec00804 	addi	sp,sp,32
   6771c:	f800283a 	ret
   67720:	d809883a 	mov	r4,sp
   67724:	0066c6c0 	call	66c6c <__lo0bits>
   67728:	d8c00017 	ldw	r3,0(sp)
   6772c:	04000044 	movi	r16,1
   67730:	9c000415 	stw	r16,16(r19)
   67734:	98c00515 	stw	r3,20(r19)
   67738:	10800804 	addi	r2,r2,32
   6773c:	883fe126 	beq	r17,zero,676c4 <__alt_data_end+0xfffe76c4>
   67740:	00c00d44 	movi	r3,53
   67744:	8c7ef344 	addi	r17,r17,-1075
   67748:	88a3883a 	add	r17,r17,r2
   6774c:	1885c83a 	sub	r2,r3,r2
   67750:	d8c00817 	ldw	r3,32(sp)
   67754:	94400015 	stw	r17,0(r18)
   67758:	18800015 	stw	r2,0(r3)
   6775c:	003fe706 	br	676fc <__alt_data_end+0xfffe76fc>
   67760:	01000804 	movi	r4,32
   67764:	2089c83a 	sub	r4,r4,r2
   67768:	1908983a 	sll	r4,r3,r4
   6776c:	d9400117 	ldw	r5,4(sp)
   67770:	1886d83a 	srl	r3,r3,r2
   67774:	2148b03a 	or	r4,r4,r5
   67778:	99000515 	stw	r4,20(r19)
   6777c:	d8c00015 	stw	r3,0(sp)
   67780:	003fca06 	br	676ac <__alt_data_end+0xfffe76ac>

00067784 <__ratio>:
   67784:	defff904 	addi	sp,sp,-28
   67788:	dc400315 	stw	r17,12(sp)
   6778c:	2823883a 	mov	r17,r5
   67790:	d9400104 	addi	r5,sp,4
   67794:	dfc00615 	stw	ra,24(sp)
   67798:	dcc00515 	stw	r19,20(sp)
   6779c:	dc800415 	stw	r18,16(sp)
   677a0:	2027883a 	mov	r19,r4
   677a4:	dc000215 	stw	r16,8(sp)
   677a8:	006752c0 	call	6752c <__b2d>
   677ac:	d80b883a 	mov	r5,sp
   677b0:	8809883a 	mov	r4,r17
   677b4:	1025883a 	mov	r18,r2
   677b8:	1821883a 	mov	r16,r3
   677bc:	006752c0 	call	6752c <__b2d>
   677c0:	8a000417 	ldw	r8,16(r17)
   677c4:	99000417 	ldw	r4,16(r19)
   677c8:	d9400117 	ldw	r5,4(sp)
   677cc:	2209c83a 	sub	r4,r4,r8
   677d0:	2010917a 	slli	r8,r4,5
   677d4:	d9000017 	ldw	r4,0(sp)
   677d8:	2909c83a 	sub	r4,r5,r4
   677dc:	4109883a 	add	r4,r8,r4
   677e0:	01000e0e 	bge	zero,r4,6781c <__ratio+0x98>
   677e4:	2008953a 	slli	r4,r4,20
   677e8:	2421883a 	add	r16,r4,r16
   677ec:	100d883a 	mov	r6,r2
   677f0:	180f883a 	mov	r7,r3
   677f4:	9009883a 	mov	r4,r18
   677f8:	800b883a 	mov	r5,r16
   677fc:	006b8480 	call	6b848 <__divdf3>
   67800:	dfc00617 	ldw	ra,24(sp)
   67804:	dcc00517 	ldw	r19,20(sp)
   67808:	dc800417 	ldw	r18,16(sp)
   6780c:	dc400317 	ldw	r17,12(sp)
   67810:	dc000217 	ldw	r16,8(sp)
   67814:	dec00704 	addi	sp,sp,28
   67818:	f800283a 	ret
   6781c:	2008953a 	slli	r4,r4,20
   67820:	1907c83a 	sub	r3,r3,r4
   67824:	003ff106 	br	677ec <__alt_data_end+0xfffe77ec>

00067828 <_mprec_log10>:
   67828:	defffe04 	addi	sp,sp,-8
   6782c:	dc000015 	stw	r16,0(sp)
   67830:	dfc00115 	stw	ra,4(sp)
   67834:	008005c4 	movi	r2,23
   67838:	2021883a 	mov	r16,r4
   6783c:	11000d0e 	bge	r2,r4,67874 <_mprec_log10+0x4c>
   67840:	0005883a 	mov	r2,zero
   67844:	00cffc34 	movhi	r3,16368
   67848:	843fffc4 	addi	r16,r16,-1
   6784c:	000d883a 	mov	r6,zero
   67850:	01d00934 	movhi	r7,16420
   67854:	1009883a 	mov	r4,r2
   67858:	180b883a 	mov	r5,r3
   6785c:	006c4700 	call	6c470 <__muldf3>
   67860:	803ff91e 	bne	r16,zero,67848 <__alt_data_end+0xfffe7848>
   67864:	dfc00117 	ldw	ra,4(sp)
   67868:	dc000017 	ldw	r16,0(sp)
   6786c:	dec00204 	addi	sp,sp,8
   67870:	f800283a 	ret
   67874:	202090fa 	slli	r16,r4,3
   67878:	008001f4 	movhi	r2,7
   6787c:	1081ae04 	addi	r2,r2,1720
   67880:	1421883a 	add	r16,r2,r16
   67884:	80800017 	ldw	r2,0(r16)
   67888:	80c00117 	ldw	r3,4(r16)
   6788c:	dfc00117 	ldw	ra,4(sp)
   67890:	dc000017 	ldw	r16,0(sp)
   67894:	dec00204 	addi	sp,sp,8
   67898:	f800283a 	ret

0006789c <__copybits>:
   6789c:	297fffc4 	addi	r5,r5,-1
   678a0:	280fd17a 	srai	r7,r5,5
   678a4:	30c00417 	ldw	r3,16(r6)
   678a8:	30800504 	addi	r2,r6,20
   678ac:	39c00044 	addi	r7,r7,1
   678b0:	18c7883a 	add	r3,r3,r3
   678b4:	39cf883a 	add	r7,r7,r7
   678b8:	18c7883a 	add	r3,r3,r3
   678bc:	39cf883a 	add	r7,r7,r7
   678c0:	10c7883a 	add	r3,r2,r3
   678c4:	21cf883a 	add	r7,r4,r7
   678c8:	10c00d2e 	bgeu	r2,r3,67900 <__copybits+0x64>
   678cc:	200b883a 	mov	r5,r4
   678d0:	12000017 	ldw	r8,0(r2)
   678d4:	29400104 	addi	r5,r5,4
   678d8:	10800104 	addi	r2,r2,4
   678dc:	2a3fff15 	stw	r8,-4(r5)
   678e0:	10fffb36 	bltu	r2,r3,678d0 <__alt_data_end+0xfffe78d0>
   678e4:	1985c83a 	sub	r2,r3,r6
   678e8:	10bffac4 	addi	r2,r2,-21
   678ec:	1004d0ba 	srli	r2,r2,2
   678f0:	10800044 	addi	r2,r2,1
   678f4:	1085883a 	add	r2,r2,r2
   678f8:	1085883a 	add	r2,r2,r2
   678fc:	2089883a 	add	r4,r4,r2
   67900:	21c0032e 	bgeu	r4,r7,67910 <__copybits+0x74>
   67904:	20000015 	stw	zero,0(r4)
   67908:	21000104 	addi	r4,r4,4
   6790c:	21fffd36 	bltu	r4,r7,67904 <__alt_data_end+0xfffe7904>
   67910:	f800283a 	ret

00067914 <__any_on>:
   67914:	20c00417 	ldw	r3,16(r4)
   67918:	2805d17a 	srai	r2,r5,5
   6791c:	21000504 	addi	r4,r4,20
   67920:	18800d0e 	bge	r3,r2,67958 <__any_on+0x44>
   67924:	18c7883a 	add	r3,r3,r3
   67928:	18c7883a 	add	r3,r3,r3
   6792c:	20c7883a 	add	r3,r4,r3
   67930:	20c0192e 	bgeu	r4,r3,67998 <__any_on+0x84>
   67934:	18bfff17 	ldw	r2,-4(r3)
   67938:	18ffff04 	addi	r3,r3,-4
   6793c:	1000041e 	bne	r2,zero,67950 <__any_on+0x3c>
   67940:	20c0142e 	bgeu	r4,r3,67994 <__any_on+0x80>
   67944:	18ffff04 	addi	r3,r3,-4
   67948:	19400017 	ldw	r5,0(r3)
   6794c:	283ffc26 	beq	r5,zero,67940 <__alt_data_end+0xfffe7940>
   67950:	00800044 	movi	r2,1
   67954:	f800283a 	ret
   67958:	10c00a0e 	bge	r2,r3,67984 <__any_on+0x70>
   6795c:	1085883a 	add	r2,r2,r2
   67960:	1085883a 	add	r2,r2,r2
   67964:	294007cc 	andi	r5,r5,31
   67968:	2087883a 	add	r3,r4,r2
   6796c:	283ff026 	beq	r5,zero,67930 <__alt_data_end+0xfffe7930>
   67970:	19800017 	ldw	r6,0(r3)
   67974:	3144d83a 	srl	r2,r6,r5
   67978:	114a983a 	sll	r5,r2,r5
   6797c:	317ff41e 	bne	r6,r5,67950 <__alt_data_end+0xfffe7950>
   67980:	003feb06 	br	67930 <__alt_data_end+0xfffe7930>
   67984:	1085883a 	add	r2,r2,r2
   67988:	1085883a 	add	r2,r2,r2
   6798c:	2087883a 	add	r3,r4,r2
   67990:	003fe706 	br	67930 <__alt_data_end+0xfffe7930>
   67994:	f800283a 	ret
   67998:	0005883a 	mov	r2,zero
   6799c:	f800283a 	ret

000679a0 <_realloc_r>:
   679a0:	defff604 	addi	sp,sp,-40
   679a4:	dc800215 	stw	r18,8(sp)
   679a8:	dfc00915 	stw	ra,36(sp)
   679ac:	df000815 	stw	fp,32(sp)
   679b0:	ddc00715 	stw	r23,28(sp)
   679b4:	dd800615 	stw	r22,24(sp)
   679b8:	dd400515 	stw	r21,20(sp)
   679bc:	dd000415 	stw	r20,16(sp)
   679c0:	dcc00315 	stw	r19,12(sp)
   679c4:	dc400115 	stw	r17,4(sp)
   679c8:	dc000015 	stw	r16,0(sp)
   679cc:	3025883a 	mov	r18,r6
   679d0:	2800b726 	beq	r5,zero,67cb0 <_realloc_r+0x310>
   679d4:	282b883a 	mov	r21,r5
   679d8:	2029883a 	mov	r20,r4
   679dc:	006dddc0 	call	6dddc <__malloc_lock>
   679e0:	a8bfff17 	ldw	r2,-4(r21)
   679e4:	043fff04 	movi	r16,-4
   679e8:	90c002c4 	addi	r3,r18,11
   679ec:	01000584 	movi	r4,22
   679f0:	acfffe04 	addi	r19,r21,-8
   679f4:	1420703a 	and	r16,r2,r16
   679f8:	20c0332e 	bgeu	r4,r3,67ac8 <_realloc_r+0x128>
   679fc:	047ffe04 	movi	r17,-8
   67a00:	1c62703a 	and	r17,r3,r17
   67a04:	8807883a 	mov	r3,r17
   67a08:	88005816 	blt	r17,zero,67b6c <_realloc_r+0x1cc>
   67a0c:	8c805736 	bltu	r17,r18,67b6c <_realloc_r+0x1cc>
   67a10:	80c0300e 	bge	r16,r3,67ad4 <_realloc_r+0x134>
   67a14:	070001f4 	movhi	fp,7
   67a18:	e7038a04 	addi	fp,fp,3624
   67a1c:	e1c00217 	ldw	r7,8(fp)
   67a20:	9c09883a 	add	r4,r19,r16
   67a24:	22000117 	ldw	r8,4(r4)
   67a28:	21c06326 	beq	r4,r7,67bb8 <_realloc_r+0x218>
   67a2c:	017fff84 	movi	r5,-2
   67a30:	414a703a 	and	r5,r8,r5
   67a34:	214b883a 	add	r5,r4,r5
   67a38:	29800117 	ldw	r6,4(r5)
   67a3c:	3180004c 	andi	r6,r6,1
   67a40:	30003f26 	beq	r6,zero,67b40 <_realloc_r+0x1a0>
   67a44:	1080004c 	andi	r2,r2,1
   67a48:	10008326 	beq	r2,zero,67c58 <_realloc_r+0x2b8>
   67a4c:	900b883a 	mov	r5,r18
   67a50:	a009883a 	mov	r4,r20
   67a54:	0065d740 	call	65d74 <_malloc_r>
   67a58:	1025883a 	mov	r18,r2
   67a5c:	10011e26 	beq	r2,zero,67ed8 <_realloc_r+0x538>
   67a60:	a93fff17 	ldw	r4,-4(r21)
   67a64:	10fffe04 	addi	r3,r2,-8
   67a68:	00bfff84 	movi	r2,-2
   67a6c:	2084703a 	and	r2,r4,r2
   67a70:	9885883a 	add	r2,r19,r2
   67a74:	1880ee26 	beq	r3,r2,67e30 <_realloc_r+0x490>
   67a78:	81bfff04 	addi	r6,r16,-4
   67a7c:	00800904 	movi	r2,36
   67a80:	1180b836 	bltu	r2,r6,67d64 <_realloc_r+0x3c4>
   67a84:	00c004c4 	movi	r3,19
   67a88:	19809636 	bltu	r3,r6,67ce4 <_realloc_r+0x344>
   67a8c:	9005883a 	mov	r2,r18
   67a90:	a807883a 	mov	r3,r21
   67a94:	19000017 	ldw	r4,0(r3)
   67a98:	11000015 	stw	r4,0(r2)
   67a9c:	19000117 	ldw	r4,4(r3)
   67aa0:	11000115 	stw	r4,4(r2)
   67aa4:	18c00217 	ldw	r3,8(r3)
   67aa8:	10c00215 	stw	r3,8(r2)
   67aac:	a80b883a 	mov	r5,r21
   67ab0:	a009883a 	mov	r4,r20
   67ab4:	006517c0 	call	6517c <_free_r>
   67ab8:	a009883a 	mov	r4,r20
   67abc:	006de000 	call	6de00 <__malloc_unlock>
   67ac0:	9005883a 	mov	r2,r18
   67ac4:	00001206 	br	67b10 <_realloc_r+0x170>
   67ac8:	00c00404 	movi	r3,16
   67acc:	1823883a 	mov	r17,r3
   67ad0:	003fce06 	br	67a0c <__alt_data_end+0xfffe7a0c>
   67ad4:	a825883a 	mov	r18,r21
   67ad8:	8445c83a 	sub	r2,r16,r17
   67adc:	00c003c4 	movi	r3,15
   67ae0:	18802636 	bltu	r3,r2,67b7c <_realloc_r+0x1dc>
   67ae4:	99800117 	ldw	r6,4(r19)
   67ae8:	9c07883a 	add	r3,r19,r16
   67aec:	3180004c 	andi	r6,r6,1
   67af0:	3420b03a 	or	r16,r6,r16
   67af4:	9c000115 	stw	r16,4(r19)
   67af8:	18800117 	ldw	r2,4(r3)
   67afc:	10800054 	ori	r2,r2,1
   67b00:	18800115 	stw	r2,4(r3)
   67b04:	a009883a 	mov	r4,r20
   67b08:	006de000 	call	6de00 <__malloc_unlock>
   67b0c:	9005883a 	mov	r2,r18
   67b10:	dfc00917 	ldw	ra,36(sp)
   67b14:	df000817 	ldw	fp,32(sp)
   67b18:	ddc00717 	ldw	r23,28(sp)
   67b1c:	dd800617 	ldw	r22,24(sp)
   67b20:	dd400517 	ldw	r21,20(sp)
   67b24:	dd000417 	ldw	r20,16(sp)
   67b28:	dcc00317 	ldw	r19,12(sp)
   67b2c:	dc800217 	ldw	r18,8(sp)
   67b30:	dc400117 	ldw	r17,4(sp)
   67b34:	dc000017 	ldw	r16,0(sp)
   67b38:	dec00a04 	addi	sp,sp,40
   67b3c:	f800283a 	ret
   67b40:	017fff04 	movi	r5,-4
   67b44:	414a703a 	and	r5,r8,r5
   67b48:	814d883a 	add	r6,r16,r5
   67b4c:	30c01f16 	blt	r6,r3,67bcc <_realloc_r+0x22c>
   67b50:	20800317 	ldw	r2,12(r4)
   67b54:	20c00217 	ldw	r3,8(r4)
   67b58:	a825883a 	mov	r18,r21
   67b5c:	3021883a 	mov	r16,r6
   67b60:	18800315 	stw	r2,12(r3)
   67b64:	10c00215 	stw	r3,8(r2)
   67b68:	003fdb06 	br	67ad8 <__alt_data_end+0xfffe7ad8>
   67b6c:	00800304 	movi	r2,12
   67b70:	a0800015 	stw	r2,0(r20)
   67b74:	0005883a 	mov	r2,zero
   67b78:	003fe506 	br	67b10 <__alt_data_end+0xfffe7b10>
   67b7c:	98c00117 	ldw	r3,4(r19)
   67b80:	9c4b883a 	add	r5,r19,r17
   67b84:	11000054 	ori	r4,r2,1
   67b88:	18c0004c 	andi	r3,r3,1
   67b8c:	1c62b03a 	or	r17,r3,r17
   67b90:	9c400115 	stw	r17,4(r19)
   67b94:	29000115 	stw	r4,4(r5)
   67b98:	2885883a 	add	r2,r5,r2
   67b9c:	10c00117 	ldw	r3,4(r2)
   67ba0:	29400204 	addi	r5,r5,8
   67ba4:	a009883a 	mov	r4,r20
   67ba8:	18c00054 	ori	r3,r3,1
   67bac:	10c00115 	stw	r3,4(r2)
   67bb0:	006517c0 	call	6517c <_free_r>
   67bb4:	003fd306 	br	67b04 <__alt_data_end+0xfffe7b04>
   67bb8:	017fff04 	movi	r5,-4
   67bbc:	414a703a 	and	r5,r8,r5
   67bc0:	89800404 	addi	r6,r17,16
   67bc4:	8151883a 	add	r8,r16,r5
   67bc8:	4180590e 	bge	r8,r6,67d30 <_realloc_r+0x390>
   67bcc:	1080004c 	andi	r2,r2,1
   67bd0:	103f9e1e 	bne	r2,zero,67a4c <__alt_data_end+0xfffe7a4c>
   67bd4:	adbffe17 	ldw	r22,-8(r21)
   67bd8:	00bfff04 	movi	r2,-4
   67bdc:	9dadc83a 	sub	r22,r19,r22
   67be0:	b1800117 	ldw	r6,4(r22)
   67be4:	3084703a 	and	r2,r6,r2
   67be8:	20002026 	beq	r4,zero,67c6c <_realloc_r+0x2cc>
   67bec:	80af883a 	add	r23,r16,r2
   67bf0:	b96f883a 	add	r23,r23,r5
   67bf4:	21c05f26 	beq	r4,r7,67d74 <_realloc_r+0x3d4>
   67bf8:	b8c01c16 	blt	r23,r3,67c6c <_realloc_r+0x2cc>
   67bfc:	20800317 	ldw	r2,12(r4)
   67c00:	20c00217 	ldw	r3,8(r4)
   67c04:	81bfff04 	addi	r6,r16,-4
   67c08:	01000904 	movi	r4,36
   67c0c:	18800315 	stw	r2,12(r3)
   67c10:	10c00215 	stw	r3,8(r2)
   67c14:	b0c00217 	ldw	r3,8(r22)
   67c18:	b0800317 	ldw	r2,12(r22)
   67c1c:	b4800204 	addi	r18,r22,8
   67c20:	18800315 	stw	r2,12(r3)
   67c24:	10c00215 	stw	r3,8(r2)
   67c28:	21801b36 	bltu	r4,r6,67c98 <_realloc_r+0x2f8>
   67c2c:	008004c4 	movi	r2,19
   67c30:	1180352e 	bgeu	r2,r6,67d08 <_realloc_r+0x368>
   67c34:	a8800017 	ldw	r2,0(r21)
   67c38:	b0800215 	stw	r2,8(r22)
   67c3c:	a8800117 	ldw	r2,4(r21)
   67c40:	b0800315 	stw	r2,12(r22)
   67c44:	008006c4 	movi	r2,27
   67c48:	11807f36 	bltu	r2,r6,67e48 <_realloc_r+0x4a8>
   67c4c:	b0800404 	addi	r2,r22,16
   67c50:	ad400204 	addi	r21,r21,8
   67c54:	00002d06 	br	67d0c <_realloc_r+0x36c>
   67c58:	adbffe17 	ldw	r22,-8(r21)
   67c5c:	00bfff04 	movi	r2,-4
   67c60:	9dadc83a 	sub	r22,r19,r22
   67c64:	b1000117 	ldw	r4,4(r22)
   67c68:	2084703a 	and	r2,r4,r2
   67c6c:	b03f7726 	beq	r22,zero,67a4c <__alt_data_end+0xfffe7a4c>
   67c70:	80af883a 	add	r23,r16,r2
   67c74:	b8ff7516 	blt	r23,r3,67a4c <__alt_data_end+0xfffe7a4c>
   67c78:	b0800317 	ldw	r2,12(r22)
   67c7c:	b0c00217 	ldw	r3,8(r22)
   67c80:	81bfff04 	addi	r6,r16,-4
   67c84:	01000904 	movi	r4,36
   67c88:	18800315 	stw	r2,12(r3)
   67c8c:	10c00215 	stw	r3,8(r2)
   67c90:	b4800204 	addi	r18,r22,8
   67c94:	21bfe52e 	bgeu	r4,r6,67c2c <__alt_data_end+0xfffe7c2c>
   67c98:	a80b883a 	mov	r5,r21
   67c9c:	9009883a 	mov	r4,r18
   67ca0:	00666640 	call	66664 <memmove>
   67ca4:	b821883a 	mov	r16,r23
   67ca8:	b027883a 	mov	r19,r22
   67cac:	003f8a06 	br	67ad8 <__alt_data_end+0xfffe7ad8>
   67cb0:	300b883a 	mov	r5,r6
   67cb4:	dfc00917 	ldw	ra,36(sp)
   67cb8:	df000817 	ldw	fp,32(sp)
   67cbc:	ddc00717 	ldw	r23,28(sp)
   67cc0:	dd800617 	ldw	r22,24(sp)
   67cc4:	dd400517 	ldw	r21,20(sp)
   67cc8:	dd000417 	ldw	r20,16(sp)
   67ccc:	dcc00317 	ldw	r19,12(sp)
   67cd0:	dc800217 	ldw	r18,8(sp)
   67cd4:	dc400117 	ldw	r17,4(sp)
   67cd8:	dc000017 	ldw	r16,0(sp)
   67cdc:	dec00a04 	addi	sp,sp,40
   67ce0:	0065d741 	jmpi	65d74 <_malloc_r>
   67ce4:	a8c00017 	ldw	r3,0(r21)
   67ce8:	90c00015 	stw	r3,0(r18)
   67cec:	a8c00117 	ldw	r3,4(r21)
   67cf0:	90c00115 	stw	r3,4(r18)
   67cf4:	00c006c4 	movi	r3,27
   67cf8:	19804536 	bltu	r3,r6,67e10 <_realloc_r+0x470>
   67cfc:	90800204 	addi	r2,r18,8
   67d00:	a8c00204 	addi	r3,r21,8
   67d04:	003f6306 	br	67a94 <__alt_data_end+0xfffe7a94>
   67d08:	9005883a 	mov	r2,r18
   67d0c:	a8c00017 	ldw	r3,0(r21)
   67d10:	b821883a 	mov	r16,r23
   67d14:	b027883a 	mov	r19,r22
   67d18:	10c00015 	stw	r3,0(r2)
   67d1c:	a8c00117 	ldw	r3,4(r21)
   67d20:	10c00115 	stw	r3,4(r2)
   67d24:	a8c00217 	ldw	r3,8(r21)
   67d28:	10c00215 	stw	r3,8(r2)
   67d2c:	003f6a06 	br	67ad8 <__alt_data_end+0xfffe7ad8>
   67d30:	9c67883a 	add	r19,r19,r17
   67d34:	4445c83a 	sub	r2,r8,r17
   67d38:	e4c00215 	stw	r19,8(fp)
   67d3c:	10800054 	ori	r2,r2,1
   67d40:	98800115 	stw	r2,4(r19)
   67d44:	a8bfff17 	ldw	r2,-4(r21)
   67d48:	a009883a 	mov	r4,r20
   67d4c:	1080004c 	andi	r2,r2,1
   67d50:	1462b03a 	or	r17,r2,r17
   67d54:	ac7fff15 	stw	r17,-4(r21)
   67d58:	006de000 	call	6de00 <__malloc_unlock>
   67d5c:	a805883a 	mov	r2,r21
   67d60:	003f6b06 	br	67b10 <__alt_data_end+0xfffe7b10>
   67d64:	a80b883a 	mov	r5,r21
   67d68:	9009883a 	mov	r4,r18
   67d6c:	00666640 	call	66664 <memmove>
   67d70:	003f4e06 	br	67aac <__alt_data_end+0xfffe7aac>
   67d74:	89000404 	addi	r4,r17,16
   67d78:	b93fbc16 	blt	r23,r4,67c6c <__alt_data_end+0xfffe7c6c>
   67d7c:	b0800317 	ldw	r2,12(r22)
   67d80:	b0c00217 	ldw	r3,8(r22)
   67d84:	81bfff04 	addi	r6,r16,-4
   67d88:	01000904 	movi	r4,36
   67d8c:	18800315 	stw	r2,12(r3)
   67d90:	10c00215 	stw	r3,8(r2)
   67d94:	b4800204 	addi	r18,r22,8
   67d98:	21804336 	bltu	r4,r6,67ea8 <_realloc_r+0x508>
   67d9c:	008004c4 	movi	r2,19
   67da0:	11803f2e 	bgeu	r2,r6,67ea0 <_realloc_r+0x500>
   67da4:	a8800017 	ldw	r2,0(r21)
   67da8:	b0800215 	stw	r2,8(r22)
   67dac:	a8800117 	ldw	r2,4(r21)
   67db0:	b0800315 	stw	r2,12(r22)
   67db4:	008006c4 	movi	r2,27
   67db8:	11803f36 	bltu	r2,r6,67eb8 <_realloc_r+0x518>
   67dbc:	b0800404 	addi	r2,r22,16
   67dc0:	ad400204 	addi	r21,r21,8
   67dc4:	a8c00017 	ldw	r3,0(r21)
   67dc8:	10c00015 	stw	r3,0(r2)
   67dcc:	a8c00117 	ldw	r3,4(r21)
   67dd0:	10c00115 	stw	r3,4(r2)
   67dd4:	a8c00217 	ldw	r3,8(r21)
   67dd8:	10c00215 	stw	r3,8(r2)
   67ddc:	b447883a 	add	r3,r22,r17
   67de0:	bc45c83a 	sub	r2,r23,r17
   67de4:	e0c00215 	stw	r3,8(fp)
   67de8:	10800054 	ori	r2,r2,1
   67dec:	18800115 	stw	r2,4(r3)
   67df0:	b0800117 	ldw	r2,4(r22)
   67df4:	a009883a 	mov	r4,r20
   67df8:	1080004c 	andi	r2,r2,1
   67dfc:	1462b03a 	or	r17,r2,r17
   67e00:	b4400115 	stw	r17,4(r22)
   67e04:	006de000 	call	6de00 <__malloc_unlock>
   67e08:	9005883a 	mov	r2,r18
   67e0c:	003f4006 	br	67b10 <__alt_data_end+0xfffe7b10>
   67e10:	a8c00217 	ldw	r3,8(r21)
   67e14:	90c00215 	stw	r3,8(r18)
   67e18:	a8c00317 	ldw	r3,12(r21)
   67e1c:	90c00315 	stw	r3,12(r18)
   67e20:	30801126 	beq	r6,r2,67e68 <_realloc_r+0x4c8>
   67e24:	90800404 	addi	r2,r18,16
   67e28:	a8c00404 	addi	r3,r21,16
   67e2c:	003f1906 	br	67a94 <__alt_data_end+0xfffe7a94>
   67e30:	90ffff17 	ldw	r3,-4(r18)
   67e34:	00bfff04 	movi	r2,-4
   67e38:	a825883a 	mov	r18,r21
   67e3c:	1884703a 	and	r2,r3,r2
   67e40:	80a1883a 	add	r16,r16,r2
   67e44:	003f2406 	br	67ad8 <__alt_data_end+0xfffe7ad8>
   67e48:	a8800217 	ldw	r2,8(r21)
   67e4c:	b0800415 	stw	r2,16(r22)
   67e50:	a8800317 	ldw	r2,12(r21)
   67e54:	b0800515 	stw	r2,20(r22)
   67e58:	31000a26 	beq	r6,r4,67e84 <_realloc_r+0x4e4>
   67e5c:	b0800604 	addi	r2,r22,24
   67e60:	ad400404 	addi	r21,r21,16
   67e64:	003fa906 	br	67d0c <__alt_data_end+0xfffe7d0c>
   67e68:	a9000417 	ldw	r4,16(r21)
   67e6c:	90800604 	addi	r2,r18,24
   67e70:	a8c00604 	addi	r3,r21,24
   67e74:	91000415 	stw	r4,16(r18)
   67e78:	a9000517 	ldw	r4,20(r21)
   67e7c:	91000515 	stw	r4,20(r18)
   67e80:	003f0406 	br	67a94 <__alt_data_end+0xfffe7a94>
   67e84:	a8c00417 	ldw	r3,16(r21)
   67e88:	ad400604 	addi	r21,r21,24
   67e8c:	b0800804 	addi	r2,r22,32
   67e90:	b0c00615 	stw	r3,24(r22)
   67e94:	a8ffff17 	ldw	r3,-4(r21)
   67e98:	b0c00715 	stw	r3,28(r22)
   67e9c:	003f9b06 	br	67d0c <__alt_data_end+0xfffe7d0c>
   67ea0:	9005883a 	mov	r2,r18
   67ea4:	003fc706 	br	67dc4 <__alt_data_end+0xfffe7dc4>
   67ea8:	a80b883a 	mov	r5,r21
   67eac:	9009883a 	mov	r4,r18
   67eb0:	00666640 	call	66664 <memmove>
   67eb4:	003fc906 	br	67ddc <__alt_data_end+0xfffe7ddc>
   67eb8:	a8800217 	ldw	r2,8(r21)
   67ebc:	b0800415 	stw	r2,16(r22)
   67ec0:	a8800317 	ldw	r2,12(r21)
   67ec4:	b0800515 	stw	r2,20(r22)
   67ec8:	31000726 	beq	r6,r4,67ee8 <_realloc_r+0x548>
   67ecc:	b0800604 	addi	r2,r22,24
   67ed0:	ad400404 	addi	r21,r21,16
   67ed4:	003fbb06 	br	67dc4 <__alt_data_end+0xfffe7dc4>
   67ed8:	a009883a 	mov	r4,r20
   67edc:	006de000 	call	6de00 <__malloc_unlock>
   67ee0:	0005883a 	mov	r2,zero
   67ee4:	003f0a06 	br	67b10 <__alt_data_end+0xfffe7b10>
   67ee8:	a8c00417 	ldw	r3,16(r21)
   67eec:	ad400604 	addi	r21,r21,24
   67ef0:	b0800804 	addi	r2,r22,32
   67ef4:	b0c00615 	stw	r3,24(r22)
   67ef8:	a8ffff17 	ldw	r3,-4(r21)
   67efc:	b0c00715 	stw	r3,28(r22)
   67f00:	003fb006 	br	67dc4 <__alt_data_end+0xfffe7dc4>

00067f04 <__fpclassifyd>:
   67f04:	00a00034 	movhi	r2,32768
   67f08:	10bfffc4 	addi	r2,r2,-1
   67f0c:	2884703a 	and	r2,r5,r2
   67f10:	10000726 	beq	r2,zero,67f30 <__fpclassifyd+0x2c>
   67f14:	00fffc34 	movhi	r3,65520
   67f18:	019ff834 	movhi	r6,32736
   67f1c:	28c7883a 	add	r3,r5,r3
   67f20:	31bfffc4 	addi	r6,r6,-1
   67f24:	30c00536 	bltu	r6,r3,67f3c <__fpclassifyd+0x38>
   67f28:	00800104 	movi	r2,4
   67f2c:	f800283a 	ret
   67f30:	2000021e 	bne	r4,zero,67f3c <__fpclassifyd+0x38>
   67f34:	00800084 	movi	r2,2
   67f38:	f800283a 	ret
   67f3c:	00dffc34 	movhi	r3,32752
   67f40:	019ff834 	movhi	r6,32736
   67f44:	28cb883a 	add	r5,r5,r3
   67f48:	31bfffc4 	addi	r6,r6,-1
   67f4c:	317ff62e 	bgeu	r6,r5,67f28 <__alt_data_end+0xfffe7f28>
   67f50:	01400434 	movhi	r5,16
   67f54:	297fffc4 	addi	r5,r5,-1
   67f58:	28800236 	bltu	r5,r2,67f64 <__fpclassifyd+0x60>
   67f5c:	008000c4 	movi	r2,3
   67f60:	f800283a 	ret
   67f64:	10c00226 	beq	r2,r3,67f70 <__fpclassifyd+0x6c>
   67f68:	0005883a 	mov	r2,zero
   67f6c:	f800283a 	ret
   67f70:	2005003a 	cmpeq	r2,r4,zero
   67f74:	f800283a 	ret

00067f78 <_sbrk_r>:
   67f78:	defffd04 	addi	sp,sp,-12
   67f7c:	dc000015 	stw	r16,0(sp)
   67f80:	040001f4 	movhi	r16,7
   67f84:	dc400115 	stw	r17,4(sp)
   67f88:	84100f04 	addi	r16,r16,16444
   67f8c:	2023883a 	mov	r17,r4
   67f90:	2809883a 	mov	r4,r5
   67f94:	dfc00215 	stw	ra,8(sp)
   67f98:	80000015 	stw	zero,0(r16)
   67f9c:	006dfe80 	call	6dfe8 <sbrk>
   67fa0:	00ffffc4 	movi	r3,-1
   67fa4:	10c00526 	beq	r2,r3,67fbc <_sbrk_r+0x44>
   67fa8:	dfc00217 	ldw	ra,8(sp)
   67fac:	dc400117 	ldw	r17,4(sp)
   67fb0:	dc000017 	ldw	r16,0(sp)
   67fb4:	dec00304 	addi	sp,sp,12
   67fb8:	f800283a 	ret
   67fbc:	80c00017 	ldw	r3,0(r16)
   67fc0:	183ff926 	beq	r3,zero,67fa8 <__alt_data_end+0xfffe7fa8>
   67fc4:	88c00015 	stw	r3,0(r17)
   67fc8:	003ff706 	br	67fa8 <__alt_data_end+0xfffe7fa8>

00067fcc <__sread>:
   67fcc:	defffe04 	addi	sp,sp,-8
   67fd0:	dc000015 	stw	r16,0(sp)
   67fd4:	2821883a 	mov	r16,r5
   67fd8:	2940038f 	ldh	r5,14(r5)
   67fdc:	dfc00115 	stw	ra,4(sp)
   67fe0:	0069e880 	call	69e88 <_read_r>
   67fe4:	10000716 	blt	r2,zero,68004 <__sread+0x38>
   67fe8:	80c01417 	ldw	r3,80(r16)
   67fec:	1887883a 	add	r3,r3,r2
   67ff0:	80c01415 	stw	r3,80(r16)
   67ff4:	dfc00117 	ldw	ra,4(sp)
   67ff8:	dc000017 	ldw	r16,0(sp)
   67ffc:	dec00204 	addi	sp,sp,8
   68000:	f800283a 	ret
   68004:	80c0030b 	ldhu	r3,12(r16)
   68008:	18fbffcc 	andi	r3,r3,61439
   6800c:	80c0030d 	sth	r3,12(r16)
   68010:	dfc00117 	ldw	ra,4(sp)
   68014:	dc000017 	ldw	r16,0(sp)
   68018:	dec00204 	addi	sp,sp,8
   6801c:	f800283a 	ret

00068020 <__seofread>:
   68020:	0005883a 	mov	r2,zero
   68024:	f800283a 	ret

00068028 <__swrite>:
   68028:	2880030b 	ldhu	r2,12(r5)
   6802c:	defffb04 	addi	sp,sp,-20
   68030:	dcc00315 	stw	r19,12(sp)
   68034:	dc800215 	stw	r18,8(sp)
   68038:	dc400115 	stw	r17,4(sp)
   6803c:	dc000015 	stw	r16,0(sp)
   68040:	dfc00415 	stw	ra,16(sp)
   68044:	10c0400c 	andi	r3,r2,256
   68048:	2821883a 	mov	r16,r5
   6804c:	2023883a 	mov	r17,r4
   68050:	3025883a 	mov	r18,r6
   68054:	3827883a 	mov	r19,r7
   68058:	18000526 	beq	r3,zero,68070 <__swrite+0x48>
   6805c:	2940038f 	ldh	r5,14(r5)
   68060:	01c00084 	movi	r7,2
   68064:	000d883a 	mov	r6,zero
   68068:	0069e280 	call	69e28 <_lseek_r>
   6806c:	8080030b 	ldhu	r2,12(r16)
   68070:	8140038f 	ldh	r5,14(r16)
   68074:	10bbffcc 	andi	r2,r2,61439
   68078:	980f883a 	mov	r7,r19
   6807c:	900d883a 	mov	r6,r18
   68080:	8809883a 	mov	r4,r17
   68084:	8080030d 	sth	r2,12(r16)
   68088:	dfc00417 	ldw	ra,16(sp)
   6808c:	dcc00317 	ldw	r19,12(sp)
   68090:	dc800217 	ldw	r18,8(sp)
   68094:	dc400117 	ldw	r17,4(sp)
   68098:	dc000017 	ldw	r16,0(sp)
   6809c:	dec00504 	addi	sp,sp,20
   680a0:	00698dc1 	jmpi	698dc <_write_r>

000680a4 <__sseek>:
   680a4:	defffe04 	addi	sp,sp,-8
   680a8:	dc000015 	stw	r16,0(sp)
   680ac:	2821883a 	mov	r16,r5
   680b0:	2940038f 	ldh	r5,14(r5)
   680b4:	dfc00115 	stw	ra,4(sp)
   680b8:	0069e280 	call	69e28 <_lseek_r>
   680bc:	00ffffc4 	movi	r3,-1
   680c0:	10c00826 	beq	r2,r3,680e4 <__sseek+0x40>
   680c4:	80c0030b 	ldhu	r3,12(r16)
   680c8:	80801415 	stw	r2,80(r16)
   680cc:	18c40014 	ori	r3,r3,4096
   680d0:	80c0030d 	sth	r3,12(r16)
   680d4:	dfc00117 	ldw	ra,4(sp)
   680d8:	dc000017 	ldw	r16,0(sp)
   680dc:	dec00204 	addi	sp,sp,8
   680e0:	f800283a 	ret
   680e4:	80c0030b 	ldhu	r3,12(r16)
   680e8:	18fbffcc 	andi	r3,r3,61439
   680ec:	80c0030d 	sth	r3,12(r16)
   680f0:	dfc00117 	ldw	ra,4(sp)
   680f4:	dc000017 	ldw	r16,0(sp)
   680f8:	dec00204 	addi	sp,sp,8
   680fc:	f800283a 	ret

00068100 <__sclose>:
   68100:	2940038f 	ldh	r5,14(r5)
   68104:	006993c1 	jmpi	6993c <_close_r>

00068108 <strcmp>:
   68108:	2144b03a 	or	r2,r4,r5
   6810c:	108000cc 	andi	r2,r2,3
   68110:	1000171e 	bne	r2,zero,68170 <strcmp+0x68>
   68114:	20800017 	ldw	r2,0(r4)
   68118:	28c00017 	ldw	r3,0(r5)
   6811c:	10c0141e 	bne	r2,r3,68170 <strcmp+0x68>
   68120:	027fbff4 	movhi	r9,65279
   68124:	4a7fbfc4 	addi	r9,r9,-257
   68128:	0086303a 	nor	r3,zero,r2
   6812c:	02202074 	movhi	r8,32897
   68130:	1245883a 	add	r2,r2,r9
   68134:	42202004 	addi	r8,r8,-32640
   68138:	10c4703a 	and	r2,r2,r3
   6813c:	1204703a 	and	r2,r2,r8
   68140:	10000226 	beq	r2,zero,6814c <strcmp+0x44>
   68144:	00002306 	br	681d4 <strcmp+0xcc>
   68148:	1000221e 	bne	r2,zero,681d4 <strcmp+0xcc>
   6814c:	21000104 	addi	r4,r4,4
   68150:	20c00017 	ldw	r3,0(r4)
   68154:	29400104 	addi	r5,r5,4
   68158:	29800017 	ldw	r6,0(r5)
   6815c:	1a4f883a 	add	r7,r3,r9
   68160:	00c4303a 	nor	r2,zero,r3
   68164:	3884703a 	and	r2,r7,r2
   68168:	1204703a 	and	r2,r2,r8
   6816c:	19bff626 	beq	r3,r6,68148 <__alt_data_end+0xfffe8148>
   68170:	20800003 	ldbu	r2,0(r4)
   68174:	10c03fcc 	andi	r3,r2,255
   68178:	18c0201c 	xori	r3,r3,128
   6817c:	18ffe004 	addi	r3,r3,-128
   68180:	18000c26 	beq	r3,zero,681b4 <strcmp+0xac>
   68184:	29800007 	ldb	r6,0(r5)
   68188:	19800326 	beq	r3,r6,68198 <strcmp+0x90>
   6818c:	00001306 	br	681dc <strcmp+0xd4>
   68190:	29800007 	ldb	r6,0(r5)
   68194:	11800b1e 	bne	r2,r6,681c4 <strcmp+0xbc>
   68198:	21000044 	addi	r4,r4,1
   6819c:	20c00003 	ldbu	r3,0(r4)
   681a0:	29400044 	addi	r5,r5,1
   681a4:	18803fcc 	andi	r2,r3,255
   681a8:	1080201c 	xori	r2,r2,128
   681ac:	10bfe004 	addi	r2,r2,-128
   681b0:	103ff71e 	bne	r2,zero,68190 <__alt_data_end+0xfffe8190>
   681b4:	0007883a 	mov	r3,zero
   681b8:	28800003 	ldbu	r2,0(r5)
   681bc:	1885c83a 	sub	r2,r3,r2
   681c0:	f800283a 	ret
   681c4:	28800003 	ldbu	r2,0(r5)
   681c8:	18c03fcc 	andi	r3,r3,255
   681cc:	1885c83a 	sub	r2,r3,r2
   681d0:	f800283a 	ret
   681d4:	0005883a 	mov	r2,zero
   681d8:	f800283a 	ret
   681dc:	10c03fcc 	andi	r3,r2,255
   681e0:	003ff506 	br	681b8 <__alt_data_end+0xfffe81b8>

000681e4 <__sprint_r.part.0>:
   681e4:	28801917 	ldw	r2,100(r5)
   681e8:	defff604 	addi	sp,sp,-40
   681ec:	dd400515 	stw	r21,20(sp)
   681f0:	dfc00915 	stw	ra,36(sp)
   681f4:	df000815 	stw	fp,32(sp)
   681f8:	ddc00715 	stw	r23,28(sp)
   681fc:	dd800615 	stw	r22,24(sp)
   68200:	dd000415 	stw	r20,16(sp)
   68204:	dcc00315 	stw	r19,12(sp)
   68208:	dc800215 	stw	r18,8(sp)
   6820c:	dc400115 	stw	r17,4(sp)
   68210:	dc000015 	stw	r16,0(sp)
   68214:	1088000c 	andi	r2,r2,8192
   68218:	302b883a 	mov	r21,r6
   6821c:	10002e26 	beq	r2,zero,682d8 <__sprint_r.part.0+0xf4>
   68220:	30800217 	ldw	r2,8(r6)
   68224:	35800017 	ldw	r22,0(r6)
   68228:	10002926 	beq	r2,zero,682d0 <__sprint_r.part.0+0xec>
   6822c:	2827883a 	mov	r19,r5
   68230:	2029883a 	mov	r20,r4
   68234:	b5c00104 	addi	r23,r22,4
   68238:	04bfffc4 	movi	r18,-1
   6823c:	bc400017 	ldw	r17,0(r23)
   68240:	b4000017 	ldw	r16,0(r22)
   68244:	0039883a 	mov	fp,zero
   68248:	8822d0ba 	srli	r17,r17,2
   6824c:	8800031e 	bne	r17,zero,6825c <__sprint_r.part.0+0x78>
   68250:	00001806 	br	682b4 <__sprint_r.part.0+0xd0>
   68254:	84000104 	addi	r16,r16,4
   68258:	8f001526 	beq	r17,fp,682b0 <__sprint_r.part.0+0xcc>
   6825c:	81400017 	ldw	r5,0(r16)
   68260:	980d883a 	mov	r6,r19
   68264:	a009883a 	mov	r4,r20
   68268:	0069cd40 	call	69cd4 <_fputwc_r>
   6826c:	e7000044 	addi	fp,fp,1
   68270:	14bff81e 	bne	r2,r18,68254 <__alt_data_end+0xfffe8254>
   68274:	9005883a 	mov	r2,r18
   68278:	a8000215 	stw	zero,8(r21)
   6827c:	a8000115 	stw	zero,4(r21)
   68280:	dfc00917 	ldw	ra,36(sp)
   68284:	df000817 	ldw	fp,32(sp)
   68288:	ddc00717 	ldw	r23,28(sp)
   6828c:	dd800617 	ldw	r22,24(sp)
   68290:	dd400517 	ldw	r21,20(sp)
   68294:	dd000417 	ldw	r20,16(sp)
   68298:	dcc00317 	ldw	r19,12(sp)
   6829c:	dc800217 	ldw	r18,8(sp)
   682a0:	dc400117 	ldw	r17,4(sp)
   682a4:	dc000017 	ldw	r16,0(sp)
   682a8:	dec00a04 	addi	sp,sp,40
   682ac:	f800283a 	ret
   682b0:	a8800217 	ldw	r2,8(r21)
   682b4:	8c63883a 	add	r17,r17,r17
   682b8:	8c63883a 	add	r17,r17,r17
   682bc:	1445c83a 	sub	r2,r2,r17
   682c0:	a8800215 	stw	r2,8(r21)
   682c4:	b5800204 	addi	r22,r22,8
   682c8:	bdc00204 	addi	r23,r23,8
   682cc:	103fdb1e 	bne	r2,zero,6823c <__alt_data_end+0xfffe823c>
   682d0:	0005883a 	mov	r2,zero
   682d4:	003fe806 	br	68278 <__alt_data_end+0xfffe8278>
   682d8:	006548c0 	call	6548c <__sfvwrite_r>
   682dc:	003fe606 	br	68278 <__alt_data_end+0xfffe8278>

000682e0 <__sprint_r>:
   682e0:	30c00217 	ldw	r3,8(r6)
   682e4:	18000126 	beq	r3,zero,682ec <__sprint_r+0xc>
   682e8:	00681e41 	jmpi	681e4 <__sprint_r.part.0>
   682ec:	30000115 	stw	zero,4(r6)
   682f0:	0005883a 	mov	r2,zero
   682f4:	f800283a 	ret

000682f8 <___vfiprintf_internal_r>:
   682f8:	deffca04 	addi	sp,sp,-216
   682fc:	dd403115 	stw	r21,196(sp)
   68300:	dfc03515 	stw	ra,212(sp)
   68304:	df003415 	stw	fp,208(sp)
   68308:	ddc03315 	stw	r23,204(sp)
   6830c:	dd803215 	stw	r22,200(sp)
   68310:	dd003015 	stw	r20,192(sp)
   68314:	dcc02f15 	stw	r19,188(sp)
   68318:	dc802e15 	stw	r18,184(sp)
   6831c:	dc402d15 	stw	r17,180(sp)
   68320:	dc002c15 	stw	r16,176(sp)
   68324:	d9002115 	stw	r4,132(sp)
   68328:	d9402015 	stw	r5,128(sp)
   6832c:	d9c02215 	stw	r7,136(sp)
   68330:	302b883a 	mov	r21,r6
   68334:	20000226 	beq	r4,zero,68340 <___vfiprintf_internal_r+0x48>
   68338:	20800e17 	ldw	r2,56(r4)
   6833c:	1000cf26 	beq	r2,zero,6867c <___vfiprintf_internal_r+0x384>
   68340:	d8c02017 	ldw	r3,128(sp)
   68344:	1880030b 	ldhu	r2,12(r3)
   68348:	10c8000c 	andi	r3,r2,8192
   6834c:	1800071e 	bne	r3,zero,6836c <___vfiprintf_internal_r+0x74>
   68350:	d9402017 	ldw	r5,128(sp)
   68354:	00f7ffc4 	movi	r3,-8193
   68358:	10880014 	ori	r2,r2,8192
   6835c:	29001917 	ldw	r4,100(r5)
   68360:	2880030d 	sth	r2,12(r5)
   68364:	20c6703a 	and	r3,r4,r3
   68368:	28c01915 	stw	r3,100(r5)
   6836c:	10c0020c 	andi	r3,r2,8
   68370:	1800a526 	beq	r3,zero,68608 <___vfiprintf_internal_r+0x310>
   68374:	d9002017 	ldw	r4,128(sp)
   68378:	20c00417 	ldw	r3,16(r4)
   6837c:	1800a226 	beq	r3,zero,68608 <___vfiprintf_internal_r+0x310>
   68380:	1080068c 	andi	r2,r2,26
   68384:	00c00284 	movi	r3,10
   68388:	10c0a826 	beq	r2,r3,6862c <___vfiprintf_internal_r+0x334>
   6838c:	d9001a04 	addi	r4,sp,104
   68390:	d94019c4 	addi	r5,sp,103
   68394:	048001f4 	movhi	r18,7
   68398:	2145c83a 	sub	r2,r4,r5
   6839c:	9481e004 	addi	r18,r18,1920
   683a0:	d9001e15 	stw	r4,120(sp)
   683a4:	d9401f15 	stw	r5,124(sp)
   683a8:	dec01a15 	stw	sp,104(sp)
   683ac:	d8001c15 	stw	zero,112(sp)
   683b0:	d8001b15 	stw	zero,108(sp)
   683b4:	d811883a 	mov	r8,sp
   683b8:	d8002615 	stw	zero,152(sp)
   683bc:	d8002415 	stw	zero,144(sp)
   683c0:	d8802815 	stw	r2,160(sp)
   683c4:	a82d883a 	mov	r22,r21
   683c8:	b0800007 	ldb	r2,0(r22)
   683cc:	10040d26 	beq	r2,zero,69404 <___vfiprintf_internal_r+0x110c>
   683d0:	00c00944 	movi	r3,37
   683d4:	b029883a 	mov	r20,r22
   683d8:	10c0021e 	bne	r2,r3,683e4 <___vfiprintf_internal_r+0xec>
   683dc:	00001606 	br	68438 <___vfiprintf_internal_r+0x140>
   683e0:	10c00326 	beq	r2,r3,683f0 <___vfiprintf_internal_r+0xf8>
   683e4:	a5000044 	addi	r20,r20,1
   683e8:	a0800007 	ldb	r2,0(r20)
   683ec:	103ffc1e 	bne	r2,zero,683e0 <__alt_data_end+0xfffe83e0>
   683f0:	a5a1c83a 	sub	r16,r20,r22
   683f4:	80001026 	beq	r16,zero,68438 <___vfiprintf_internal_r+0x140>
   683f8:	d8c01c17 	ldw	r3,112(sp)
   683fc:	d8801b17 	ldw	r2,108(sp)
   68400:	45800015 	stw	r22,0(r8)
   68404:	80c7883a 	add	r3,r16,r3
   68408:	10800044 	addi	r2,r2,1
   6840c:	44000115 	stw	r16,4(r8)
   68410:	d8c01c15 	stw	r3,112(sp)
   68414:	d8801b15 	stw	r2,108(sp)
   68418:	010001c4 	movi	r4,7
   6841c:	2080750e 	bge	r4,r2,685f4 <___vfiprintf_internal_r+0x2fc>
   68420:	1803951e 	bne	r3,zero,69278 <___vfiprintf_internal_r+0xf80>
   68424:	d8c02417 	ldw	r3,144(sp)
   68428:	d8001b15 	stw	zero,108(sp)
   6842c:	d811883a 	mov	r8,sp
   68430:	1c07883a 	add	r3,r3,r16
   68434:	d8c02415 	stw	r3,144(sp)
   68438:	a0800007 	ldb	r2,0(r20)
   6843c:	1002e026 	beq	r2,zero,68fc0 <___vfiprintf_internal_r+0xcc8>
   68440:	a5800044 	addi	r22,r20,1
   68444:	a0c00047 	ldb	r3,1(r20)
   68448:	d8001d85 	stb	zero,118(sp)
   6844c:	0027883a 	mov	r19,zero
   68450:	d8002305 	stb	zero,140(sp)
   68454:	043fffc4 	movi	r16,-1
   68458:	d8002515 	stw	zero,148(sp)
   6845c:	0023883a 	mov	r17,zero
   68460:	05001604 	movi	r20,88
   68464:	05400244 	movi	r21,9
   68468:	402f883a 	mov	r23,r8
   6846c:	b5800044 	addi	r22,r22,1
   68470:	18bff804 	addi	r2,r3,-32
   68474:	a0827736 	bltu	r20,r2,68e54 <___vfiprintf_internal_r+0xb5c>
   68478:	100490ba 	slli	r2,r2,2
   6847c:	010001f4 	movhi	r4,7
   68480:	21212404 	addi	r4,r4,-31600
   68484:	1105883a 	add	r2,r2,r4
   68488:	10800017 	ldw	r2,0(r2)
   6848c:	1000683a 	jmp	r2
   68490:	00068b54 	movui	zero,6701
   68494:	00068e54 	movui	zero,6713
   68498:	00068e54 	movui	zero,6713
   6849c:	00068b70 	cmpltui	zero,zero,6701
   684a0:	00068e54 	movui	zero,6713
   684a4:	00068e54 	movui	zero,6713
   684a8:	00068e54 	movui	zero,6713
   684ac:	00068e54 	movui	zero,6713
   684b0:	00068e54 	movui	zero,6713
   684b4:	00068e54 	movui	zero,6713
   684b8:	00068d78 	rdprs	zero,zero,6709
   684bc:	00068d9c 	xori	zero,zero,6710
   684c0:	00068e54 	movui	zero,6713
   684c4:	00068694 	movui	zero,6682
   684c8:	00068db0 	cmpltui	zero,zero,6710
   684cc:	00068e54 	movui	zero,6713
   684d0:	00068b7c 	xorhi	zero,zero,6701
   684d4:	00068b88 	cmpgei	zero,zero,6702
   684d8:	00068b88 	cmpgei	zero,zero,6702
   684dc:	00068b88 	cmpgei	zero,zero,6702
   684e0:	00068b88 	cmpgei	zero,zero,6702
   684e4:	00068b88 	cmpgei	zero,zero,6702
   684e8:	00068b88 	cmpgei	zero,zero,6702
   684ec:	00068b88 	cmpgei	zero,zero,6702
   684f0:	00068b88 	cmpgei	zero,zero,6702
   684f4:	00068b88 	cmpgei	zero,zero,6702
   684f8:	00068e54 	movui	zero,6713
   684fc:	00068e54 	movui	zero,6713
   68500:	00068e54 	movui	zero,6713
   68504:	00068e54 	movui	zero,6713
   68508:	00068e54 	movui	zero,6713
   6850c:	00068e54 	movui	zero,6713
   68510:	00068e54 	movui	zero,6713
   68514:	00068e54 	movui	zero,6713
   68518:	00068e54 	movui	zero,6713
   6851c:	00068e54 	movui	zero,6713
   68520:	00068bc8 	cmpgei	zero,zero,6703
   68524:	00068e54 	movui	zero,6713
   68528:	00068e54 	movui	zero,6713
   6852c:	00068e54 	movui	zero,6713
   68530:	00068e54 	movui	zero,6713
   68534:	00068e54 	movui	zero,6713
   68538:	00068e54 	movui	zero,6713
   6853c:	00068e54 	movui	zero,6713
   68540:	00068e54 	movui	zero,6713
   68544:	00068e54 	movui	zero,6713
   68548:	00068e54 	movui	zero,6713
   6854c:	00068c04 	movi	zero,6704
   68550:	00068e54 	movui	zero,6713
   68554:	00068e54 	movui	zero,6713
   68558:	00068e54 	movui	zero,6713
   6855c:	00068e54 	movui	zero,6713
   68560:	00068e54 	movui	zero,6713
   68564:	00068c60 	cmpeqi	zero,zero,6705
   68568:	00068e54 	movui	zero,6713
   6856c:	00068e54 	movui	zero,6713
   68570:	00068cd4 	movui	zero,6707
   68574:	00068e54 	movui	zero,6713
   68578:	00068e54 	movui	zero,6713
   6857c:	00068e54 	movui	zero,6713
   68580:	00068e54 	movui	zero,6713
   68584:	00068e54 	movui	zero,6713
   68588:	00068e54 	movui	zero,6713
   6858c:	00068e54 	movui	zero,6713
   68590:	00068e54 	movui	zero,6713
   68594:	00068e54 	movui	zero,6713
   68598:	00068e54 	movui	zero,6713
   6859c:	00068a7c 	xorhi	zero,zero,6697
   685a0:	00068aac 	andhi	zero,zero,6698
   685a4:	00068e54 	movui	zero,6713
   685a8:	00068e54 	movui	zero,6713
   685ac:	00068e54 	movui	zero,6713
   685b0:	00068dfc 	xorhi	zero,zero,6711
   685b4:	00068aac 	andhi	zero,zero,6698
   685b8:	00068e54 	movui	zero,6713
   685bc:	00068e54 	movui	zero,6713
   685c0:	00068954 	movui	zero,6693
   685c4:	00068e54 	movui	zero,6713
   685c8:	00068968 	cmpgeui	zero,zero,6693
   685cc:	000689a0 	cmpeqi	zero,zero,6694
   685d0:	000686a0 	cmpeqi	zero,zero,6682
   685d4:	00068948 	cmpgei	zero,zero,6693
   685d8:	00068e54 	movui	zero,6713
   685dc:	00068d14 	movui	zero,6708
   685e0:	00068e54 	movui	zero,6713
   685e4:	00068d60 	cmpeqi	zero,zero,6709
   685e8:	00068e54 	movui	zero,6713
   685ec:	00068e54 	movui	zero,6713
   685f0:	00068a24 	muli	zero,zero,6696
   685f4:	42000204 	addi	r8,r8,8
   685f8:	d8c02417 	ldw	r3,144(sp)
   685fc:	1c07883a 	add	r3,r3,r16
   68600:	d8c02415 	stw	r3,144(sp)
   68604:	003f8c06 	br	68438 <__alt_data_end+0xfffe8438>
   68608:	d9402017 	ldw	r5,128(sp)
   6860c:	d9002117 	ldw	r4,132(sp)
   68610:	0062ffc0 	call	62ffc <__swsetup_r>
   68614:	1003c11e 	bne	r2,zero,6951c <___vfiprintf_internal_r+0x1224>
   68618:	d9402017 	ldw	r5,128(sp)
   6861c:	00c00284 	movi	r3,10
   68620:	2880030b 	ldhu	r2,12(r5)
   68624:	1080068c 	andi	r2,r2,26
   68628:	10ff581e 	bne	r2,r3,6838c <__alt_data_end+0xfffe838c>
   6862c:	d8c02017 	ldw	r3,128(sp)
   68630:	1880038f 	ldh	r2,14(r3)
   68634:	103f5516 	blt	r2,zero,6838c <__alt_data_end+0xfffe838c>
   68638:	d9c02217 	ldw	r7,136(sp)
   6863c:	d9002117 	ldw	r4,132(sp)
   68640:	a80d883a 	mov	r6,r21
   68644:	180b883a 	mov	r5,r3
   68648:	00698200 	call	69820 <__sbprintf>
   6864c:	dfc03517 	ldw	ra,212(sp)
   68650:	df003417 	ldw	fp,208(sp)
   68654:	ddc03317 	ldw	r23,204(sp)
   68658:	dd803217 	ldw	r22,200(sp)
   6865c:	dd403117 	ldw	r21,196(sp)
   68660:	dd003017 	ldw	r20,192(sp)
   68664:	dcc02f17 	ldw	r19,188(sp)
   68668:	dc802e17 	ldw	r18,184(sp)
   6866c:	dc402d17 	ldw	r17,180(sp)
   68670:	dc002c17 	ldw	r16,176(sp)
   68674:	dec03604 	addi	sp,sp,216
   68678:	f800283a 	ret
   6867c:	00650080 	call	65008 <__sinit>
   68680:	003f2f06 	br	68340 <__alt_data_end+0xfffe8340>
   68684:	d8c02517 	ldw	r3,148(sp)
   68688:	d8802215 	stw	r2,136(sp)
   6868c:	00c7c83a 	sub	r3,zero,r3
   68690:	d8c02515 	stw	r3,148(sp)
   68694:	8c400114 	ori	r17,r17,4
   68698:	b0c00007 	ldb	r3,0(r22)
   6869c:	003f7306 	br	6846c <__alt_data_end+0xfffe846c>
   686a0:	00800c04 	movi	r2,48
   686a4:	d9402217 	ldw	r5,136(sp)
   686a8:	d8801d05 	stb	r2,116(sp)
   686ac:	00801e04 	movi	r2,120
   686b0:	d8801d45 	stb	r2,117(sp)
   686b4:	d8001d85 	stb	zero,118(sp)
   686b8:	b811883a 	mov	r8,r23
   686bc:	28c00104 	addi	r3,r5,4
   686c0:	2cc00017 	ldw	r19,0(r5)
   686c4:	0029883a 	mov	r20,zero
   686c8:	88800094 	ori	r2,r17,2
   686cc:	80032516 	blt	r16,zero,69364 <___vfiprintf_internal_r+0x106c>
   686d0:	00bfdfc4 	movi	r2,-129
   686d4:	88a2703a 	and	r17,r17,r2
   686d8:	d8c02215 	stw	r3,136(sp)
   686dc:	8c400094 	ori	r17,r17,2
   686e0:	98032a1e 	bne	r19,zero,6938c <___vfiprintf_internal_r+0x1094>
   686e4:	008001f4 	movhi	r2,7
   686e8:	10817f04 	addi	r2,r2,1532
   686ec:	d8802615 	stw	r2,152(sp)
   686f0:	002b883a 	mov	r21,zero
   686f4:	8001741e 	bne	r16,zero,68cc8 <___vfiprintf_internal_r+0x9d0>
   686f8:	0021883a 	mov	r16,zero
   686fc:	0029883a 	mov	r20,zero
   68700:	ddc01a04 	addi	r23,sp,104
   68704:	8027883a 	mov	r19,r16
   68708:	8500010e 	bge	r16,r20,68710 <___vfiprintf_internal_r+0x418>
   6870c:	a027883a 	mov	r19,r20
   68710:	ad403fcc 	andi	r21,r21,255
   68714:	ad40201c 	xori	r21,r21,128
   68718:	ad7fe004 	addi	r21,r21,-128
   6871c:	a8000126 	beq	r21,zero,68724 <___vfiprintf_internal_r+0x42c>
   68720:	9cc00044 	addi	r19,r19,1
   68724:	89c0008c 	andi	r7,r17,2
   68728:	38000126 	beq	r7,zero,68730 <___vfiprintf_internal_r+0x438>
   6872c:	9cc00084 	addi	r19,r19,2
   68730:	88c0210c 	andi	r3,r17,132
   68734:	1801dd1e 	bne	r3,zero,68eac <___vfiprintf_internal_r+0xbb4>
   68738:	d9402517 	ldw	r5,148(sp)
   6873c:	2cebc83a 	sub	r21,r5,r19
   68740:	0541da0e 	bge	zero,r21,68eac <___vfiprintf_internal_r+0xbb4>
   68744:	07000404 	movi	fp,16
   68748:	d8801c17 	ldw	r2,112(sp)
   6874c:	e543be0e 	bge	fp,r21,69648 <___vfiprintf_internal_r+0x1350>
   68750:	014001f4 	movhi	r5,7
   68754:	2941e404 	addi	r5,r5,1936
   68758:	dc002715 	stw	r16,156(sp)
   6875c:	d9801b17 	ldw	r6,108(sp)
   68760:	a821883a 	mov	r16,r21
   68764:	d9402315 	stw	r5,140(sp)
   68768:	028001c4 	movi	r10,7
   6876c:	d9c02915 	stw	r7,164(sp)
   68770:	182b883a 	mov	r21,r3
   68774:	00000506 	br	6878c <___vfiprintf_internal_r+0x494>
   68778:	31000084 	addi	r4,r6,2
   6877c:	42000204 	addi	r8,r8,8
   68780:	180d883a 	mov	r6,r3
   68784:	843ffc04 	addi	r16,r16,-16
   68788:	e4000f0e 	bge	fp,r16,687c8 <___vfiprintf_internal_r+0x4d0>
   6878c:	010001f4 	movhi	r4,7
   68790:	10800404 	addi	r2,r2,16
   68794:	30c00044 	addi	r3,r6,1
   68798:	2101e404 	addi	r4,r4,1936
   6879c:	41000015 	stw	r4,0(r8)
   687a0:	47000115 	stw	fp,4(r8)
   687a4:	d8801c15 	stw	r2,112(sp)
   687a8:	d8c01b15 	stw	r3,108(sp)
   687ac:	50fff20e 	bge	r10,r3,68778 <__alt_data_end+0xfffe8778>
   687b0:	1001b21e 	bne	r2,zero,68e7c <___vfiprintf_internal_r+0xb84>
   687b4:	843ffc04 	addi	r16,r16,-16
   687b8:	000d883a 	mov	r6,zero
   687bc:	01000044 	movi	r4,1
   687c0:	d811883a 	mov	r8,sp
   687c4:	e43ff116 	blt	fp,r16,6878c <__alt_data_end+0xfffe878c>
   687c8:	a807883a 	mov	r3,r21
   687cc:	d9c02917 	ldw	r7,164(sp)
   687d0:	802b883a 	mov	r21,r16
   687d4:	dc002717 	ldw	r16,156(sp)
   687d8:	d9402317 	ldw	r5,140(sp)
   687dc:	a885883a 	add	r2,r21,r2
   687e0:	45400115 	stw	r21,4(r8)
   687e4:	41400015 	stw	r5,0(r8)
   687e8:	d8801c15 	stw	r2,112(sp)
   687ec:	d9001b15 	stw	r4,108(sp)
   687f0:	014001c4 	movi	r5,7
   687f4:	29026216 	blt	r5,r4,69180 <___vfiprintf_internal_r+0xe88>
   687f8:	d9801d87 	ldb	r6,118(sp)
   687fc:	42000204 	addi	r8,r8,8
   68800:	21400044 	addi	r5,r4,1
   68804:	3001ae1e 	bne	r6,zero,68ec0 <___vfiprintf_internal_r+0xbc8>
   68808:	3801bb26 	beq	r7,zero,68ef8 <___vfiprintf_internal_r+0xc00>
   6880c:	d9001d04 	addi	r4,sp,116
   68810:	10800084 	addi	r2,r2,2
   68814:	41000015 	stw	r4,0(r8)
   68818:	01000084 	movi	r4,2
   6881c:	41000115 	stw	r4,4(r8)
   68820:	d8801c15 	stw	r2,112(sp)
   68824:	d9401b15 	stw	r5,108(sp)
   68828:	010001c4 	movi	r4,7
   6882c:	2142680e 	bge	r4,r5,691d0 <___vfiprintf_internal_r+0xed8>
   68830:	1002b11e 	bne	r2,zero,692f8 <___vfiprintf_internal_r+0x1000>
   68834:	01802004 	movi	r6,128
   68838:	01400044 	movi	r5,1
   6883c:	0009883a 	mov	r4,zero
   68840:	d811883a 	mov	r8,sp
   68844:	1981ae1e 	bne	r3,r6,68f00 <___vfiprintf_internal_r+0xc08>
   68848:	d8c02517 	ldw	r3,148(sp)
   6884c:	1cf9c83a 	sub	fp,r3,r19
   68850:	0701ab0e 	bge	zero,fp,68f00 <___vfiprintf_internal_r+0xc08>
   68854:	05400404 	movi	r21,16
   68858:	af03a90e 	bge	r21,fp,69700 <___vfiprintf_internal_r+0x1408>
   6885c:	014001f4 	movhi	r5,7
   68860:	2941e004 	addi	r5,r5,1920
   68864:	d9402315 	stw	r5,140(sp)
   68868:	01c001c4 	movi	r7,7
   6886c:	00000506 	br	68884 <___vfiprintf_internal_r+0x58c>
   68870:	21800084 	addi	r6,r4,2
   68874:	42000204 	addi	r8,r8,8
   68878:	1809883a 	mov	r4,r3
   6887c:	e73ffc04 	addi	fp,fp,-16
   68880:	af000d0e 	bge	r21,fp,688b8 <___vfiprintf_internal_r+0x5c0>
   68884:	10800404 	addi	r2,r2,16
   68888:	20c00044 	addi	r3,r4,1
   6888c:	44800015 	stw	r18,0(r8)
   68890:	45400115 	stw	r21,4(r8)
   68894:	d8801c15 	stw	r2,112(sp)
   68898:	d8c01b15 	stw	r3,108(sp)
   6889c:	38fff40e 	bge	r7,r3,68870 <__alt_data_end+0xfffe8870>
   688a0:	10022b1e 	bne	r2,zero,69150 <___vfiprintf_internal_r+0xe58>
   688a4:	e73ffc04 	addi	fp,fp,-16
   688a8:	01800044 	movi	r6,1
   688ac:	0009883a 	mov	r4,zero
   688b0:	d811883a 	mov	r8,sp
   688b4:	af3ff316 	blt	r21,fp,68884 <__alt_data_end+0xfffe8884>
   688b8:	d8c02317 	ldw	r3,140(sp)
   688bc:	1705883a 	add	r2,r2,fp
   688c0:	47000115 	stw	fp,4(r8)
   688c4:	40c00015 	stw	r3,0(r8)
   688c8:	d8801c15 	stw	r2,112(sp)
   688cc:	d9801b15 	stw	r6,108(sp)
   688d0:	00c001c4 	movi	r3,7
   688d4:	19829416 	blt	r3,r6,69328 <___vfiprintf_internal_r+0x1030>
   688d8:	8521c83a 	sub	r16,r16,r20
   688dc:	42000204 	addi	r8,r8,8
   688e0:	31400044 	addi	r5,r6,1
   688e4:	3009883a 	mov	r4,r6
   688e8:	04018716 	blt	zero,r16,68f08 <___vfiprintf_internal_r+0xc10>
   688ec:	a085883a 	add	r2,r20,r2
   688f0:	45c00015 	stw	r23,0(r8)
   688f4:	45000115 	stw	r20,4(r8)
   688f8:	d8801c15 	stw	r2,112(sp)
   688fc:	d9401b15 	stw	r5,108(sp)
   68900:	00c001c4 	movi	r3,7
   68904:	1941c20e 	bge	r3,r5,69010 <___vfiprintf_internal_r+0xd18>
   68908:	1002531e 	bne	r2,zero,69258 <___vfiprintf_internal_r+0xf60>
   6890c:	d8001b15 	stw	zero,108(sp)
   68910:	8c40010c 	andi	r17,r17,4
   68914:	88023226 	beq	r17,zero,691e0 <___vfiprintf_internal_r+0xee8>
   68918:	d9002517 	ldw	r4,148(sp)
   6891c:	24e3c83a 	sub	r17,r4,r19
   68920:	04432916 	blt	zero,r17,695c8 <___vfiprintf_internal_r+0x12d0>
   68924:	d8802517 	ldw	r2,148(sp)
   68928:	14c0010e 	bge	r2,r19,68930 <___vfiprintf_internal_r+0x638>
   6892c:	9805883a 	mov	r2,r19
   68930:	d8c02417 	ldw	r3,144(sp)
   68934:	1887883a 	add	r3,r3,r2
   68938:	d8c02415 	stw	r3,144(sp)
   6893c:	d8001b15 	stw	zero,108(sp)
   68940:	d811883a 	mov	r8,sp
   68944:	003ea006 	br	683c8 <__alt_data_end+0xfffe83c8>
   68948:	8c400814 	ori	r17,r17,32
   6894c:	b0c00007 	ldb	r3,0(r22)
   68950:	003ec606 	br	6846c <__alt_data_end+0xfffe846c>
   68954:	b0c00007 	ldb	r3,0(r22)
   68958:	00801b04 	movi	r2,108
   6895c:	18832026 	beq	r3,r2,695e0 <___vfiprintf_internal_r+0x12e8>
   68960:	8c400414 	ori	r17,r17,16
   68964:	003ec106 	br	6846c <__alt_data_end+0xfffe846c>
   68968:	9cc03fcc 	andi	r19,r19,255
   6896c:	b811883a 	mov	r8,r23
   68970:	9803981e 	bne	r19,zero,697d4 <___vfiprintf_internal_r+0x14dc>
   68974:	8880080c 	andi	r2,r17,32
   68978:	1002be26 	beq	r2,zero,69474 <___vfiprintf_internal_r+0x117c>
   6897c:	d9002217 	ldw	r4,136(sp)
   68980:	d9402417 	ldw	r5,144(sp)
   68984:	20800017 	ldw	r2,0(r4)
   68988:	2807d7fa 	srai	r3,r5,31
   6898c:	21000104 	addi	r4,r4,4
   68990:	d9002215 	stw	r4,136(sp)
   68994:	11400015 	stw	r5,0(r2)
   68998:	10c00115 	stw	r3,4(r2)
   6899c:	003e8a06 	br	683c8 <__alt_data_end+0xfffe83c8>
   689a0:	9cc03fcc 	andi	r19,r19,255
   689a4:	b811883a 	mov	r8,r23
   689a8:	9803871e 	bne	r19,zero,697c8 <___vfiprintf_internal_r+0x14d0>
   689ac:	8880080c 	andi	r2,r17,32
   689b0:	10009a26 	beq	r2,zero,68c1c <___vfiprintf_internal_r+0x924>
   689b4:	d9002217 	ldw	r4,136(sp)
   689b8:	d8001d85 	stb	zero,118(sp)
   689bc:	20800204 	addi	r2,r4,8
   689c0:	24c00017 	ldw	r19,0(r4)
   689c4:	25000117 	ldw	r20,4(r4)
   689c8:	8002a416 	blt	r16,zero,6945c <___vfiprintf_internal_r+0x1164>
   689cc:	013fdfc4 	movi	r4,-129
   689d0:	9d06b03a 	or	r3,r19,r20
   689d4:	d8802215 	stw	r2,136(sp)
   689d8:	8922703a 	and	r17,r17,r4
   689dc:	18009b26 	beq	r3,zero,68c4c <___vfiprintf_internal_r+0x954>
   689e0:	002b883a 	mov	r21,zero
   689e4:	ddc01a04 	addi	r23,sp,104
   689e8:	9806d0fa 	srli	r3,r19,3
   689ec:	a008977a 	slli	r4,r20,29
   689f0:	a028d0fa 	srli	r20,r20,3
   689f4:	9cc001cc 	andi	r19,r19,7
   689f8:	98800c04 	addi	r2,r19,48
   689fc:	bdffffc4 	addi	r23,r23,-1
   68a00:	20e6b03a 	or	r19,r4,r3
   68a04:	b8800005 	stb	r2,0(r23)
   68a08:	9d06b03a 	or	r3,r19,r20
   68a0c:	183ff61e 	bne	r3,zero,689e8 <__alt_data_end+0xfffe89e8>
   68a10:	88c0004c 	andi	r3,r17,1
   68a14:	18021f1e 	bne	r3,zero,69294 <___vfiprintf_internal_r+0xf9c>
   68a18:	d9401e17 	ldw	r5,120(sp)
   68a1c:	2de9c83a 	sub	r20,r5,r23
   68a20:	003f3806 	br	68704 <__alt_data_end+0xfffe8704>
   68a24:	9cc03fcc 	andi	r19,r19,255
   68a28:	b811883a 	mov	r8,r23
   68a2c:	98034f1e 	bne	r19,zero,6976c <___vfiprintf_internal_r+0x1474>
   68a30:	008001f4 	movhi	r2,7
   68a34:	10817f04 	addi	r2,r2,1532
   68a38:	d8802615 	stw	r2,152(sp)
   68a3c:	8880080c 	andi	r2,r17,32
   68a40:	1000ac26 	beq	r2,zero,68cf4 <___vfiprintf_internal_r+0x9fc>
   68a44:	d9002217 	ldw	r4,136(sp)
   68a48:	24c00017 	ldw	r19,0(r4)
   68a4c:	25000117 	ldw	r20,4(r4)
   68a50:	21000204 	addi	r4,r4,8
   68a54:	d9002215 	stw	r4,136(sp)
   68a58:	8880004c 	andi	r2,r17,1
   68a5c:	1001e726 	beq	r2,zero,691fc <___vfiprintf_internal_r+0xf04>
   68a60:	9d04b03a 	or	r2,r19,r20
   68a64:	10025c1e 	bne	r2,zero,693d8 <___vfiprintf_internal_r+0x10e0>
   68a68:	d8001d85 	stb	zero,118(sp)
   68a6c:	80024416 	blt	r16,zero,69380 <___vfiprintf_internal_r+0x1088>
   68a70:	00bfdfc4 	movi	r2,-129
   68a74:	88a2703a 	and	r17,r17,r2
   68a78:	003f1d06 	br	686f0 <__alt_data_end+0xfffe86f0>
   68a7c:	d8c02217 	ldw	r3,136(sp)
   68a80:	04c00044 	movi	r19,1
   68a84:	b811883a 	mov	r8,r23
   68a88:	18800017 	ldw	r2,0(r3)
   68a8c:	18c00104 	addi	r3,r3,4
   68a90:	d8001d85 	stb	zero,118(sp)
   68a94:	d8801005 	stb	r2,64(sp)
   68a98:	d8c02215 	stw	r3,136(sp)
   68a9c:	9829883a 	mov	r20,r19
   68aa0:	ddc01004 	addi	r23,sp,64
   68aa4:	0021883a 	mov	r16,zero
   68aa8:	003f1e06 	br	68724 <__alt_data_end+0xfffe8724>
   68aac:	9cc03fcc 	andi	r19,r19,255
   68ab0:	b811883a 	mov	r8,r23
   68ab4:	9803331e 	bne	r19,zero,69784 <___vfiprintf_internal_r+0x148c>
   68ab8:	8880080c 	andi	r2,r17,32
   68abc:	10004826 	beq	r2,zero,68be0 <___vfiprintf_internal_r+0x8e8>
   68ac0:	d9002217 	ldw	r4,136(sp)
   68ac4:	20800117 	ldw	r2,4(r4)
   68ac8:	24c00017 	ldw	r19,0(r4)
   68acc:	21000204 	addi	r4,r4,8
   68ad0:	d9002215 	stw	r4,136(sp)
   68ad4:	1029883a 	mov	r20,r2
   68ad8:	10024c16 	blt	r2,zero,6940c <___vfiprintf_internal_r+0x1114>
   68adc:	dd401d83 	ldbu	r21,118(sp)
   68ae0:	80007116 	blt	r16,zero,68ca8 <___vfiprintf_internal_r+0x9b0>
   68ae4:	00ffdfc4 	movi	r3,-129
   68ae8:	9d04b03a 	or	r2,r19,r20
   68aec:	88e2703a 	and	r17,r17,r3
   68af0:	1000d126 	beq	r2,zero,68e38 <___vfiprintf_internal_r+0xb40>
   68af4:	a0023526 	beq	r20,zero,693cc <___vfiprintf_internal_r+0x10d4>
   68af8:	ddc01a04 	addi	r23,sp,104
   68afc:	4039883a 	mov	fp,r8
   68b00:	9809883a 	mov	r4,r19
   68b04:	a00b883a 	mov	r5,r20
   68b08:	01800284 	movi	r6,10
   68b0c:	000f883a 	mov	r7,zero
   68b10:	006a8240 	call	6a824 <__umoddi3>
   68b14:	10800c04 	addi	r2,r2,48
   68b18:	bdffffc4 	addi	r23,r23,-1
   68b1c:	9809883a 	mov	r4,r19
   68b20:	a00b883a 	mov	r5,r20
   68b24:	b8800005 	stb	r2,0(r23)
   68b28:	01800284 	movi	r6,10
   68b2c:	000f883a 	mov	r7,zero
   68b30:	006a2280 	call	6a228 <__udivdi3>
   68b34:	1027883a 	mov	r19,r2
   68b38:	10c4b03a 	or	r2,r2,r3
   68b3c:	1829883a 	mov	r20,r3
   68b40:	103fef1e 	bne	r2,zero,68b00 <__alt_data_end+0xfffe8b00>
   68b44:	d9001e17 	ldw	r4,120(sp)
   68b48:	e011883a 	mov	r8,fp
   68b4c:	25e9c83a 	sub	r20,r4,r23
   68b50:	003eec06 	br	68704 <__alt_data_end+0xfffe8704>
   68b54:	d8802307 	ldb	r2,140(sp)
   68b58:	1002361e 	bne	r2,zero,69434 <___vfiprintf_internal_r+0x113c>
   68b5c:	00c00804 	movi	r3,32
   68b60:	d8c02305 	stb	r3,140(sp)
   68b64:	04c00044 	movi	r19,1
   68b68:	b0c00007 	ldb	r3,0(r22)
   68b6c:	003e3f06 	br	6846c <__alt_data_end+0xfffe846c>
   68b70:	8c400054 	ori	r17,r17,1
   68b74:	b0c00007 	ldb	r3,0(r22)
   68b78:	003e3c06 	br	6846c <__alt_data_end+0xfffe846c>
   68b7c:	8c402014 	ori	r17,r17,128
   68b80:	b0c00007 	ldb	r3,0(r22)
   68b84:	003e3906 	br	6846c <__alt_data_end+0xfffe846c>
   68b88:	dc002715 	stw	r16,156(sp)
   68b8c:	d8002515 	stw	zero,148(sp)
   68b90:	1f3ff404 	addi	fp,r3,-48
   68b94:	0009883a 	mov	r4,zero
   68b98:	b021883a 	mov	r16,r22
   68b9c:	01400284 	movi	r5,10
   68ba0:	00609000 	call	60900 <__mulsi3>
   68ba4:	80c00007 	ldb	r3,0(r16)
   68ba8:	e089883a 	add	r4,fp,r2
   68bac:	b5800044 	addi	r22,r22,1
   68bb0:	1f3ff404 	addi	fp,r3,-48
   68bb4:	b021883a 	mov	r16,r22
   68bb8:	af3ff82e 	bgeu	r21,fp,68b9c <__alt_data_end+0xfffe8b9c>
   68bbc:	d9002515 	stw	r4,148(sp)
   68bc0:	dc002717 	ldw	r16,156(sp)
   68bc4:	003e2a06 	br	68470 <__alt_data_end+0xfffe8470>
   68bc8:	9cc03fcc 	andi	r19,r19,255
   68bcc:	b811883a 	mov	r8,r23
   68bd0:	9802e91e 	bne	r19,zero,69778 <___vfiprintf_internal_r+0x1480>
   68bd4:	8c400414 	ori	r17,r17,16
   68bd8:	8880080c 	andi	r2,r17,32
   68bdc:	103fb81e 	bne	r2,zero,68ac0 <__alt_data_end+0xfffe8ac0>
   68be0:	8880040c 	andi	r2,r17,16
   68be4:	10022e26 	beq	r2,zero,694a0 <___vfiprintf_internal_r+0x11a8>
   68be8:	d9402217 	ldw	r5,136(sp)
   68bec:	2cc00017 	ldw	r19,0(r5)
   68bf0:	29400104 	addi	r5,r5,4
   68bf4:	d9402215 	stw	r5,136(sp)
   68bf8:	9829d7fa 	srai	r20,r19,31
   68bfc:	a005883a 	mov	r2,r20
   68c00:	003fb506 	br	68ad8 <__alt_data_end+0xfffe8ad8>
   68c04:	9cc03fcc 	andi	r19,r19,255
   68c08:	b811883a 	mov	r8,r23
   68c0c:	9802fa1e 	bne	r19,zero,697f8 <___vfiprintf_internal_r+0x1500>
   68c10:	8c400414 	ori	r17,r17,16
   68c14:	8880080c 	andi	r2,r17,32
   68c18:	103f661e 	bne	r2,zero,689b4 <__alt_data_end+0xfffe89b4>
   68c1c:	8880040c 	andi	r2,r17,16
   68c20:	10020626 	beq	r2,zero,6943c <___vfiprintf_internal_r+0x1144>
   68c24:	d9402217 	ldw	r5,136(sp)
   68c28:	d8001d85 	stb	zero,118(sp)
   68c2c:	0029883a 	mov	r20,zero
   68c30:	28800104 	addi	r2,r5,4
   68c34:	2cc00017 	ldw	r19,0(r5)
   68c38:	80020816 	blt	r16,zero,6945c <___vfiprintf_internal_r+0x1164>
   68c3c:	00ffdfc4 	movi	r3,-129
   68c40:	d8802215 	stw	r2,136(sp)
   68c44:	88e2703a 	and	r17,r17,r3
   68c48:	983f651e 	bne	r19,zero,689e0 <__alt_data_end+0xfffe89e0>
   68c4c:	002b883a 	mov	r21,zero
   68c50:	8002cf26 	beq	r16,zero,69790 <___vfiprintf_internal_r+0x1498>
   68c54:	0027883a 	mov	r19,zero
   68c58:	0029883a 	mov	r20,zero
   68c5c:	003f6106 	br	689e4 <__alt_data_end+0xfffe89e4>
   68c60:	9cc03fcc 	andi	r19,r19,255
   68c64:	b811883a 	mov	r8,r23
   68c68:	9802e01e 	bne	r19,zero,697ec <___vfiprintf_internal_r+0x14f4>
   68c6c:	8c400414 	ori	r17,r17,16
   68c70:	8880080c 	andi	r2,r17,32
   68c74:	1000641e 	bne	r2,zero,68e08 <___vfiprintf_internal_r+0xb10>
   68c78:	8880040c 	andi	r2,r17,16
   68c7c:	1001c81e 	bne	r2,zero,693a0 <___vfiprintf_internal_r+0x10a8>
   68c80:	8880100c 	andi	r2,r17,64
   68c84:	d8001d85 	stb	zero,118(sp)
   68c88:	1002281e 	bne	r2,zero,6952c <___vfiprintf_internal_r+0x1234>
   68c8c:	d9002217 	ldw	r4,136(sp)
   68c90:	0029883a 	mov	r20,zero
   68c94:	20800104 	addi	r2,r4,4
   68c98:	24c00017 	ldw	r19,0(r4)
   68c9c:	8001c60e 	bge	r16,zero,693b8 <___vfiprintf_internal_r+0x10c0>
   68ca0:	d8802215 	stw	r2,136(sp)
   68ca4:	002b883a 	mov	r21,zero
   68ca8:	9d04b03a 	or	r2,r19,r20
   68cac:	103f911e 	bne	r2,zero,68af4 <__alt_data_end+0xfffe8af4>
   68cb0:	00800044 	movi	r2,1
   68cb4:	10803fcc 	andi	r2,r2,255
   68cb8:	00c00044 	movi	r3,1
   68cbc:	10c05f26 	beq	r2,r3,68e3c <___vfiprintf_internal_r+0xb44>
   68cc0:	00c00084 	movi	r3,2
   68cc4:	10ffe31e 	bne	r2,r3,68c54 <__alt_data_end+0xfffe8c54>
   68cc8:	0027883a 	mov	r19,zero
   68ccc:	0029883a 	mov	r20,zero
   68cd0:	00015106 	br	69218 <___vfiprintf_internal_r+0xf20>
   68cd4:	9cc03fcc 	andi	r19,r19,255
   68cd8:	b811883a 	mov	r8,r23
   68cdc:	9802c01e 	bne	r19,zero,697e0 <___vfiprintf_internal_r+0x14e8>
   68ce0:	014001f4 	movhi	r5,7
   68ce4:	29417a04 	addi	r5,r5,1512
   68ce8:	d9402615 	stw	r5,152(sp)
   68cec:	8880080c 	andi	r2,r17,32
   68cf0:	103f541e 	bne	r2,zero,68a44 <__alt_data_end+0xfffe8a44>
   68cf4:	8880040c 	andi	r2,r17,16
   68cf8:	1001f226 	beq	r2,zero,694c4 <___vfiprintf_internal_r+0x11cc>
   68cfc:	d9402217 	ldw	r5,136(sp)
   68d00:	0029883a 	mov	r20,zero
   68d04:	2cc00017 	ldw	r19,0(r5)
   68d08:	29400104 	addi	r5,r5,4
   68d0c:	d9402215 	stw	r5,136(sp)
   68d10:	003f5106 	br	68a58 <__alt_data_end+0xfffe8a58>
   68d14:	d8c02217 	ldw	r3,136(sp)
   68d18:	b811883a 	mov	r8,r23
   68d1c:	d8001d85 	stb	zero,118(sp)
   68d20:	1dc00017 	ldw	r23,0(r3)
   68d24:	1f000104 	addi	fp,r3,4
   68d28:	b8025926 	beq	r23,zero,69690 <___vfiprintf_internal_r+0x1398>
   68d2c:	80023316 	blt	r16,zero,695fc <___vfiprintf_internal_r+0x1304>
   68d30:	800d883a 	mov	r6,r16
   68d34:	000b883a 	mov	r5,zero
   68d38:	b809883a 	mov	r4,r23
   68d3c:	da002a15 	stw	r8,168(sp)
   68d40:	00665800 	call	66580 <memchr>
   68d44:	da002a17 	ldw	r8,168(sp)
   68d48:	10026826 	beq	r2,zero,696ec <___vfiprintf_internal_r+0x13f4>
   68d4c:	15e9c83a 	sub	r20,r2,r23
   68d50:	dd401d83 	ldbu	r21,118(sp)
   68d54:	df002215 	stw	fp,136(sp)
   68d58:	0021883a 	mov	r16,zero
   68d5c:	003e6906 	br	68704 <__alt_data_end+0xfffe8704>
   68d60:	9cc03fcc 	andi	r19,r19,255
   68d64:	b811883a 	mov	r8,r23
   68d68:	983fc126 	beq	r19,zero,68c70 <__alt_data_end+0xfffe8c70>
   68d6c:	d8c02303 	ldbu	r3,140(sp)
   68d70:	d8c01d85 	stb	r3,118(sp)
   68d74:	003fbe06 	br	68c70 <__alt_data_end+0xfffe8c70>
   68d78:	d9002217 	ldw	r4,136(sp)
   68d7c:	d9402217 	ldw	r5,136(sp)
   68d80:	21000017 	ldw	r4,0(r4)
   68d84:	28800104 	addi	r2,r5,4
   68d88:	d9002515 	stw	r4,148(sp)
   68d8c:	203e3d16 	blt	r4,zero,68684 <__alt_data_end+0xfffe8684>
   68d90:	d8802215 	stw	r2,136(sp)
   68d94:	b0c00007 	ldb	r3,0(r22)
   68d98:	003db406 	br	6846c <__alt_data_end+0xfffe846c>
   68d9c:	00c00ac4 	movi	r3,43
   68da0:	d8c02305 	stb	r3,140(sp)
   68da4:	04c00044 	movi	r19,1
   68da8:	b0c00007 	ldb	r3,0(r22)
   68dac:	003daf06 	br	6846c <__alt_data_end+0xfffe846c>
   68db0:	b0c00007 	ldb	r3,0(r22)
   68db4:	01000a84 	movi	r4,42
   68db8:	b4000044 	addi	r16,r22,1
   68dbc:	19025e26 	beq	r3,r4,69738 <___vfiprintf_internal_r+0x1440>
   68dc0:	1f3ff404 	addi	fp,r3,-48
   68dc4:	0009883a 	mov	r4,zero
   68dc8:	af025236 	bltu	r21,fp,69714 <___vfiprintf_internal_r+0x141c>
   68dcc:	01400284 	movi	r5,10
   68dd0:	00609000 	call	60900 <__mulsi3>
   68dd4:	80c00007 	ldb	r3,0(r16)
   68dd8:	1709883a 	add	r4,r2,fp
   68ddc:	85800044 	addi	r22,r16,1
   68de0:	1f3ff404 	addi	fp,r3,-48
   68de4:	b021883a 	mov	r16,r22
   68de8:	af3ff82e 	bgeu	r21,fp,68dcc <__alt_data_end+0xfffe8dcc>
   68dec:	2021883a 	mov	r16,r4
   68df0:	203d9f0e 	bge	r4,zero,68470 <__alt_data_end+0xfffe8470>
   68df4:	043fffc4 	movi	r16,-1
   68df8:	003d9d06 	br	68470 <__alt_data_end+0xfffe8470>
   68dfc:	8c401014 	ori	r17,r17,64
   68e00:	b0c00007 	ldb	r3,0(r22)
   68e04:	003d9906 	br	6846c <__alt_data_end+0xfffe846c>
   68e08:	d9002217 	ldw	r4,136(sp)
   68e0c:	d8001d85 	stb	zero,118(sp)
   68e10:	20c00204 	addi	r3,r4,8
   68e14:	24c00017 	ldw	r19,0(r4)
   68e18:	25000117 	ldw	r20,4(r4)
   68e1c:	8001e716 	blt	r16,zero,695bc <___vfiprintf_internal_r+0x12c4>
   68e20:	013fdfc4 	movi	r4,-129
   68e24:	9d04b03a 	or	r2,r19,r20
   68e28:	d8c02215 	stw	r3,136(sp)
   68e2c:	8922703a 	and	r17,r17,r4
   68e30:	002b883a 	mov	r21,zero
   68e34:	103f2f1e 	bne	r2,zero,68af4 <__alt_data_end+0xfffe8af4>
   68e38:	803e2f26 	beq	r16,zero,686f8 <__alt_data_end+0xfffe86f8>
   68e3c:	0027883a 	mov	r19,zero
   68e40:	9cc00c04 	addi	r19,r19,48
   68e44:	dcc019c5 	stb	r19,103(sp)
   68e48:	dd002817 	ldw	r20,160(sp)
   68e4c:	ddc019c4 	addi	r23,sp,103
   68e50:	003e2c06 	br	68704 <__alt_data_end+0xfffe8704>
   68e54:	9cc03fcc 	andi	r19,r19,255
   68e58:	b811883a 	mov	r8,r23
   68e5c:	9802571e 	bne	r19,zero,697bc <___vfiprintf_internal_r+0x14c4>
   68e60:	18005726 	beq	r3,zero,68fc0 <___vfiprintf_internal_r+0xcc8>
   68e64:	04c00044 	movi	r19,1
   68e68:	d8c01005 	stb	r3,64(sp)
   68e6c:	d8001d85 	stb	zero,118(sp)
   68e70:	9829883a 	mov	r20,r19
   68e74:	ddc01004 	addi	r23,sp,64
   68e78:	003f0a06 	br	68aa4 <__alt_data_end+0xfffe8aa4>
   68e7c:	d9402017 	ldw	r5,128(sp)
   68e80:	d9002117 	ldw	r4,132(sp)
   68e84:	d9801a04 	addi	r6,sp,104
   68e88:	da802a15 	stw	r10,168(sp)
   68e8c:	00681e40 	call	681e4 <__sprint_r.part.0>
   68e90:	da802a17 	ldw	r10,168(sp)
   68e94:	1000501e 	bne	r2,zero,68fd8 <___vfiprintf_internal_r+0xce0>
   68e98:	d9801b17 	ldw	r6,108(sp)
   68e9c:	d8801c17 	ldw	r2,112(sp)
   68ea0:	d811883a 	mov	r8,sp
   68ea4:	31000044 	addi	r4,r6,1
   68ea8:	003e3606 	br	68784 <__alt_data_end+0xfffe8784>
   68eac:	d9001b17 	ldw	r4,108(sp)
   68eb0:	d8801c17 	ldw	r2,112(sp)
   68eb4:	21400044 	addi	r5,r4,1
   68eb8:	d9801d87 	ldb	r6,118(sp)
   68ebc:	303e5226 	beq	r6,zero,68808 <__alt_data_end+0xfffe8808>
   68ec0:	01800044 	movi	r6,1
   68ec4:	d9001d84 	addi	r4,sp,118
   68ec8:	1185883a 	add	r2,r2,r6
   68ecc:	41000015 	stw	r4,0(r8)
   68ed0:	41800115 	stw	r6,4(r8)
   68ed4:	d8801c15 	stw	r2,112(sp)
   68ed8:	d9401b15 	stw	r5,108(sp)
   68edc:	010001c4 	movi	r4,7
   68ee0:	2140b00e 	bge	r4,r5,691a4 <___vfiprintf_internal_r+0xeac>
   68ee4:	1000f61e 	bne	r2,zero,692c0 <___vfiprintf_internal_r+0xfc8>
   68ee8:	3800b31e 	bne	r7,zero,691b8 <___vfiprintf_internal_r+0xec0>
   68eec:	0009883a 	mov	r4,zero
   68ef0:	300b883a 	mov	r5,r6
   68ef4:	d811883a 	mov	r8,sp
   68ef8:	01802004 	movi	r6,128
   68efc:	19be5226 	beq	r3,r6,68848 <__alt_data_end+0xfffe8848>
   68f00:	8521c83a 	sub	r16,r16,r20
   68f04:	043e790e 	bge	zero,r16,688ec <__alt_data_end+0xfffe88ec>
   68f08:	05400404 	movi	r21,16
   68f0c:	ac01b00e 	bge	r21,r16,695d0 <___vfiprintf_internal_r+0x12d8>
   68f10:	014001f4 	movhi	r5,7
   68f14:	2941e004 	addi	r5,r5,1920
   68f18:	d9402315 	stw	r5,140(sp)
   68f1c:	070001c4 	movi	fp,7
   68f20:	00000506 	br	68f38 <___vfiprintf_internal_r+0xc40>
   68f24:	21400084 	addi	r5,r4,2
   68f28:	42000204 	addi	r8,r8,8
   68f2c:	1809883a 	mov	r4,r3
   68f30:	843ffc04 	addi	r16,r16,-16
   68f34:	ac000d0e 	bge	r21,r16,68f6c <___vfiprintf_internal_r+0xc74>
   68f38:	10800404 	addi	r2,r2,16
   68f3c:	20c00044 	addi	r3,r4,1
   68f40:	44800015 	stw	r18,0(r8)
   68f44:	45400115 	stw	r21,4(r8)
   68f48:	d8801c15 	stw	r2,112(sp)
   68f4c:	d8c01b15 	stw	r3,108(sp)
   68f50:	e0fff40e 	bge	fp,r3,68f24 <__alt_data_end+0xfffe8f24>
   68f54:	1000101e 	bne	r2,zero,68f98 <___vfiprintf_internal_r+0xca0>
   68f58:	843ffc04 	addi	r16,r16,-16
   68f5c:	01400044 	movi	r5,1
   68f60:	0009883a 	mov	r4,zero
   68f64:	d811883a 	mov	r8,sp
   68f68:	ac3ff316 	blt	r21,r16,68f38 <__alt_data_end+0xfffe8f38>
   68f6c:	d8c02317 	ldw	r3,140(sp)
   68f70:	1405883a 	add	r2,r2,r16
   68f74:	44000115 	stw	r16,4(r8)
   68f78:	40c00015 	stw	r3,0(r8)
   68f7c:	d8801c15 	stw	r2,112(sp)
   68f80:	d9401b15 	stw	r5,108(sp)
   68f84:	00c001c4 	movi	r3,7
   68f88:	19401916 	blt	r3,r5,68ff0 <___vfiprintf_internal_r+0xcf8>
   68f8c:	42000204 	addi	r8,r8,8
   68f90:	29400044 	addi	r5,r5,1
   68f94:	003e5506 	br	688ec <__alt_data_end+0xfffe88ec>
   68f98:	d9402017 	ldw	r5,128(sp)
   68f9c:	d9002117 	ldw	r4,132(sp)
   68fa0:	d9801a04 	addi	r6,sp,104
   68fa4:	00681e40 	call	681e4 <__sprint_r.part.0>
   68fa8:	10000b1e 	bne	r2,zero,68fd8 <___vfiprintf_internal_r+0xce0>
   68fac:	d9001b17 	ldw	r4,108(sp)
   68fb0:	d8801c17 	ldw	r2,112(sp)
   68fb4:	d811883a 	mov	r8,sp
   68fb8:	21400044 	addi	r5,r4,1
   68fbc:	003fdc06 	br	68f30 <__alt_data_end+0xfffe8f30>
   68fc0:	d8801c17 	ldw	r2,112(sp)
   68fc4:	10000426 	beq	r2,zero,68fd8 <___vfiprintf_internal_r+0xce0>
   68fc8:	d9402017 	ldw	r5,128(sp)
   68fcc:	d9002117 	ldw	r4,132(sp)
   68fd0:	d9801a04 	addi	r6,sp,104
   68fd4:	00681e40 	call	681e4 <__sprint_r.part.0>
   68fd8:	d9402017 	ldw	r5,128(sp)
   68fdc:	2880030b 	ldhu	r2,12(r5)
   68fe0:	1080100c 	andi	r2,r2,64
   68fe4:	10014d1e 	bne	r2,zero,6951c <___vfiprintf_internal_r+0x1224>
   68fe8:	d8802417 	ldw	r2,144(sp)
   68fec:	003d9706 	br	6864c <__alt_data_end+0xfffe864c>
   68ff0:	1000d21e 	bne	r2,zero,6933c <___vfiprintf_internal_r+0x1044>
   68ff4:	00c00044 	movi	r3,1
   68ff8:	a005883a 	mov	r2,r20
   68ffc:	ddc00015 	stw	r23,0(sp)
   69000:	dd000115 	stw	r20,4(sp)
   69004:	dd001c15 	stw	r20,112(sp)
   69008:	d8c01b15 	stw	r3,108(sp)
   6900c:	d811883a 	mov	r8,sp
   69010:	42000204 	addi	r8,r8,8
   69014:	8c40010c 	andi	r17,r17,4
   69018:	88004026 	beq	r17,zero,6911c <___vfiprintf_internal_r+0xe24>
   6901c:	d9002517 	ldw	r4,148(sp)
   69020:	24e3c83a 	sub	r17,r4,r19
   69024:	04403d0e 	bge	zero,r17,6911c <___vfiprintf_internal_r+0xe24>
   69028:	04000404 	movi	r16,16
   6902c:	8441a90e 	bge	r16,r17,696d4 <___vfiprintf_internal_r+0x13dc>
   69030:	00c001f4 	movhi	r3,7
   69034:	18c1e404 	addi	r3,r3,1936
   69038:	d9001b17 	ldw	r4,108(sp)
   6903c:	d8c02315 	stw	r3,140(sp)
   69040:	050001c4 	movi	r20,7
   69044:	dd402117 	ldw	r21,132(sp)
   69048:	ddc02017 	ldw	r23,128(sp)
   6904c:	00000506 	br	69064 <___vfiprintf_internal_r+0xd6c>
   69050:	21400084 	addi	r5,r4,2
   69054:	42000204 	addi	r8,r8,8
   69058:	1809883a 	mov	r4,r3
   6905c:	8c7ffc04 	addi	r17,r17,-16
   69060:	84400f0e 	bge	r16,r17,690a0 <___vfiprintf_internal_r+0xda8>
   69064:	014001f4 	movhi	r5,7
   69068:	10800404 	addi	r2,r2,16
   6906c:	20c00044 	addi	r3,r4,1
   69070:	2941e404 	addi	r5,r5,1936
   69074:	41400015 	stw	r5,0(r8)
   69078:	44000115 	stw	r16,4(r8)
   6907c:	d8801c15 	stw	r2,112(sp)
   69080:	d8c01b15 	stw	r3,108(sp)
   69084:	a0fff20e 	bge	r20,r3,69050 <__alt_data_end+0xfffe9050>
   69088:	1000141e 	bne	r2,zero,690dc <___vfiprintf_internal_r+0xde4>
   6908c:	8c7ffc04 	addi	r17,r17,-16
   69090:	01400044 	movi	r5,1
   69094:	0009883a 	mov	r4,zero
   69098:	d811883a 	mov	r8,sp
   6909c:	847ff116 	blt	r16,r17,69064 <__alt_data_end+0xfffe9064>
   690a0:	d8c02317 	ldw	r3,140(sp)
   690a4:	1445883a 	add	r2,r2,r17
   690a8:	44400115 	stw	r17,4(r8)
   690ac:	40c00015 	stw	r3,0(r8)
   690b0:	d8801c15 	stw	r2,112(sp)
   690b4:	d9401b15 	stw	r5,108(sp)
   690b8:	00c001c4 	movi	r3,7
   690bc:	1940170e 	bge	r3,r5,6911c <___vfiprintf_internal_r+0xe24>
   690c0:	1000101e 	bne	r2,zero,69104 <___vfiprintf_internal_r+0xe0c>
   690c4:	d8802517 	ldw	r2,148(sp)
   690c8:	14c11616 	blt	r2,r19,69524 <___vfiprintf_internal_r+0x122c>
   690cc:	d9002417 	ldw	r4,144(sp)
   690d0:	2089883a 	add	r4,r4,r2
   690d4:	d9002415 	stw	r4,144(sp)
   690d8:	003e1806 	br	6893c <__alt_data_end+0xfffe893c>
   690dc:	d9801a04 	addi	r6,sp,104
   690e0:	b80b883a 	mov	r5,r23
   690e4:	a809883a 	mov	r4,r21
   690e8:	00681e40 	call	681e4 <__sprint_r.part.0>
   690ec:	103fba1e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   690f0:	d9001b17 	ldw	r4,108(sp)
   690f4:	d8801c17 	ldw	r2,112(sp)
   690f8:	d811883a 	mov	r8,sp
   690fc:	21400044 	addi	r5,r4,1
   69100:	003fd606 	br	6905c <__alt_data_end+0xfffe905c>
   69104:	d9402017 	ldw	r5,128(sp)
   69108:	d9002117 	ldw	r4,132(sp)
   6910c:	d9801a04 	addi	r6,sp,104
   69110:	00681e40 	call	681e4 <__sprint_r.part.0>
   69114:	103fb01e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   69118:	d8801c17 	ldw	r2,112(sp)
   6911c:	d8c02517 	ldw	r3,148(sp)
   69120:	1cc0010e 	bge	r3,r19,69128 <___vfiprintf_internal_r+0xe30>
   69124:	9807883a 	mov	r3,r19
   69128:	d9002417 	ldw	r4,144(sp)
   6912c:	20c9883a 	add	r4,r4,r3
   69130:	d9002415 	stw	r4,144(sp)
   69134:	103e0126 	beq	r2,zero,6893c <__alt_data_end+0xfffe893c>
   69138:	d9402017 	ldw	r5,128(sp)
   6913c:	d9002117 	ldw	r4,132(sp)
   69140:	d9801a04 	addi	r6,sp,104
   69144:	00681e40 	call	681e4 <__sprint_r.part.0>
   69148:	103dfc26 	beq	r2,zero,6893c <__alt_data_end+0xfffe893c>
   6914c:	003fa206 	br	68fd8 <__alt_data_end+0xfffe8fd8>
   69150:	d9402017 	ldw	r5,128(sp)
   69154:	d9002117 	ldw	r4,132(sp)
   69158:	d9801a04 	addi	r6,sp,104
   6915c:	d9c02b15 	stw	r7,172(sp)
   69160:	00681e40 	call	681e4 <__sprint_r.part.0>
   69164:	d9c02b17 	ldw	r7,172(sp)
   69168:	103f9b1e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   6916c:	d9001b17 	ldw	r4,108(sp)
   69170:	d8801c17 	ldw	r2,112(sp)
   69174:	d811883a 	mov	r8,sp
   69178:	21800044 	addi	r6,r4,1
   6917c:	003dbf06 	br	6887c <__alt_data_end+0xfffe887c>
   69180:	1000d81e 	bne	r2,zero,694e4 <___vfiprintf_internal_r+0x11ec>
   69184:	d9001d87 	ldb	r4,118(sp)
   69188:	20000a26 	beq	r4,zero,691b4 <___vfiprintf_internal_r+0xebc>
   6918c:	00800044 	movi	r2,1
   69190:	d9001d84 	addi	r4,sp,118
   69194:	100b883a 	mov	r5,r2
   69198:	d9000015 	stw	r4,0(sp)
   6919c:	d8800115 	stw	r2,4(sp)
   691a0:	d811883a 	mov	r8,sp
   691a4:	2809883a 	mov	r4,r5
   691a8:	42000204 	addi	r8,r8,8
   691ac:	29400044 	addi	r5,r5,1
   691b0:	003d9506 	br	68808 <__alt_data_end+0xfffe8808>
   691b4:	3800fd26 	beq	r7,zero,695ac <___vfiprintf_internal_r+0x12b4>
   691b8:	00800084 	movi	r2,2
   691bc:	d9001d04 	addi	r4,sp,116
   691c0:	d9000015 	stw	r4,0(sp)
   691c4:	d8800115 	stw	r2,4(sp)
   691c8:	01400044 	movi	r5,1
   691cc:	d811883a 	mov	r8,sp
   691d0:	2809883a 	mov	r4,r5
   691d4:	42000204 	addi	r8,r8,8
   691d8:	29400044 	addi	r5,r5,1
   691dc:	003f4606 	br	68ef8 <__alt_data_end+0xfffe8ef8>
   691e0:	d8802517 	ldw	r2,148(sp)
   691e4:	14c0010e 	bge	r2,r19,691ec <___vfiprintf_internal_r+0xef4>
   691e8:	9805883a 	mov	r2,r19
   691ec:	d9402417 	ldw	r5,144(sp)
   691f0:	288b883a 	add	r5,r5,r2
   691f4:	d9402415 	stw	r5,144(sp)
   691f8:	003dd006 	br	6893c <__alt_data_end+0xfffe893c>
   691fc:	d8001d85 	stb	zero,118(sp)
   69200:	80005d16 	blt	r16,zero,69378 <___vfiprintf_internal_r+0x1080>
   69204:	00ffdfc4 	movi	r3,-129
   69208:	9d04b03a 	or	r2,r19,r20
   6920c:	88e2703a 	and	r17,r17,r3
   69210:	103d3726 	beq	r2,zero,686f0 <__alt_data_end+0xfffe86f0>
   69214:	002b883a 	mov	r21,zero
   69218:	d9002617 	ldw	r4,152(sp)
   6921c:	ddc01a04 	addi	r23,sp,104
   69220:	988003cc 	andi	r2,r19,15
   69224:	a006973a 	slli	r3,r20,28
   69228:	2085883a 	add	r2,r4,r2
   6922c:	9826d13a 	srli	r19,r19,4
   69230:	10800003 	ldbu	r2,0(r2)
   69234:	a028d13a 	srli	r20,r20,4
   69238:	bdffffc4 	addi	r23,r23,-1
   6923c:	1ce6b03a 	or	r19,r3,r19
   69240:	b8800005 	stb	r2,0(r23)
   69244:	9d04b03a 	or	r2,r19,r20
   69248:	103ff51e 	bne	r2,zero,69220 <__alt_data_end+0xfffe9220>
   6924c:	d8801e17 	ldw	r2,120(sp)
   69250:	15e9c83a 	sub	r20,r2,r23
   69254:	003d2b06 	br	68704 <__alt_data_end+0xfffe8704>
   69258:	d9402017 	ldw	r5,128(sp)
   6925c:	d9002117 	ldw	r4,132(sp)
   69260:	d9801a04 	addi	r6,sp,104
   69264:	00681e40 	call	681e4 <__sprint_r.part.0>
   69268:	103f5b1e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   6926c:	d8801c17 	ldw	r2,112(sp)
   69270:	d811883a 	mov	r8,sp
   69274:	003f6706 	br	69014 <__alt_data_end+0xfffe9014>
   69278:	d9402017 	ldw	r5,128(sp)
   6927c:	d9002117 	ldw	r4,132(sp)
   69280:	d9801a04 	addi	r6,sp,104
   69284:	00681e40 	call	681e4 <__sprint_r.part.0>
   69288:	103f531e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   6928c:	d811883a 	mov	r8,sp
   69290:	003cd906 	br	685f8 <__alt_data_end+0xfffe85f8>
   69294:	10803fcc 	andi	r2,r2,255
   69298:	1080201c 	xori	r2,r2,128
   6929c:	10bfe004 	addi	r2,r2,-128
   692a0:	00c00c04 	movi	r3,48
   692a4:	10ffe926 	beq	r2,r3,6924c <__alt_data_end+0xfffe924c>
   692a8:	b8ffffc5 	stb	r3,-1(r23)
   692ac:	d8c01e17 	ldw	r3,120(sp)
   692b0:	b8bfffc4 	addi	r2,r23,-1
   692b4:	102f883a 	mov	r23,r2
   692b8:	18a9c83a 	sub	r20,r3,r2
   692bc:	003d1106 	br	68704 <__alt_data_end+0xfffe8704>
   692c0:	d9402017 	ldw	r5,128(sp)
   692c4:	d9002117 	ldw	r4,132(sp)
   692c8:	d9801a04 	addi	r6,sp,104
   692cc:	d8c02a15 	stw	r3,168(sp)
   692d0:	d9c02b15 	stw	r7,172(sp)
   692d4:	00681e40 	call	681e4 <__sprint_r.part.0>
   692d8:	d8c02a17 	ldw	r3,168(sp)
   692dc:	d9c02b17 	ldw	r7,172(sp)
   692e0:	103f3d1e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   692e4:	d9001b17 	ldw	r4,108(sp)
   692e8:	d8801c17 	ldw	r2,112(sp)
   692ec:	d811883a 	mov	r8,sp
   692f0:	21400044 	addi	r5,r4,1
   692f4:	003d4406 	br	68808 <__alt_data_end+0xfffe8808>
   692f8:	d9402017 	ldw	r5,128(sp)
   692fc:	d9002117 	ldw	r4,132(sp)
   69300:	d9801a04 	addi	r6,sp,104
   69304:	d8c02a15 	stw	r3,168(sp)
   69308:	00681e40 	call	681e4 <__sprint_r.part.0>
   6930c:	d8c02a17 	ldw	r3,168(sp)
   69310:	103f311e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   69314:	d9001b17 	ldw	r4,108(sp)
   69318:	d8801c17 	ldw	r2,112(sp)
   6931c:	d811883a 	mov	r8,sp
   69320:	21400044 	addi	r5,r4,1
   69324:	003ef406 	br	68ef8 <__alt_data_end+0xfffe8ef8>
   69328:	1000bd1e 	bne	r2,zero,69620 <___vfiprintf_internal_r+0x1328>
   6932c:	01400044 	movi	r5,1
   69330:	0009883a 	mov	r4,zero
   69334:	d811883a 	mov	r8,sp
   69338:	003ef106 	br	68f00 <__alt_data_end+0xfffe8f00>
   6933c:	d9402017 	ldw	r5,128(sp)
   69340:	d9002117 	ldw	r4,132(sp)
   69344:	d9801a04 	addi	r6,sp,104
   69348:	00681e40 	call	681e4 <__sprint_r.part.0>
   6934c:	103f221e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   69350:	d9401b17 	ldw	r5,108(sp)
   69354:	d8801c17 	ldw	r2,112(sp)
   69358:	d811883a 	mov	r8,sp
   6935c:	29400044 	addi	r5,r5,1
   69360:	003d6206 	br	688ec <__alt_data_end+0xfffe88ec>
   69364:	014001f4 	movhi	r5,7
   69368:	29417f04 	addi	r5,r5,1532
   6936c:	d9402615 	stw	r5,152(sp)
   69370:	d8c02215 	stw	r3,136(sp)
   69374:	1023883a 	mov	r17,r2
   69378:	9d04b03a 	or	r2,r19,r20
   6937c:	103fa51e 	bne	r2,zero,69214 <__alt_data_end+0xfffe9214>
   69380:	002b883a 	mov	r21,zero
   69384:	00800084 	movi	r2,2
   69388:	003e4a06 	br	68cb4 <__alt_data_end+0xfffe8cb4>
   6938c:	014001f4 	movhi	r5,7
   69390:	29417f04 	addi	r5,r5,1532
   69394:	002b883a 	mov	r21,zero
   69398:	d9402615 	stw	r5,152(sp)
   6939c:	003f9e06 	br	69218 <__alt_data_end+0xfffe9218>
   693a0:	d9402217 	ldw	r5,136(sp)
   693a4:	d8001d85 	stb	zero,118(sp)
   693a8:	0029883a 	mov	r20,zero
   693ac:	28800104 	addi	r2,r5,4
   693b0:	2cc00017 	ldw	r19,0(r5)
   693b4:	803e3a16 	blt	r16,zero,68ca0 <__alt_data_end+0xfffe8ca0>
   693b8:	00ffdfc4 	movi	r3,-129
   693bc:	d8802215 	stw	r2,136(sp)
   693c0:	88e2703a 	and	r17,r17,r3
   693c4:	002b883a 	mov	r21,zero
   693c8:	983e9b26 	beq	r19,zero,68e38 <__alt_data_end+0xfffe8e38>
   693cc:	00800244 	movi	r2,9
   693d0:	14fdc936 	bltu	r2,r19,68af8 <__alt_data_end+0xfffe8af8>
   693d4:	003e9a06 	br	68e40 <__alt_data_end+0xfffe8e40>
   693d8:	00800c04 	movi	r2,48
   693dc:	d8c01d45 	stb	r3,117(sp)
   693e0:	d8801d05 	stb	r2,116(sp)
   693e4:	d8001d85 	stb	zero,118(sp)
   693e8:	88c00094 	ori	r3,r17,2
   693ec:	80009c16 	blt	r16,zero,69660 <___vfiprintf_internal_r+0x1368>
   693f0:	00bfdfc4 	movi	r2,-129
   693f4:	88a2703a 	and	r17,r17,r2
   693f8:	8c400094 	ori	r17,r17,2
   693fc:	002b883a 	mov	r21,zero
   69400:	003f8506 	br	69218 <__alt_data_end+0xfffe9218>
   69404:	b029883a 	mov	r20,r22
   69408:	003c0b06 	br	68438 <__alt_data_end+0xfffe8438>
   6940c:	04e7c83a 	sub	r19,zero,r19
   69410:	05400b44 	movi	r21,45
   69414:	9804c03a 	cmpne	r2,r19,zero
   69418:	0529c83a 	sub	r20,zero,r20
   6941c:	dd401d85 	stb	r21,118(sp)
   69420:	a0a9c83a 	sub	r20,r20,r2
   69424:	80009716 	blt	r16,zero,69684 <___vfiprintf_internal_r+0x138c>
   69428:	00bfdfc4 	movi	r2,-129
   6942c:	88a2703a 	and	r17,r17,r2
   69430:	003db006 	br	68af4 <__alt_data_end+0xfffe8af4>
   69434:	b0c00007 	ldb	r3,0(r22)
   69438:	003c0c06 	br	6846c <__alt_data_end+0xfffe846c>
   6943c:	8880100c 	andi	r2,r17,64
   69440:	d8001d85 	stb	zero,118(sp)
   69444:	1000461e 	bne	r2,zero,69560 <___vfiprintf_internal_r+0x1268>
   69448:	d9002217 	ldw	r4,136(sp)
   6944c:	0029883a 	mov	r20,zero
   69450:	20800104 	addi	r2,r4,4
   69454:	24c00017 	ldw	r19,0(r4)
   69458:	803df80e 	bge	r16,zero,68c3c <__alt_data_end+0xfffe8c3c>
   6945c:	9d06b03a 	or	r3,r19,r20
   69460:	d8802215 	stw	r2,136(sp)
   69464:	183d5e1e 	bne	r3,zero,689e0 <__alt_data_end+0xfffe89e0>
   69468:	002b883a 	mov	r21,zero
   6946c:	0005883a 	mov	r2,zero
   69470:	003e1006 	br	68cb4 <__alt_data_end+0xfffe8cb4>
   69474:	8880040c 	andi	r2,r17,16
   69478:	1000321e 	bne	r2,zero,69544 <___vfiprintf_internal_r+0x124c>
   6947c:	8c40100c 	andi	r17,r17,64
   69480:	88008d26 	beq	r17,zero,696b8 <___vfiprintf_internal_r+0x13c0>
   69484:	d9402217 	ldw	r5,136(sp)
   69488:	d8c02417 	ldw	r3,144(sp)
   6948c:	28800017 	ldw	r2,0(r5)
   69490:	29400104 	addi	r5,r5,4
   69494:	d9402215 	stw	r5,136(sp)
   69498:	10c0000d 	sth	r3,0(r2)
   6949c:	003bca06 	br	683c8 <__alt_data_end+0xfffe83c8>
   694a0:	8880100c 	andi	r2,r17,64
   694a4:	10003a26 	beq	r2,zero,69590 <___vfiprintf_internal_r+0x1298>
   694a8:	d8802217 	ldw	r2,136(sp)
   694ac:	14c0000f 	ldh	r19,0(r2)
   694b0:	10800104 	addi	r2,r2,4
   694b4:	d8802215 	stw	r2,136(sp)
   694b8:	9829d7fa 	srai	r20,r19,31
   694bc:	a005883a 	mov	r2,r20
   694c0:	003d8506 	br	68ad8 <__alt_data_end+0xfffe8ad8>
   694c4:	8880100c 	andi	r2,r17,64
   694c8:	10002b26 	beq	r2,zero,69578 <___vfiprintf_internal_r+0x1280>
   694cc:	d8802217 	ldw	r2,136(sp)
   694d0:	0029883a 	mov	r20,zero
   694d4:	14c0000b 	ldhu	r19,0(r2)
   694d8:	10800104 	addi	r2,r2,4
   694dc:	d8802215 	stw	r2,136(sp)
   694e0:	003d5d06 	br	68a58 <__alt_data_end+0xfffe8a58>
   694e4:	d9402017 	ldw	r5,128(sp)
   694e8:	d9002117 	ldw	r4,132(sp)
   694ec:	d9801a04 	addi	r6,sp,104
   694f0:	d8c02a15 	stw	r3,168(sp)
   694f4:	d9c02b15 	stw	r7,172(sp)
   694f8:	00681e40 	call	681e4 <__sprint_r.part.0>
   694fc:	d8c02a17 	ldw	r3,168(sp)
   69500:	d9c02b17 	ldw	r7,172(sp)
   69504:	103eb41e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   69508:	d9001b17 	ldw	r4,108(sp)
   6950c:	d8801c17 	ldw	r2,112(sp)
   69510:	d811883a 	mov	r8,sp
   69514:	21400044 	addi	r5,r4,1
   69518:	003e6706 	br	68eb8 <__alt_data_end+0xfffe8eb8>
   6951c:	00bfffc4 	movi	r2,-1
   69520:	003c4a06 	br	6864c <__alt_data_end+0xfffe864c>
   69524:	9805883a 	mov	r2,r19
   69528:	003ee806 	br	690cc <__alt_data_end+0xfffe90cc>
   6952c:	d8c02217 	ldw	r3,136(sp)
   69530:	0029883a 	mov	r20,zero
   69534:	18800104 	addi	r2,r3,4
   69538:	1cc0000b 	ldhu	r19,0(r3)
   6953c:	803f9e0e 	bge	r16,zero,693b8 <__alt_data_end+0xfffe93b8>
   69540:	003dd706 	br	68ca0 <__alt_data_end+0xfffe8ca0>
   69544:	d8c02217 	ldw	r3,136(sp)
   69548:	d9002417 	ldw	r4,144(sp)
   6954c:	18800017 	ldw	r2,0(r3)
   69550:	18c00104 	addi	r3,r3,4
   69554:	d8c02215 	stw	r3,136(sp)
   69558:	11000015 	stw	r4,0(r2)
   6955c:	003b9a06 	br	683c8 <__alt_data_end+0xfffe83c8>
   69560:	d8c02217 	ldw	r3,136(sp)
   69564:	0029883a 	mov	r20,zero
   69568:	18800104 	addi	r2,r3,4
   6956c:	1cc0000b 	ldhu	r19,0(r3)
   69570:	803db20e 	bge	r16,zero,68c3c <__alt_data_end+0xfffe8c3c>
   69574:	003fb906 	br	6945c <__alt_data_end+0xfffe945c>
   69578:	d9002217 	ldw	r4,136(sp)
   6957c:	0029883a 	mov	r20,zero
   69580:	24c00017 	ldw	r19,0(r4)
   69584:	21000104 	addi	r4,r4,4
   69588:	d9002215 	stw	r4,136(sp)
   6958c:	003d3206 	br	68a58 <__alt_data_end+0xfffe8a58>
   69590:	d8c02217 	ldw	r3,136(sp)
   69594:	1cc00017 	ldw	r19,0(r3)
   69598:	18c00104 	addi	r3,r3,4
   6959c:	d8c02215 	stw	r3,136(sp)
   695a0:	9829d7fa 	srai	r20,r19,31
   695a4:	a005883a 	mov	r2,r20
   695a8:	003d4b06 	br	68ad8 <__alt_data_end+0xfffe8ad8>
   695ac:	0009883a 	mov	r4,zero
   695b0:	01400044 	movi	r5,1
   695b4:	d811883a 	mov	r8,sp
   695b8:	003e4f06 	br	68ef8 <__alt_data_end+0xfffe8ef8>
   695bc:	d8c02215 	stw	r3,136(sp)
   695c0:	002b883a 	mov	r21,zero
   695c4:	003db806 	br	68ca8 <__alt_data_end+0xfffe8ca8>
   695c8:	d811883a 	mov	r8,sp
   695cc:	003e9606 	br	69028 <__alt_data_end+0xfffe9028>
   695d0:	010001f4 	movhi	r4,7
   695d4:	2101e004 	addi	r4,r4,1920
   695d8:	d9002315 	stw	r4,140(sp)
   695dc:	003e6306 	br	68f6c <__alt_data_end+0xfffe8f6c>
   695e0:	b0c00043 	ldbu	r3,1(r22)
   695e4:	8c400814 	ori	r17,r17,32
   695e8:	b5800044 	addi	r22,r22,1
   695ec:	18c03fcc 	andi	r3,r3,255
   695f0:	18c0201c 	xori	r3,r3,128
   695f4:	18ffe004 	addi	r3,r3,-128
   695f8:	003b9c06 	br	6846c <__alt_data_end+0xfffe846c>
   695fc:	b809883a 	mov	r4,r23
   69600:	da002a15 	stw	r8,168(sp)
   69604:	0060bb00 	call	60bb0 <strlen>
   69608:	1029883a 	mov	r20,r2
   6960c:	dd401d83 	ldbu	r21,118(sp)
   69610:	df002215 	stw	fp,136(sp)
   69614:	0021883a 	mov	r16,zero
   69618:	da002a17 	ldw	r8,168(sp)
   6961c:	003c3906 	br	68704 <__alt_data_end+0xfffe8704>
   69620:	d9402017 	ldw	r5,128(sp)
   69624:	d9002117 	ldw	r4,132(sp)
   69628:	d9801a04 	addi	r6,sp,104
   6962c:	00681e40 	call	681e4 <__sprint_r.part.0>
   69630:	103e691e 	bne	r2,zero,68fd8 <__alt_data_end+0xfffe8fd8>
   69634:	d9001b17 	ldw	r4,108(sp)
   69638:	d8801c17 	ldw	r2,112(sp)
   6963c:	d811883a 	mov	r8,sp
   69640:	21400044 	addi	r5,r4,1
   69644:	003e2e06 	br	68f00 <__alt_data_end+0xfffe8f00>
   69648:	010001f4 	movhi	r4,7
   6964c:	2101e404 	addi	r4,r4,1936
   69650:	d9002315 	stw	r4,140(sp)
   69654:	d9001b17 	ldw	r4,108(sp)
   69658:	21000044 	addi	r4,r4,1
   6965c:	003c5e06 	br	687d8 <__alt_data_end+0xfffe87d8>
   69660:	002b883a 	mov	r21,zero
   69664:	00800084 	movi	r2,2
   69668:	10803fcc 	andi	r2,r2,255
   6966c:	01000044 	movi	r4,1
   69670:	11002b26 	beq	r2,r4,69720 <___vfiprintf_internal_r+0x1428>
   69674:	01000084 	movi	r4,2
   69678:	11002b1e 	bne	r2,r4,69728 <___vfiprintf_internal_r+0x1430>
   6967c:	1823883a 	mov	r17,r3
   69680:	003ee506 	br	69218 <__alt_data_end+0xfffe9218>
   69684:	8807883a 	mov	r3,r17
   69688:	00800044 	movi	r2,1
   6968c:	003ff606 	br	69668 <__alt_data_end+0xfffe9668>
   69690:	00800184 	movi	r2,6
   69694:	1400012e 	bgeu	r2,r16,6969c <___vfiprintf_internal_r+0x13a4>
   69698:	1021883a 	mov	r16,r2
   6969c:	8029883a 	mov	r20,r16
   696a0:	8027883a 	mov	r19,r16
   696a4:	80002216 	blt	r16,zero,69730 <___vfiprintf_internal_r+0x1438>
   696a8:	05c001f4 	movhi	r23,7
   696ac:	df002215 	stw	fp,136(sp)
   696b0:	bdc18404 	addi	r23,r23,1552
   696b4:	003cfb06 	br	68aa4 <__alt_data_end+0xfffe8aa4>
   696b8:	d9002217 	ldw	r4,136(sp)
   696bc:	d9402417 	ldw	r5,144(sp)
   696c0:	20800017 	ldw	r2,0(r4)
   696c4:	21000104 	addi	r4,r4,4
   696c8:	d9002215 	stw	r4,136(sp)
   696cc:	11400015 	stw	r5,0(r2)
   696d0:	003b3d06 	br	683c8 <__alt_data_end+0xfffe83c8>
   696d4:	014001f4 	movhi	r5,7
   696d8:	2941e404 	addi	r5,r5,1936
   696dc:	d9402315 	stw	r5,140(sp)
   696e0:	d9401b17 	ldw	r5,108(sp)
   696e4:	29400044 	addi	r5,r5,1
   696e8:	003e6d06 	br	690a0 <__alt_data_end+0xfffe90a0>
   696ec:	8029883a 	mov	r20,r16
   696f0:	dd401d83 	ldbu	r21,118(sp)
   696f4:	df002215 	stw	fp,136(sp)
   696f8:	0021883a 	mov	r16,zero
   696fc:	003c0106 	br	68704 <__alt_data_end+0xfffe8704>
   69700:	00c001f4 	movhi	r3,7
   69704:	18c1e004 	addi	r3,r3,1920
   69708:	d8c02315 	stw	r3,140(sp)
   6970c:	280d883a 	mov	r6,r5
   69710:	003c6906 	br	688b8 <__alt_data_end+0xfffe88b8>
   69714:	802d883a 	mov	r22,r16
   69718:	0021883a 	mov	r16,zero
   6971c:	003b5406 	br	68470 <__alt_data_end+0xfffe8470>
   69720:	1823883a 	mov	r17,r3
   69724:	003cf306 	br	68af4 <__alt_data_end+0xfffe8af4>
   69728:	1823883a 	mov	r17,r3
   6972c:	003cad06 	br	689e4 <__alt_data_end+0xfffe89e4>
   69730:	0027883a 	mov	r19,zero
   69734:	003fdc06 	br	696a8 <__alt_data_end+0xfffe96a8>
   69738:	d9402217 	ldw	r5,136(sp)
   6973c:	8005883a 	mov	r2,r16
   69740:	b0c00043 	ldbu	r3,1(r22)
   69744:	2c000017 	ldw	r16,0(r5)
   69748:	29000104 	addi	r4,r5,4
   6974c:	d9002215 	stw	r4,136(sp)
   69750:	102d883a 	mov	r22,r2
   69754:	803fa50e 	bge	r16,zero,695ec <__alt_data_end+0xfffe95ec>
   69758:	18c03fcc 	andi	r3,r3,255
   6975c:	18c0201c 	xori	r3,r3,128
   69760:	043fffc4 	movi	r16,-1
   69764:	18ffe004 	addi	r3,r3,-128
   69768:	003b4006 	br	6846c <__alt_data_end+0xfffe846c>
   6976c:	d9402303 	ldbu	r5,140(sp)
   69770:	d9401d85 	stb	r5,118(sp)
   69774:	003cae06 	br	68a30 <__alt_data_end+0xfffe8a30>
   69778:	d8c02303 	ldbu	r3,140(sp)
   6977c:	d8c01d85 	stb	r3,118(sp)
   69780:	003d1406 	br	68bd4 <__alt_data_end+0xfffe8bd4>
   69784:	d8c02303 	ldbu	r3,140(sp)
   69788:	d8c01d85 	stb	r3,118(sp)
   6978c:	003cca06 	br	68ab8 <__alt_data_end+0xfffe8ab8>
   69790:	8880004c 	andi	r2,r17,1
   69794:	002b883a 	mov	r21,zero
   69798:	10000526 	beq	r2,zero,697b0 <___vfiprintf_internal_r+0x14b8>
   6979c:	00800c04 	movi	r2,48
   697a0:	d88019c5 	stb	r2,103(sp)
   697a4:	dd002817 	ldw	r20,160(sp)
   697a8:	ddc019c4 	addi	r23,sp,103
   697ac:	003bd506 	br	68704 <__alt_data_end+0xfffe8704>
   697b0:	0029883a 	mov	r20,zero
   697b4:	ddc01a04 	addi	r23,sp,104
   697b8:	003bd206 	br	68704 <__alt_data_end+0xfffe8704>
   697bc:	d9002303 	ldbu	r4,140(sp)
   697c0:	d9001d85 	stb	r4,118(sp)
   697c4:	003da606 	br	68e60 <__alt_data_end+0xfffe8e60>
   697c8:	d8c02303 	ldbu	r3,140(sp)
   697cc:	d8c01d85 	stb	r3,118(sp)
   697d0:	003c7606 	br	689ac <__alt_data_end+0xfffe89ac>
   697d4:	d8c02303 	ldbu	r3,140(sp)
   697d8:	d8c01d85 	stb	r3,118(sp)
   697dc:	003c6506 	br	68974 <__alt_data_end+0xfffe8974>
   697e0:	d9002303 	ldbu	r4,140(sp)
   697e4:	d9001d85 	stb	r4,118(sp)
   697e8:	003d3d06 	br	68ce0 <__alt_data_end+0xfffe8ce0>
   697ec:	d8c02303 	ldbu	r3,140(sp)
   697f0:	d8c01d85 	stb	r3,118(sp)
   697f4:	003d1d06 	br	68c6c <__alt_data_end+0xfffe8c6c>
   697f8:	d8c02303 	ldbu	r3,140(sp)
   697fc:	d8c01d85 	stb	r3,118(sp)
   69800:	003d0306 	br	68c10 <__alt_data_end+0xfffe8c10>

00069804 <__vfiprintf_internal>:
   69804:	008001f4 	movhi	r2,7
   69808:	10890f04 	addi	r2,r2,9276
   6980c:	300f883a 	mov	r7,r6
   69810:	280d883a 	mov	r6,r5
   69814:	200b883a 	mov	r5,r4
   69818:	11000017 	ldw	r4,0(r2)
   6981c:	00682f81 	jmpi	682f8 <___vfiprintf_internal_r>

00069820 <__sbprintf>:
   69820:	2880030b 	ldhu	r2,12(r5)
   69824:	2ac01917 	ldw	r11,100(r5)
   69828:	2a80038b 	ldhu	r10,14(r5)
   6982c:	2a400717 	ldw	r9,28(r5)
   69830:	2a000917 	ldw	r8,36(r5)
   69834:	defee204 	addi	sp,sp,-1144
   69838:	00c10004 	movi	r3,1024
   6983c:	dc011a15 	stw	r16,1128(sp)
   69840:	10bfff4c 	andi	r2,r2,65533
   69844:	2821883a 	mov	r16,r5
   69848:	d8cb883a 	add	r5,sp,r3
   6984c:	dc811c15 	stw	r18,1136(sp)
   69850:	dc411b15 	stw	r17,1132(sp)
   69854:	dfc11d15 	stw	ra,1140(sp)
   69858:	2025883a 	mov	r18,r4
   6985c:	d881030d 	sth	r2,1036(sp)
   69860:	dac11915 	stw	r11,1124(sp)
   69864:	da81038d 	sth	r10,1038(sp)
   69868:	da410715 	stw	r9,1052(sp)
   6986c:	da010915 	stw	r8,1060(sp)
   69870:	dec10015 	stw	sp,1024(sp)
   69874:	dec10415 	stw	sp,1040(sp)
   69878:	d8c10215 	stw	r3,1032(sp)
   6987c:	d8c10515 	stw	r3,1044(sp)
   69880:	d8010615 	stw	zero,1048(sp)
   69884:	00682f80 	call	682f8 <___vfiprintf_internal_r>
   69888:	1023883a 	mov	r17,r2
   6988c:	10000416 	blt	r2,zero,698a0 <__sbprintf+0x80>
   69890:	d9410004 	addi	r5,sp,1024
   69894:	9009883a 	mov	r4,r18
   69898:	0064c1c0 	call	64c1c <_fflush_r>
   6989c:	10000d1e 	bne	r2,zero,698d4 <__sbprintf+0xb4>
   698a0:	d881030b 	ldhu	r2,1036(sp)
   698a4:	1080100c 	andi	r2,r2,64
   698a8:	10000326 	beq	r2,zero,698b8 <__sbprintf+0x98>
   698ac:	8080030b 	ldhu	r2,12(r16)
   698b0:	10801014 	ori	r2,r2,64
   698b4:	8080030d 	sth	r2,12(r16)
   698b8:	8805883a 	mov	r2,r17
   698bc:	dfc11d17 	ldw	ra,1140(sp)
   698c0:	dc811c17 	ldw	r18,1136(sp)
   698c4:	dc411b17 	ldw	r17,1132(sp)
   698c8:	dc011a17 	ldw	r16,1128(sp)
   698cc:	dec11e04 	addi	sp,sp,1144
   698d0:	f800283a 	ret
   698d4:	047fffc4 	movi	r17,-1
   698d8:	003ff106 	br	698a0 <__alt_data_end+0xfffe98a0>

000698dc <_write_r>:
   698dc:	defffd04 	addi	sp,sp,-12
   698e0:	2805883a 	mov	r2,r5
   698e4:	dc000015 	stw	r16,0(sp)
   698e8:	040001f4 	movhi	r16,7
   698ec:	dc400115 	stw	r17,4(sp)
   698f0:	300b883a 	mov	r5,r6
   698f4:	84100f04 	addi	r16,r16,16444
   698f8:	2023883a 	mov	r17,r4
   698fc:	380d883a 	mov	r6,r7
   69900:	1009883a 	mov	r4,r2
   69904:	dfc00215 	stw	ra,8(sp)
   69908:	80000015 	stw	zero,0(r16)
   6990c:	006e0d40 	call	6e0d4 <write>
   69910:	00ffffc4 	movi	r3,-1
   69914:	10c00526 	beq	r2,r3,6992c <_write_r+0x50>
   69918:	dfc00217 	ldw	ra,8(sp)
   6991c:	dc400117 	ldw	r17,4(sp)
   69920:	dc000017 	ldw	r16,0(sp)
   69924:	dec00304 	addi	sp,sp,12
   69928:	f800283a 	ret
   6992c:	80c00017 	ldw	r3,0(r16)
   69930:	183ff926 	beq	r3,zero,69918 <__alt_data_end+0xfffe9918>
   69934:	88c00015 	stw	r3,0(r17)
   69938:	003ff706 	br	69918 <__alt_data_end+0xfffe9918>

0006993c <_close_r>:
   6993c:	defffd04 	addi	sp,sp,-12
   69940:	dc000015 	stw	r16,0(sp)
   69944:	040001f4 	movhi	r16,7
   69948:	dc400115 	stw	r17,4(sp)
   6994c:	84100f04 	addi	r16,r16,16444
   69950:	2023883a 	mov	r17,r4
   69954:	2809883a 	mov	r4,r5
   69958:	dfc00215 	stw	ra,8(sp)
   6995c:	80000015 	stw	zero,0(r16)
   69960:	006d87c0 	call	6d87c <close>
   69964:	00ffffc4 	movi	r3,-1
   69968:	10c00526 	beq	r2,r3,69980 <_close_r+0x44>
   6996c:	dfc00217 	ldw	ra,8(sp)
   69970:	dc400117 	ldw	r17,4(sp)
   69974:	dc000017 	ldw	r16,0(sp)
   69978:	dec00304 	addi	sp,sp,12
   6997c:	f800283a 	ret
   69980:	80c00017 	ldw	r3,0(r16)
   69984:	183ff926 	beq	r3,zero,6996c <__alt_data_end+0xfffe996c>
   69988:	88c00015 	stw	r3,0(r17)
   6998c:	003ff706 	br	6996c <__alt_data_end+0xfffe996c>

00069990 <_calloc_r>:
   69990:	defffe04 	addi	sp,sp,-8
   69994:	2805883a 	mov	r2,r5
   69998:	dc000015 	stw	r16,0(sp)
   6999c:	300b883a 	mov	r5,r6
   699a0:	2021883a 	mov	r16,r4
   699a4:	1009883a 	mov	r4,r2
   699a8:	dfc00115 	stw	ra,4(sp)
   699ac:	00609000 	call	60900 <__mulsi3>
   699b0:	100b883a 	mov	r5,r2
   699b4:	8009883a 	mov	r4,r16
   699b8:	0065d740 	call	65d74 <_malloc_r>
   699bc:	10002926 	beq	r2,zero,69a64 <_calloc_r+0xd4>
   699c0:	11bfff17 	ldw	r6,-4(r2)
   699c4:	1021883a 	mov	r16,r2
   699c8:	00bfff04 	movi	r2,-4
   699cc:	308c703a 	and	r6,r6,r2
   699d0:	00c00904 	movi	r3,36
   699d4:	308d883a 	add	r6,r6,r2
   699d8:	19801636 	bltu	r3,r6,69a34 <_calloc_r+0xa4>
   699dc:	008004c4 	movi	r2,19
   699e0:	11800b2e 	bgeu	r2,r6,69a10 <_calloc_r+0x80>
   699e4:	80000015 	stw	zero,0(r16)
   699e8:	80000115 	stw	zero,4(r16)
   699ec:	008006c4 	movi	r2,27
   699f0:	11801a2e 	bgeu	r2,r6,69a5c <_calloc_r+0xcc>
   699f4:	80000215 	stw	zero,8(r16)
   699f8:	80000315 	stw	zero,12(r16)
   699fc:	30c0151e 	bne	r6,r3,69a54 <_calloc_r+0xc4>
   69a00:	80000415 	stw	zero,16(r16)
   69a04:	80800604 	addi	r2,r16,24
   69a08:	80000515 	stw	zero,20(r16)
   69a0c:	00000106 	br	69a14 <_calloc_r+0x84>
   69a10:	8005883a 	mov	r2,r16
   69a14:	10000015 	stw	zero,0(r2)
   69a18:	10000115 	stw	zero,4(r2)
   69a1c:	10000215 	stw	zero,8(r2)
   69a20:	8005883a 	mov	r2,r16
   69a24:	dfc00117 	ldw	ra,4(sp)
   69a28:	dc000017 	ldw	r16,0(sp)
   69a2c:	dec00204 	addi	sp,sp,8
   69a30:	f800283a 	ret
   69a34:	000b883a 	mov	r5,zero
   69a38:	8009883a 	mov	r4,r16
   69a3c:	00667c00 	call	667c0 <memset>
   69a40:	8005883a 	mov	r2,r16
   69a44:	dfc00117 	ldw	ra,4(sp)
   69a48:	dc000017 	ldw	r16,0(sp)
   69a4c:	dec00204 	addi	sp,sp,8
   69a50:	f800283a 	ret
   69a54:	80800404 	addi	r2,r16,16
   69a58:	003fee06 	br	69a14 <__alt_data_end+0xfffe9a14>
   69a5c:	80800204 	addi	r2,r16,8
   69a60:	003fec06 	br	69a14 <__alt_data_end+0xfffe9a14>
   69a64:	0005883a 	mov	r2,zero
   69a68:	003fee06 	br	69a24 <__alt_data_end+0xfffe9a24>

00069a6c <_fclose_r>:
   69a6c:	28003926 	beq	r5,zero,69b54 <_fclose_r+0xe8>
   69a70:	defffc04 	addi	sp,sp,-16
   69a74:	dc400115 	stw	r17,4(sp)
   69a78:	dc000015 	stw	r16,0(sp)
   69a7c:	dfc00315 	stw	ra,12(sp)
   69a80:	dc800215 	stw	r18,8(sp)
   69a84:	2023883a 	mov	r17,r4
   69a88:	2821883a 	mov	r16,r5
   69a8c:	20000226 	beq	r4,zero,69a98 <_fclose_r+0x2c>
   69a90:	20800e17 	ldw	r2,56(r4)
   69a94:	10002726 	beq	r2,zero,69b34 <_fclose_r+0xc8>
   69a98:	8080030f 	ldh	r2,12(r16)
   69a9c:	1000071e 	bne	r2,zero,69abc <_fclose_r+0x50>
   69aa0:	0005883a 	mov	r2,zero
   69aa4:	dfc00317 	ldw	ra,12(sp)
   69aa8:	dc800217 	ldw	r18,8(sp)
   69aac:	dc400117 	ldw	r17,4(sp)
   69ab0:	dc000017 	ldw	r16,0(sp)
   69ab4:	dec00404 	addi	sp,sp,16
   69ab8:	f800283a 	ret
   69abc:	800b883a 	mov	r5,r16
   69ac0:	8809883a 	mov	r4,r17
   69ac4:	0064a000 	call	64a00 <__sflush_r>
   69ac8:	1025883a 	mov	r18,r2
   69acc:	80800b17 	ldw	r2,44(r16)
   69ad0:	10000426 	beq	r2,zero,69ae4 <_fclose_r+0x78>
   69ad4:	81400717 	ldw	r5,28(r16)
   69ad8:	8809883a 	mov	r4,r17
   69adc:	103ee83a 	callr	r2
   69ae0:	10001616 	blt	r2,zero,69b3c <_fclose_r+0xd0>
   69ae4:	8080030b 	ldhu	r2,12(r16)
   69ae8:	1080200c 	andi	r2,r2,128
   69aec:	1000151e 	bne	r2,zero,69b44 <_fclose_r+0xd8>
   69af0:	81400c17 	ldw	r5,48(r16)
   69af4:	28000526 	beq	r5,zero,69b0c <_fclose_r+0xa0>
   69af8:	80801004 	addi	r2,r16,64
   69afc:	28800226 	beq	r5,r2,69b08 <_fclose_r+0x9c>
   69b00:	8809883a 	mov	r4,r17
   69b04:	006517c0 	call	6517c <_free_r>
   69b08:	80000c15 	stw	zero,48(r16)
   69b0c:	81401117 	ldw	r5,68(r16)
   69b10:	28000326 	beq	r5,zero,69b20 <_fclose_r+0xb4>
   69b14:	8809883a 	mov	r4,r17
   69b18:	006517c0 	call	6517c <_free_r>
   69b1c:	80001115 	stw	zero,68(r16)
   69b20:	00650180 	call	65018 <__sfp_lock_acquire>
   69b24:	8000030d 	sth	zero,12(r16)
   69b28:	006501c0 	call	6501c <__sfp_lock_release>
   69b2c:	9005883a 	mov	r2,r18
   69b30:	003fdc06 	br	69aa4 <__alt_data_end+0xfffe9aa4>
   69b34:	00650080 	call	65008 <__sinit>
   69b38:	003fd706 	br	69a98 <__alt_data_end+0xfffe9a98>
   69b3c:	04bfffc4 	movi	r18,-1
   69b40:	003fe806 	br	69ae4 <__alt_data_end+0xfffe9ae4>
   69b44:	81400417 	ldw	r5,16(r16)
   69b48:	8809883a 	mov	r4,r17
   69b4c:	006517c0 	call	6517c <_free_r>
   69b50:	003fe706 	br	69af0 <__alt_data_end+0xfffe9af0>
   69b54:	0005883a 	mov	r2,zero
   69b58:	f800283a 	ret

00069b5c <fclose>:
   69b5c:	008001f4 	movhi	r2,7
   69b60:	10890f04 	addi	r2,r2,9276
   69b64:	200b883a 	mov	r5,r4
   69b68:	11000017 	ldw	r4,0(r2)
   69b6c:	0069a6c1 	jmpi	69a6c <_fclose_r>

00069b70 <__fputwc>:
   69b70:	defff804 	addi	sp,sp,-32
   69b74:	dcc00415 	stw	r19,16(sp)
   69b78:	dc800315 	stw	r18,12(sp)
   69b7c:	dc000115 	stw	r16,4(sp)
   69b80:	dfc00715 	stw	ra,28(sp)
   69b84:	dd400615 	stw	r21,24(sp)
   69b88:	dd000515 	stw	r20,20(sp)
   69b8c:	dc400215 	stw	r17,8(sp)
   69b90:	2027883a 	mov	r19,r4
   69b94:	2825883a 	mov	r18,r5
   69b98:	3021883a 	mov	r16,r6
   69b9c:	0065b640 	call	65b64 <__locale_mb_cur_max>
   69ba0:	00c00044 	movi	r3,1
   69ba4:	10c03e26 	beq	r2,r3,69ca0 <__fputwc+0x130>
   69ba8:	81c01704 	addi	r7,r16,92
   69bac:	900d883a 	mov	r6,r18
   69bb0:	d80b883a 	mov	r5,sp
   69bb4:	9809883a 	mov	r4,r19
   69bb8:	006a0400 	call	6a040 <_wcrtomb_r>
   69bbc:	1029883a 	mov	r20,r2
   69bc0:	00bfffc4 	movi	r2,-1
   69bc4:	a0802026 	beq	r20,r2,69c48 <__fputwc+0xd8>
   69bc8:	d9400003 	ldbu	r5,0(sp)
   69bcc:	a0001c26 	beq	r20,zero,69c40 <__fputwc+0xd0>
   69bd0:	0023883a 	mov	r17,zero
   69bd4:	05400284 	movi	r21,10
   69bd8:	00000906 	br	69c00 <__fputwc+0x90>
   69bdc:	80800017 	ldw	r2,0(r16)
   69be0:	11400005 	stb	r5,0(r2)
   69be4:	80c00017 	ldw	r3,0(r16)
   69be8:	18c00044 	addi	r3,r3,1
   69bec:	80c00015 	stw	r3,0(r16)
   69bf0:	8c400044 	addi	r17,r17,1
   69bf4:	dc45883a 	add	r2,sp,r17
   69bf8:	8d00112e 	bgeu	r17,r20,69c40 <__fputwc+0xd0>
   69bfc:	11400003 	ldbu	r5,0(r2)
   69c00:	80c00217 	ldw	r3,8(r16)
   69c04:	18ffffc4 	addi	r3,r3,-1
   69c08:	80c00215 	stw	r3,8(r16)
   69c0c:	183ff30e 	bge	r3,zero,69bdc <__alt_data_end+0xfffe9bdc>
   69c10:	80800617 	ldw	r2,24(r16)
   69c14:	18801916 	blt	r3,r2,69c7c <__fputwc+0x10c>
   69c18:	80800017 	ldw	r2,0(r16)
   69c1c:	11400005 	stb	r5,0(r2)
   69c20:	80800017 	ldw	r2,0(r16)
   69c24:	10c00003 	ldbu	r3,0(r2)
   69c28:	10800044 	addi	r2,r2,1
   69c2c:	1d402326 	beq	r3,r21,69cbc <__fputwc+0x14c>
   69c30:	80800015 	stw	r2,0(r16)
   69c34:	8c400044 	addi	r17,r17,1
   69c38:	dc45883a 	add	r2,sp,r17
   69c3c:	8d3fef36 	bltu	r17,r20,69bfc <__alt_data_end+0xfffe9bfc>
   69c40:	9005883a 	mov	r2,r18
   69c44:	00000406 	br	69c58 <__fputwc+0xe8>
   69c48:	80c0030b 	ldhu	r3,12(r16)
   69c4c:	a005883a 	mov	r2,r20
   69c50:	18c01014 	ori	r3,r3,64
   69c54:	80c0030d 	sth	r3,12(r16)
   69c58:	dfc00717 	ldw	ra,28(sp)
   69c5c:	dd400617 	ldw	r21,24(sp)
   69c60:	dd000517 	ldw	r20,20(sp)
   69c64:	dcc00417 	ldw	r19,16(sp)
   69c68:	dc800317 	ldw	r18,12(sp)
   69c6c:	dc400217 	ldw	r17,8(sp)
   69c70:	dc000117 	ldw	r16,4(sp)
   69c74:	dec00804 	addi	sp,sp,32
   69c78:	f800283a 	ret
   69c7c:	800d883a 	mov	r6,r16
   69c80:	29403fcc 	andi	r5,r5,255
   69c84:	9809883a 	mov	r4,r19
   69c88:	0069ee80 	call	69ee8 <__swbuf_r>
   69c8c:	10bfffe0 	cmpeqi	r2,r2,-1
   69c90:	10803fcc 	andi	r2,r2,255
   69c94:	103fd626 	beq	r2,zero,69bf0 <__alt_data_end+0xfffe9bf0>
   69c98:	00bfffc4 	movi	r2,-1
   69c9c:	003fee06 	br	69c58 <__alt_data_end+0xfffe9c58>
   69ca0:	90ffffc4 	addi	r3,r18,-1
   69ca4:	01003f84 	movi	r4,254
   69ca8:	20ffbf36 	bltu	r4,r3,69ba8 <__alt_data_end+0xfffe9ba8>
   69cac:	900b883a 	mov	r5,r18
   69cb0:	dc800005 	stb	r18,0(sp)
   69cb4:	1029883a 	mov	r20,r2
   69cb8:	003fc506 	br	69bd0 <__alt_data_end+0xfffe9bd0>
   69cbc:	800d883a 	mov	r6,r16
   69cc0:	a80b883a 	mov	r5,r21
   69cc4:	9809883a 	mov	r4,r19
   69cc8:	0069ee80 	call	69ee8 <__swbuf_r>
   69ccc:	10bfffe0 	cmpeqi	r2,r2,-1
   69cd0:	003fef06 	br	69c90 <__alt_data_end+0xfffe9c90>

00069cd4 <_fputwc_r>:
   69cd4:	3080030b 	ldhu	r2,12(r6)
   69cd8:	10c8000c 	andi	r3,r2,8192
   69cdc:	1800051e 	bne	r3,zero,69cf4 <_fputwc_r+0x20>
   69ce0:	30c01917 	ldw	r3,100(r6)
   69ce4:	10880014 	ori	r2,r2,8192
   69ce8:	3080030d 	sth	r2,12(r6)
   69cec:	18880014 	ori	r2,r3,8192
   69cf0:	30801915 	stw	r2,100(r6)
   69cf4:	0069b701 	jmpi	69b70 <__fputwc>

00069cf8 <fputwc>:
   69cf8:	008001f4 	movhi	r2,7
   69cfc:	defffc04 	addi	sp,sp,-16
   69d00:	10890f04 	addi	r2,r2,9276
   69d04:	dc000115 	stw	r16,4(sp)
   69d08:	14000017 	ldw	r16,0(r2)
   69d0c:	dc400215 	stw	r17,8(sp)
   69d10:	dfc00315 	stw	ra,12(sp)
   69d14:	2023883a 	mov	r17,r4
   69d18:	80000226 	beq	r16,zero,69d24 <fputwc+0x2c>
   69d1c:	80800e17 	ldw	r2,56(r16)
   69d20:	10001026 	beq	r2,zero,69d64 <fputwc+0x6c>
   69d24:	2880030b 	ldhu	r2,12(r5)
   69d28:	10c8000c 	andi	r3,r2,8192
   69d2c:	1800051e 	bne	r3,zero,69d44 <fputwc+0x4c>
   69d30:	28c01917 	ldw	r3,100(r5)
   69d34:	10880014 	ori	r2,r2,8192
   69d38:	2880030d 	sth	r2,12(r5)
   69d3c:	18880014 	ori	r2,r3,8192
   69d40:	28801915 	stw	r2,100(r5)
   69d44:	280d883a 	mov	r6,r5
   69d48:	8009883a 	mov	r4,r16
   69d4c:	880b883a 	mov	r5,r17
   69d50:	dfc00317 	ldw	ra,12(sp)
   69d54:	dc400217 	ldw	r17,8(sp)
   69d58:	dc000117 	ldw	r16,4(sp)
   69d5c:	dec00404 	addi	sp,sp,16
   69d60:	0069b701 	jmpi	69b70 <__fputwc>
   69d64:	8009883a 	mov	r4,r16
   69d68:	d9400015 	stw	r5,0(sp)
   69d6c:	00650080 	call	65008 <__sinit>
   69d70:	d9400017 	ldw	r5,0(sp)
   69d74:	003feb06 	br	69d24 <__alt_data_end+0xfffe9d24>

00069d78 <_fstat_r>:
   69d78:	defffd04 	addi	sp,sp,-12
   69d7c:	2805883a 	mov	r2,r5
   69d80:	dc000015 	stw	r16,0(sp)
   69d84:	040001f4 	movhi	r16,7
   69d88:	dc400115 	stw	r17,4(sp)
   69d8c:	84100f04 	addi	r16,r16,16444
   69d90:	2023883a 	mov	r17,r4
   69d94:	300b883a 	mov	r5,r6
   69d98:	1009883a 	mov	r4,r2
   69d9c:	dfc00215 	stw	ra,8(sp)
   69da0:	80000015 	stw	zero,0(r16)
   69da4:	006d9bc0 	call	6d9bc <fstat>
   69da8:	00ffffc4 	movi	r3,-1
   69dac:	10c00526 	beq	r2,r3,69dc4 <_fstat_r+0x4c>
   69db0:	dfc00217 	ldw	ra,8(sp)
   69db4:	dc400117 	ldw	r17,4(sp)
   69db8:	dc000017 	ldw	r16,0(sp)
   69dbc:	dec00304 	addi	sp,sp,12
   69dc0:	f800283a 	ret
   69dc4:	80c00017 	ldw	r3,0(r16)
   69dc8:	183ff926 	beq	r3,zero,69db0 <__alt_data_end+0xfffe9db0>
   69dcc:	88c00015 	stw	r3,0(r17)
   69dd0:	003ff706 	br	69db0 <__alt_data_end+0xfffe9db0>

00069dd4 <_isatty_r>:
   69dd4:	defffd04 	addi	sp,sp,-12
   69dd8:	dc000015 	stw	r16,0(sp)
   69ddc:	040001f4 	movhi	r16,7
   69de0:	dc400115 	stw	r17,4(sp)
   69de4:	84100f04 	addi	r16,r16,16444
   69de8:	2023883a 	mov	r17,r4
   69dec:	2809883a 	mov	r4,r5
   69df0:	dfc00215 	stw	ra,8(sp)
   69df4:	80000015 	stw	zero,0(r16)
   69df8:	006dab00 	call	6dab0 <isatty>
   69dfc:	00ffffc4 	movi	r3,-1
   69e00:	10c00526 	beq	r2,r3,69e18 <_isatty_r+0x44>
   69e04:	dfc00217 	ldw	ra,8(sp)
   69e08:	dc400117 	ldw	r17,4(sp)
   69e0c:	dc000017 	ldw	r16,0(sp)
   69e10:	dec00304 	addi	sp,sp,12
   69e14:	f800283a 	ret
   69e18:	80c00017 	ldw	r3,0(r16)
   69e1c:	183ff926 	beq	r3,zero,69e04 <__alt_data_end+0xfffe9e04>
   69e20:	88c00015 	stw	r3,0(r17)
   69e24:	003ff706 	br	69e04 <__alt_data_end+0xfffe9e04>

00069e28 <_lseek_r>:
   69e28:	defffd04 	addi	sp,sp,-12
   69e2c:	2805883a 	mov	r2,r5
   69e30:	dc000015 	stw	r16,0(sp)
   69e34:	040001f4 	movhi	r16,7
   69e38:	dc400115 	stw	r17,4(sp)
   69e3c:	300b883a 	mov	r5,r6
   69e40:	84100f04 	addi	r16,r16,16444
   69e44:	2023883a 	mov	r17,r4
   69e48:	380d883a 	mov	r6,r7
   69e4c:	1009883a 	mov	r4,r2
   69e50:	dfc00215 	stw	ra,8(sp)
   69e54:	80000015 	stw	zero,0(r16)
   69e58:	006dc840 	call	6dc84 <lseek>
   69e5c:	00ffffc4 	movi	r3,-1
   69e60:	10c00526 	beq	r2,r3,69e78 <_lseek_r+0x50>
   69e64:	dfc00217 	ldw	ra,8(sp)
   69e68:	dc400117 	ldw	r17,4(sp)
   69e6c:	dc000017 	ldw	r16,0(sp)
   69e70:	dec00304 	addi	sp,sp,12
   69e74:	f800283a 	ret
   69e78:	80c00017 	ldw	r3,0(r16)
   69e7c:	183ff926 	beq	r3,zero,69e64 <__alt_data_end+0xfffe9e64>
   69e80:	88c00015 	stw	r3,0(r17)
   69e84:	003ff706 	br	69e64 <__alt_data_end+0xfffe9e64>

00069e88 <_read_r>:
   69e88:	defffd04 	addi	sp,sp,-12
   69e8c:	2805883a 	mov	r2,r5
   69e90:	dc000015 	stw	r16,0(sp)
   69e94:	040001f4 	movhi	r16,7
   69e98:	dc400115 	stw	r17,4(sp)
   69e9c:	300b883a 	mov	r5,r6
   69ea0:	84100f04 	addi	r16,r16,16444
   69ea4:	2023883a 	mov	r17,r4
   69ea8:	380d883a 	mov	r6,r7
   69eac:	1009883a 	mov	r4,r2
   69eb0:	dfc00215 	stw	ra,8(sp)
   69eb4:	80000015 	stw	zero,0(r16)
   69eb8:	006de600 	call	6de60 <read>
   69ebc:	00ffffc4 	movi	r3,-1
   69ec0:	10c00526 	beq	r2,r3,69ed8 <_read_r+0x50>
   69ec4:	dfc00217 	ldw	ra,8(sp)
   69ec8:	dc400117 	ldw	r17,4(sp)
   69ecc:	dc000017 	ldw	r16,0(sp)
   69ed0:	dec00304 	addi	sp,sp,12
   69ed4:	f800283a 	ret
   69ed8:	80c00017 	ldw	r3,0(r16)
   69edc:	183ff926 	beq	r3,zero,69ec4 <__alt_data_end+0xfffe9ec4>
   69ee0:	88c00015 	stw	r3,0(r17)
   69ee4:	003ff706 	br	69ec4 <__alt_data_end+0xfffe9ec4>

00069ee8 <__swbuf_r>:
   69ee8:	defffb04 	addi	sp,sp,-20
   69eec:	dcc00315 	stw	r19,12(sp)
   69ef0:	dc800215 	stw	r18,8(sp)
   69ef4:	dc000015 	stw	r16,0(sp)
   69ef8:	dfc00415 	stw	ra,16(sp)
   69efc:	dc400115 	stw	r17,4(sp)
   69f00:	2025883a 	mov	r18,r4
   69f04:	2827883a 	mov	r19,r5
   69f08:	3021883a 	mov	r16,r6
   69f0c:	20000226 	beq	r4,zero,69f18 <__swbuf_r+0x30>
   69f10:	20800e17 	ldw	r2,56(r4)
   69f14:	10004226 	beq	r2,zero,6a020 <__swbuf_r+0x138>
   69f18:	80800617 	ldw	r2,24(r16)
   69f1c:	8100030b 	ldhu	r4,12(r16)
   69f20:	80800215 	stw	r2,8(r16)
   69f24:	2080020c 	andi	r2,r4,8
   69f28:	10003626 	beq	r2,zero,6a004 <__swbuf_r+0x11c>
   69f2c:	80c00417 	ldw	r3,16(r16)
   69f30:	18003426 	beq	r3,zero,6a004 <__swbuf_r+0x11c>
   69f34:	2088000c 	andi	r2,r4,8192
   69f38:	9c403fcc 	andi	r17,r19,255
   69f3c:	10001a26 	beq	r2,zero,69fa8 <__swbuf_r+0xc0>
   69f40:	80800017 	ldw	r2,0(r16)
   69f44:	81000517 	ldw	r4,20(r16)
   69f48:	10c7c83a 	sub	r3,r2,r3
   69f4c:	1900200e 	bge	r3,r4,69fd0 <__swbuf_r+0xe8>
   69f50:	18c00044 	addi	r3,r3,1
   69f54:	81000217 	ldw	r4,8(r16)
   69f58:	11400044 	addi	r5,r2,1
   69f5c:	81400015 	stw	r5,0(r16)
   69f60:	213fffc4 	addi	r4,r4,-1
   69f64:	81000215 	stw	r4,8(r16)
   69f68:	14c00005 	stb	r19,0(r2)
   69f6c:	80800517 	ldw	r2,20(r16)
   69f70:	10c01e26 	beq	r2,r3,69fec <__swbuf_r+0x104>
   69f74:	8080030b 	ldhu	r2,12(r16)
   69f78:	1080004c 	andi	r2,r2,1
   69f7c:	10000226 	beq	r2,zero,69f88 <__swbuf_r+0xa0>
   69f80:	00800284 	movi	r2,10
   69f84:	88801926 	beq	r17,r2,69fec <__swbuf_r+0x104>
   69f88:	8805883a 	mov	r2,r17
   69f8c:	dfc00417 	ldw	ra,16(sp)
   69f90:	dcc00317 	ldw	r19,12(sp)
   69f94:	dc800217 	ldw	r18,8(sp)
   69f98:	dc400117 	ldw	r17,4(sp)
   69f9c:	dc000017 	ldw	r16,0(sp)
   69fa0:	dec00504 	addi	sp,sp,20
   69fa4:	f800283a 	ret
   69fa8:	81401917 	ldw	r5,100(r16)
   69fac:	00b7ffc4 	movi	r2,-8193
   69fb0:	21080014 	ori	r4,r4,8192
   69fb4:	2884703a 	and	r2,r5,r2
   69fb8:	80801915 	stw	r2,100(r16)
   69fbc:	80800017 	ldw	r2,0(r16)
   69fc0:	8100030d 	sth	r4,12(r16)
   69fc4:	81000517 	ldw	r4,20(r16)
   69fc8:	10c7c83a 	sub	r3,r2,r3
   69fcc:	193fe016 	blt	r3,r4,69f50 <__alt_data_end+0xfffe9f50>
   69fd0:	800b883a 	mov	r5,r16
   69fd4:	9009883a 	mov	r4,r18
   69fd8:	0064c1c0 	call	64c1c <_fflush_r>
   69fdc:	1000071e 	bne	r2,zero,69ffc <__swbuf_r+0x114>
   69fe0:	80800017 	ldw	r2,0(r16)
   69fe4:	00c00044 	movi	r3,1
   69fe8:	003fda06 	br	69f54 <__alt_data_end+0xfffe9f54>
   69fec:	800b883a 	mov	r5,r16
   69ff0:	9009883a 	mov	r4,r18
   69ff4:	0064c1c0 	call	64c1c <_fflush_r>
   69ff8:	103fe326 	beq	r2,zero,69f88 <__alt_data_end+0xfffe9f88>
   69ffc:	00bfffc4 	movi	r2,-1
   6a000:	003fe206 	br	69f8c <__alt_data_end+0xfffe9f8c>
   6a004:	800b883a 	mov	r5,r16
   6a008:	9009883a 	mov	r4,r18
   6a00c:	0062ffc0 	call	62ffc <__swsetup_r>
   6a010:	103ffa1e 	bne	r2,zero,69ffc <__alt_data_end+0xfffe9ffc>
   6a014:	8100030b 	ldhu	r4,12(r16)
   6a018:	80c00417 	ldw	r3,16(r16)
   6a01c:	003fc506 	br	69f34 <__alt_data_end+0xfffe9f34>
   6a020:	00650080 	call	65008 <__sinit>
   6a024:	003fbc06 	br	69f18 <__alt_data_end+0xfffe9f18>

0006a028 <__swbuf>:
   6a028:	008001f4 	movhi	r2,7
   6a02c:	10890f04 	addi	r2,r2,9276
   6a030:	280d883a 	mov	r6,r5
   6a034:	200b883a 	mov	r5,r4
   6a038:	11000017 	ldw	r4,0(r2)
   6a03c:	0069ee81 	jmpi	69ee8 <__swbuf_r>

0006a040 <_wcrtomb_r>:
   6a040:	defff604 	addi	sp,sp,-40
   6a044:	008001f4 	movhi	r2,7
   6a048:	dc800815 	stw	r18,32(sp)
   6a04c:	dc400715 	stw	r17,28(sp)
   6a050:	dc000615 	stw	r16,24(sp)
   6a054:	10891304 	addi	r2,r2,9292
   6a058:	dfc00915 	stw	ra,36(sp)
   6a05c:	2021883a 	mov	r16,r4
   6a060:	3823883a 	mov	r17,r7
   6a064:	14800017 	ldw	r18,0(r2)
   6a068:	28001426 	beq	r5,zero,6a0bc <_wcrtomb_r+0x7c>
   6a06c:	d9400415 	stw	r5,16(sp)
   6a070:	d9800515 	stw	r6,20(sp)
   6a074:	0065b580 	call	65b58 <__locale_charset>
   6a078:	d9800517 	ldw	r6,20(sp)
   6a07c:	d9400417 	ldw	r5,16(sp)
   6a080:	100f883a 	mov	r7,r2
   6a084:	dc400015 	stw	r17,0(sp)
   6a088:	8009883a 	mov	r4,r16
   6a08c:	903ee83a 	callr	r18
   6a090:	00ffffc4 	movi	r3,-1
   6a094:	10c0031e 	bne	r2,r3,6a0a4 <_wcrtomb_r+0x64>
   6a098:	88000015 	stw	zero,0(r17)
   6a09c:	00c02284 	movi	r3,138
   6a0a0:	80c00015 	stw	r3,0(r16)
   6a0a4:	dfc00917 	ldw	ra,36(sp)
   6a0a8:	dc800817 	ldw	r18,32(sp)
   6a0ac:	dc400717 	ldw	r17,28(sp)
   6a0b0:	dc000617 	ldw	r16,24(sp)
   6a0b4:	dec00a04 	addi	sp,sp,40
   6a0b8:	f800283a 	ret
   6a0bc:	0065b580 	call	65b58 <__locale_charset>
   6a0c0:	100f883a 	mov	r7,r2
   6a0c4:	dc400015 	stw	r17,0(sp)
   6a0c8:	000d883a 	mov	r6,zero
   6a0cc:	d9400104 	addi	r5,sp,4
   6a0d0:	8009883a 	mov	r4,r16
   6a0d4:	903ee83a 	callr	r18
   6a0d8:	003fed06 	br	6a090 <__alt_data_end+0xfffea090>

0006a0dc <wcrtomb>:
   6a0dc:	defff604 	addi	sp,sp,-40
   6a0e0:	008001f4 	movhi	r2,7
   6a0e4:	dc800615 	stw	r18,24(sp)
   6a0e8:	dc400515 	stw	r17,20(sp)
   6a0ec:	10890f04 	addi	r2,r2,9276
   6a0f0:	dfc00915 	stw	ra,36(sp)
   6a0f4:	dd000815 	stw	r20,32(sp)
   6a0f8:	dcc00715 	stw	r19,28(sp)
   6a0fc:	dc000415 	stw	r16,16(sp)
   6a100:	3025883a 	mov	r18,r6
   6a104:	14400017 	ldw	r17,0(r2)
   6a108:	20001926 	beq	r4,zero,6a170 <wcrtomb+0x94>
   6a10c:	008001f4 	movhi	r2,7
   6a110:	10891304 	addi	r2,r2,9292
   6a114:	15000017 	ldw	r20,0(r2)
   6a118:	2021883a 	mov	r16,r4
   6a11c:	2827883a 	mov	r19,r5
   6a120:	0065b580 	call	65b58 <__locale_charset>
   6a124:	100f883a 	mov	r7,r2
   6a128:	dc800015 	stw	r18,0(sp)
   6a12c:	980d883a 	mov	r6,r19
   6a130:	800b883a 	mov	r5,r16
   6a134:	8809883a 	mov	r4,r17
   6a138:	a03ee83a 	callr	r20
   6a13c:	00ffffc4 	movi	r3,-1
   6a140:	10c0031e 	bne	r2,r3,6a150 <wcrtomb+0x74>
   6a144:	90000015 	stw	zero,0(r18)
   6a148:	00c02284 	movi	r3,138
   6a14c:	88c00015 	stw	r3,0(r17)
   6a150:	dfc00917 	ldw	ra,36(sp)
   6a154:	dd000817 	ldw	r20,32(sp)
   6a158:	dcc00717 	ldw	r19,28(sp)
   6a15c:	dc800617 	ldw	r18,24(sp)
   6a160:	dc400517 	ldw	r17,20(sp)
   6a164:	dc000417 	ldw	r16,16(sp)
   6a168:	dec00a04 	addi	sp,sp,40
   6a16c:	f800283a 	ret
   6a170:	008001f4 	movhi	r2,7
   6a174:	10891304 	addi	r2,r2,9292
   6a178:	14000017 	ldw	r16,0(r2)
   6a17c:	0065b580 	call	65b58 <__locale_charset>
   6a180:	100f883a 	mov	r7,r2
   6a184:	dc800015 	stw	r18,0(sp)
   6a188:	000d883a 	mov	r6,zero
   6a18c:	d9400104 	addi	r5,sp,4
   6a190:	8809883a 	mov	r4,r17
   6a194:	803ee83a 	callr	r16
   6a198:	003fe806 	br	6a13c <__alt_data_end+0xfffea13c>

0006a19c <__ascii_wctomb>:
   6a19c:	28000526 	beq	r5,zero,6a1b4 <__ascii_wctomb+0x18>
   6a1a0:	00803fc4 	movi	r2,255
   6a1a4:	11800536 	bltu	r2,r6,6a1bc <__ascii_wctomb+0x20>
   6a1a8:	29800005 	stb	r6,0(r5)
   6a1ac:	00800044 	movi	r2,1
   6a1b0:	f800283a 	ret
   6a1b4:	0005883a 	mov	r2,zero
   6a1b8:	f800283a 	ret
   6a1bc:	00802284 	movi	r2,138
   6a1c0:	20800015 	stw	r2,0(r4)
   6a1c4:	00bfffc4 	movi	r2,-1
   6a1c8:	f800283a 	ret

0006a1cc <_wctomb_r>:
   6a1cc:	008001f4 	movhi	r2,7
   6a1d0:	defff904 	addi	sp,sp,-28
   6a1d4:	10891304 	addi	r2,r2,9292
   6a1d8:	dfc00615 	stw	ra,24(sp)
   6a1dc:	dc400515 	stw	r17,20(sp)
   6a1e0:	dc000415 	stw	r16,16(sp)
   6a1e4:	3823883a 	mov	r17,r7
   6a1e8:	14000017 	ldw	r16,0(r2)
   6a1ec:	d9000115 	stw	r4,4(sp)
   6a1f0:	d9400215 	stw	r5,8(sp)
   6a1f4:	d9800315 	stw	r6,12(sp)
   6a1f8:	0065b580 	call	65b58 <__locale_charset>
   6a1fc:	d9800317 	ldw	r6,12(sp)
   6a200:	d9400217 	ldw	r5,8(sp)
   6a204:	d9000117 	ldw	r4,4(sp)
   6a208:	100f883a 	mov	r7,r2
   6a20c:	dc400015 	stw	r17,0(sp)
   6a210:	803ee83a 	callr	r16
   6a214:	dfc00617 	ldw	ra,24(sp)
   6a218:	dc400517 	ldw	r17,20(sp)
   6a21c:	dc000417 	ldw	r16,16(sp)
   6a220:	dec00704 	addi	sp,sp,28
   6a224:	f800283a 	ret

0006a228 <__udivdi3>:
   6a228:	defff404 	addi	sp,sp,-48
   6a22c:	dcc00515 	stw	r19,20(sp)
   6a230:	dc000215 	stw	r16,8(sp)
   6a234:	dfc00b15 	stw	ra,44(sp)
   6a238:	df000a15 	stw	fp,40(sp)
   6a23c:	ddc00915 	stw	r23,36(sp)
   6a240:	dd800815 	stw	r22,32(sp)
   6a244:	dd400715 	stw	r21,28(sp)
   6a248:	dd000615 	stw	r20,24(sp)
   6a24c:	dc800415 	stw	r18,16(sp)
   6a250:	dc400315 	stw	r17,12(sp)
   6a254:	2027883a 	mov	r19,r4
   6a258:	2821883a 	mov	r16,r5
   6a25c:	3800461e 	bne	r7,zero,6a378 <__udivdi3+0x150>
   6a260:	3023883a 	mov	r17,r6
   6a264:	2025883a 	mov	r18,r4
   6a268:	2980572e 	bgeu	r5,r6,6a3c8 <__udivdi3+0x1a0>
   6a26c:	00bfffd4 	movui	r2,65535
   6a270:	282d883a 	mov	r22,r5
   6a274:	1180b236 	bltu	r2,r6,6a540 <__udivdi3+0x318>
   6a278:	00803fc4 	movi	r2,255
   6a27c:	1185803a 	cmpltu	r2,r2,r6
   6a280:	100490fa 	slli	r2,r2,3
   6a284:	3086d83a 	srl	r3,r6,r2
   6a288:	010001f4 	movhi	r4,7
   6a28c:	2101e804 	addi	r4,r4,1952
   6a290:	20c7883a 	add	r3,r4,r3
   6a294:	18c00003 	ldbu	r3,0(r3)
   6a298:	1885883a 	add	r2,r3,r2
   6a29c:	00c00804 	movi	r3,32
   6a2a0:	1887c83a 	sub	r3,r3,r2
   6a2a4:	18000526 	beq	r3,zero,6a2bc <__udivdi3+0x94>
   6a2a8:	80e0983a 	sll	r16,r16,r3
   6a2ac:	9884d83a 	srl	r2,r19,r2
   6a2b0:	30e2983a 	sll	r17,r6,r3
   6a2b4:	98e4983a 	sll	r18,r19,r3
   6a2b8:	142cb03a 	or	r22,r2,r16
   6a2bc:	882ad43a 	srli	r21,r17,16
   6a2c0:	b009883a 	mov	r4,r22
   6a2c4:	8d3fffcc 	andi	r20,r17,65535
   6a2c8:	a80b883a 	mov	r5,r21
   6a2cc:	006af440 	call	6af44 <__umodsi3>
   6a2d0:	b009883a 	mov	r4,r22
   6a2d4:	a80b883a 	mov	r5,r21
   6a2d8:	1027883a 	mov	r19,r2
   6a2dc:	006aee00 	call	6aee0 <__udivsi3>
   6a2e0:	100b883a 	mov	r5,r2
   6a2e4:	a009883a 	mov	r4,r20
   6a2e8:	102d883a 	mov	r22,r2
   6a2ec:	00609000 	call	60900 <__mulsi3>
   6a2f0:	9826943a 	slli	r19,r19,16
   6a2f4:	9006d43a 	srli	r3,r18,16
   6a2f8:	1cc6b03a 	or	r3,r3,r19
   6a2fc:	1880052e 	bgeu	r3,r2,6a314 <__udivdi3+0xec>
   6a300:	1c47883a 	add	r3,r3,r17
   6a304:	b13fffc4 	addi	r4,r22,-1
   6a308:	1c400136 	bltu	r3,r17,6a310 <__udivdi3+0xe8>
   6a30c:	18814236 	bltu	r3,r2,6a818 <__udivdi3+0x5f0>
   6a310:	202d883a 	mov	r22,r4
   6a314:	18a1c83a 	sub	r16,r3,r2
   6a318:	8009883a 	mov	r4,r16
   6a31c:	a80b883a 	mov	r5,r21
   6a320:	006af440 	call	6af44 <__umodsi3>
   6a324:	1027883a 	mov	r19,r2
   6a328:	8009883a 	mov	r4,r16
   6a32c:	a80b883a 	mov	r5,r21
   6a330:	9826943a 	slli	r19,r19,16
   6a334:	006aee00 	call	6aee0 <__udivsi3>
   6a338:	100b883a 	mov	r5,r2
   6a33c:	a009883a 	mov	r4,r20
   6a340:	94bfffcc 	andi	r18,r18,65535
   6a344:	1021883a 	mov	r16,r2
   6a348:	94e4b03a 	or	r18,r18,r19
   6a34c:	00609000 	call	60900 <__mulsi3>
   6a350:	9080052e 	bgeu	r18,r2,6a368 <__udivdi3+0x140>
   6a354:	8ca5883a 	add	r18,r17,r18
   6a358:	80ffffc4 	addi	r3,r16,-1
   6a35c:	94410c36 	bltu	r18,r17,6a790 <__udivdi3+0x568>
   6a360:	90810b2e 	bgeu	r18,r2,6a790 <__udivdi3+0x568>
   6a364:	843fff84 	addi	r16,r16,-2
   6a368:	b004943a 	slli	r2,r22,16
   6a36c:	0007883a 	mov	r3,zero
   6a370:	1404b03a 	or	r2,r2,r16
   6a374:	00005e06 	br	6a4f0 <__udivdi3+0x2c8>
   6a378:	29c05b36 	bltu	r5,r7,6a4e8 <__udivdi3+0x2c0>
   6a37c:	00bfffd4 	movui	r2,65535
   6a380:	11c0672e 	bgeu	r2,r7,6a520 <__udivdi3+0x2f8>
   6a384:	00804034 	movhi	r2,256
   6a388:	10bfffc4 	addi	r2,r2,-1
   6a38c:	11c10a36 	bltu	r2,r7,6a7b8 <__udivdi3+0x590>
   6a390:	00800404 	movi	r2,16
   6a394:	3886d83a 	srl	r3,r7,r2
   6a398:	010001f4 	movhi	r4,7
   6a39c:	2101e804 	addi	r4,r4,1952
   6a3a0:	20c7883a 	add	r3,r4,r3
   6a3a4:	18c00003 	ldbu	r3,0(r3)
   6a3a8:	05c00804 	movi	r23,32
   6a3ac:	1885883a 	add	r2,r3,r2
   6a3b0:	b8afc83a 	sub	r23,r23,r2
   6a3b4:	b800671e 	bne	r23,zero,6a554 <__udivdi3+0x32c>
   6a3b8:	3c010536 	bltu	r7,r16,6a7d0 <__udivdi3+0x5a8>
   6a3bc:	9985403a 	cmpgeu	r2,r19,r6
   6a3c0:	0007883a 	mov	r3,zero
   6a3c4:	00004a06 	br	6a4f0 <__udivdi3+0x2c8>
   6a3c8:	3000041e 	bne	r6,zero,6a3dc <__udivdi3+0x1b4>
   6a3cc:	000b883a 	mov	r5,zero
   6a3d0:	01000044 	movi	r4,1
   6a3d4:	006aee00 	call	6aee0 <__udivsi3>
   6a3d8:	1023883a 	mov	r17,r2
   6a3dc:	00bfffd4 	movui	r2,65535
   6a3e0:	1440532e 	bgeu	r2,r17,6a530 <__udivdi3+0x308>
   6a3e4:	00804034 	movhi	r2,256
   6a3e8:	10bfffc4 	addi	r2,r2,-1
   6a3ec:	1440f436 	bltu	r2,r17,6a7c0 <__udivdi3+0x598>
   6a3f0:	00800404 	movi	r2,16
   6a3f4:	8886d83a 	srl	r3,r17,r2
   6a3f8:	010001f4 	movhi	r4,7
   6a3fc:	2101e804 	addi	r4,r4,1952
   6a400:	20c7883a 	add	r3,r4,r3
   6a404:	18c00003 	ldbu	r3,0(r3)
   6a408:	1885883a 	add	r2,r3,r2
   6a40c:	00c00804 	movi	r3,32
   6a410:	1887c83a 	sub	r3,r3,r2
   6a414:	1800a51e 	bne	r3,zero,6a6ac <__udivdi3+0x484>
   6a418:	882ad43a 	srli	r21,r17,16
   6a41c:	8461c83a 	sub	r16,r16,r17
   6a420:	8d3fffcc 	andi	r20,r17,65535
   6a424:	00c00044 	movi	r3,1
   6a428:	a80b883a 	mov	r5,r21
   6a42c:	8009883a 	mov	r4,r16
   6a430:	d8c00115 	stw	r3,4(sp)
   6a434:	006af440 	call	6af44 <__umodsi3>
   6a438:	a80b883a 	mov	r5,r21
   6a43c:	8009883a 	mov	r4,r16
   6a440:	1027883a 	mov	r19,r2
   6a444:	006aee00 	call	6aee0 <__udivsi3>
   6a448:	a00b883a 	mov	r5,r20
   6a44c:	1009883a 	mov	r4,r2
   6a450:	102d883a 	mov	r22,r2
   6a454:	00609000 	call	60900 <__mulsi3>
   6a458:	9826943a 	slli	r19,r19,16
   6a45c:	900ed43a 	srli	r7,r18,16
   6a460:	d8c00117 	ldw	r3,4(sp)
   6a464:	3cceb03a 	or	r7,r7,r19
   6a468:	3880052e 	bgeu	r7,r2,6a480 <__udivdi3+0x258>
   6a46c:	3c4f883a 	add	r7,r7,r17
   6a470:	b13fffc4 	addi	r4,r22,-1
   6a474:	3c400136 	bltu	r7,r17,6a47c <__udivdi3+0x254>
   6a478:	3880e436 	bltu	r7,r2,6a80c <__udivdi3+0x5e4>
   6a47c:	202d883a 	mov	r22,r4
   6a480:	38a1c83a 	sub	r16,r7,r2
   6a484:	8009883a 	mov	r4,r16
   6a488:	a80b883a 	mov	r5,r21
   6a48c:	d8c00115 	stw	r3,4(sp)
   6a490:	006af440 	call	6af44 <__umodsi3>
   6a494:	1027883a 	mov	r19,r2
   6a498:	8009883a 	mov	r4,r16
   6a49c:	a80b883a 	mov	r5,r21
   6a4a0:	9826943a 	slli	r19,r19,16
   6a4a4:	006aee00 	call	6aee0 <__udivsi3>
   6a4a8:	a00b883a 	mov	r5,r20
   6a4ac:	1009883a 	mov	r4,r2
   6a4b0:	94bfffcc 	andi	r18,r18,65535
   6a4b4:	1021883a 	mov	r16,r2
   6a4b8:	94e4b03a 	or	r18,r18,r19
   6a4bc:	00609000 	call	60900 <__mulsi3>
   6a4c0:	d8c00117 	ldw	r3,4(sp)
   6a4c4:	9080052e 	bgeu	r18,r2,6a4dc <__udivdi3+0x2b4>
   6a4c8:	8ca5883a 	add	r18,r17,r18
   6a4cc:	813fffc4 	addi	r4,r16,-1
   6a4d0:	9440ad36 	bltu	r18,r17,6a788 <__udivdi3+0x560>
   6a4d4:	9080ac2e 	bgeu	r18,r2,6a788 <__udivdi3+0x560>
   6a4d8:	843fff84 	addi	r16,r16,-2
   6a4dc:	b004943a 	slli	r2,r22,16
   6a4e0:	1404b03a 	or	r2,r2,r16
   6a4e4:	00000206 	br	6a4f0 <__udivdi3+0x2c8>
   6a4e8:	0007883a 	mov	r3,zero
   6a4ec:	0005883a 	mov	r2,zero
   6a4f0:	dfc00b17 	ldw	ra,44(sp)
   6a4f4:	df000a17 	ldw	fp,40(sp)
   6a4f8:	ddc00917 	ldw	r23,36(sp)
   6a4fc:	dd800817 	ldw	r22,32(sp)
   6a500:	dd400717 	ldw	r21,28(sp)
   6a504:	dd000617 	ldw	r20,24(sp)
   6a508:	dcc00517 	ldw	r19,20(sp)
   6a50c:	dc800417 	ldw	r18,16(sp)
   6a510:	dc400317 	ldw	r17,12(sp)
   6a514:	dc000217 	ldw	r16,8(sp)
   6a518:	dec00c04 	addi	sp,sp,48
   6a51c:	f800283a 	ret
   6a520:	00803fc4 	movi	r2,255
   6a524:	11c5803a 	cmpltu	r2,r2,r7
   6a528:	100490fa 	slli	r2,r2,3
   6a52c:	003f9906 	br	6a394 <__alt_data_end+0xfffea394>
   6a530:	00803fc4 	movi	r2,255
   6a534:	1445803a 	cmpltu	r2,r2,r17
   6a538:	100490fa 	slli	r2,r2,3
   6a53c:	003fad06 	br	6a3f4 <__alt_data_end+0xfffea3f4>
   6a540:	00804034 	movhi	r2,256
   6a544:	10bfffc4 	addi	r2,r2,-1
   6a548:	11809f36 	bltu	r2,r6,6a7c8 <__udivdi3+0x5a0>
   6a54c:	00800404 	movi	r2,16
   6a550:	003f4c06 	br	6a284 <__alt_data_end+0xfffea284>
   6a554:	3dce983a 	sll	r7,r7,r23
   6a558:	30b8d83a 	srl	fp,r6,r2
   6a55c:	80a2d83a 	srl	r17,r16,r2
   6a560:	35cc983a 	sll	r6,r6,r23
   6a564:	3f38b03a 	or	fp,r7,fp
   6a568:	e024d43a 	srli	r18,fp,16
   6a56c:	9884d83a 	srl	r2,r19,r2
   6a570:	85e0983a 	sll	r16,r16,r23
   6a574:	8809883a 	mov	r4,r17
   6a578:	900b883a 	mov	r5,r18
   6a57c:	d9800015 	stw	r6,0(sp)
   6a580:	1420b03a 	or	r16,r2,r16
   6a584:	006af440 	call	6af44 <__umodsi3>
   6a588:	900b883a 	mov	r5,r18
   6a58c:	8809883a 	mov	r4,r17
   6a590:	1029883a 	mov	r20,r2
   6a594:	e5bfffcc 	andi	r22,fp,65535
   6a598:	006aee00 	call	6aee0 <__udivsi3>
   6a59c:	100b883a 	mov	r5,r2
   6a5a0:	b009883a 	mov	r4,r22
   6a5a4:	102b883a 	mov	r21,r2
   6a5a8:	00609000 	call	60900 <__mulsi3>
   6a5ac:	a028943a 	slli	r20,r20,16
   6a5b0:	8006d43a 	srli	r3,r16,16
   6a5b4:	1d06b03a 	or	r3,r3,r20
   6a5b8:	1880042e 	bgeu	r3,r2,6a5cc <__udivdi3+0x3a4>
   6a5bc:	1f07883a 	add	r3,r3,fp
   6a5c0:	a93fffc4 	addi	r4,r21,-1
   6a5c4:	1f00892e 	bgeu	r3,fp,6a7ec <__udivdi3+0x5c4>
   6a5c8:	202b883a 	mov	r21,r4
   6a5cc:	18a3c83a 	sub	r17,r3,r2
   6a5d0:	8809883a 	mov	r4,r17
   6a5d4:	900b883a 	mov	r5,r18
   6a5d8:	006af440 	call	6af44 <__umodsi3>
   6a5dc:	1029883a 	mov	r20,r2
   6a5e0:	8809883a 	mov	r4,r17
   6a5e4:	900b883a 	mov	r5,r18
   6a5e8:	a028943a 	slli	r20,r20,16
   6a5ec:	006aee00 	call	6aee0 <__udivsi3>
   6a5f0:	100b883a 	mov	r5,r2
   6a5f4:	b009883a 	mov	r4,r22
   6a5f8:	843fffcc 	andi	r16,r16,65535
   6a5fc:	1023883a 	mov	r17,r2
   6a600:	8520b03a 	or	r16,r16,r20
   6a604:	00609000 	call	60900 <__mulsi3>
   6a608:	8080042e 	bgeu	r16,r2,6a61c <__udivdi3+0x3f4>
   6a60c:	8721883a 	add	r16,r16,fp
   6a610:	88ffffc4 	addi	r3,r17,-1
   6a614:	8700712e 	bgeu	r16,fp,6a7dc <__udivdi3+0x5b4>
   6a618:	1823883a 	mov	r17,r3
   6a61c:	a80e943a 	slli	r7,r21,16
   6a620:	d8c00017 	ldw	r3,0(sp)
   6a624:	80a1c83a 	sub	r16,r16,r2
   6a628:	3c64b03a 	or	r18,r7,r17
   6a62c:	1d3fffcc 	andi	r20,r3,65535
   6a630:	9022d43a 	srli	r17,r18,16
   6a634:	95bfffcc 	andi	r22,r18,65535
   6a638:	a00b883a 	mov	r5,r20
   6a63c:	b009883a 	mov	r4,r22
   6a640:	182ad43a 	srli	r21,r3,16
   6a644:	00609000 	call	60900 <__mulsi3>
   6a648:	a00b883a 	mov	r5,r20
   6a64c:	8809883a 	mov	r4,r17
   6a650:	1039883a 	mov	fp,r2
   6a654:	00609000 	call	60900 <__mulsi3>
   6a658:	8809883a 	mov	r4,r17
   6a65c:	a80b883a 	mov	r5,r21
   6a660:	1029883a 	mov	r20,r2
   6a664:	00609000 	call	60900 <__mulsi3>
   6a668:	a80b883a 	mov	r5,r21
   6a66c:	b009883a 	mov	r4,r22
   6a670:	1023883a 	mov	r17,r2
   6a674:	00609000 	call	60900 <__mulsi3>
   6a678:	e006d43a 	srli	r3,fp,16
   6a67c:	1505883a 	add	r2,r2,r20
   6a680:	1887883a 	add	r3,r3,r2
   6a684:	1d00022e 	bgeu	r3,r20,6a690 <__udivdi3+0x468>
   6a688:	00800074 	movhi	r2,1
   6a68c:	88a3883a 	add	r17,r17,r2
   6a690:	1804d43a 	srli	r2,r3,16
   6a694:	1463883a 	add	r17,r2,r17
   6a698:	84404436 	bltu	r16,r17,6a7ac <__udivdi3+0x584>
   6a69c:	84403e26 	beq	r16,r17,6a798 <__udivdi3+0x570>
   6a6a0:	9005883a 	mov	r2,r18
   6a6a4:	0007883a 	mov	r3,zero
   6a6a8:	003f9106 	br	6a4f0 <__alt_data_end+0xfffea4f0>
   6a6ac:	88e2983a 	sll	r17,r17,r3
   6a6b0:	80aed83a 	srl	r23,r16,r2
   6a6b4:	80e0983a 	sll	r16,r16,r3
   6a6b8:	882ad43a 	srli	r21,r17,16
   6a6bc:	9884d83a 	srl	r2,r19,r2
   6a6c0:	b809883a 	mov	r4,r23
   6a6c4:	a80b883a 	mov	r5,r21
   6a6c8:	98e4983a 	sll	r18,r19,r3
   6a6cc:	142cb03a 	or	r22,r2,r16
   6a6d0:	006af440 	call	6af44 <__umodsi3>
   6a6d4:	b809883a 	mov	r4,r23
   6a6d8:	a80b883a 	mov	r5,r21
   6a6dc:	1027883a 	mov	r19,r2
   6a6e0:	8d3fffcc 	andi	r20,r17,65535
   6a6e4:	006aee00 	call	6aee0 <__udivsi3>
   6a6e8:	a009883a 	mov	r4,r20
   6a6ec:	100b883a 	mov	r5,r2
   6a6f0:	102f883a 	mov	r23,r2
   6a6f4:	00609000 	call	60900 <__mulsi3>
   6a6f8:	9826943a 	slli	r19,r19,16
   6a6fc:	b008d43a 	srli	r4,r22,16
   6a700:	24c8b03a 	or	r4,r4,r19
   6a704:	2080062e 	bgeu	r4,r2,6a720 <__udivdi3+0x4f8>
   6a708:	2449883a 	add	r4,r4,r17
   6a70c:	b8ffffc4 	addi	r3,r23,-1
   6a710:	24403c36 	bltu	r4,r17,6a804 <__udivdi3+0x5dc>
   6a714:	20803b2e 	bgeu	r4,r2,6a804 <__udivdi3+0x5dc>
   6a718:	bdffff84 	addi	r23,r23,-2
   6a71c:	2449883a 	add	r4,r4,r17
   6a720:	20a1c83a 	sub	r16,r4,r2
   6a724:	a80b883a 	mov	r5,r21
   6a728:	8009883a 	mov	r4,r16
   6a72c:	006af440 	call	6af44 <__umodsi3>
   6a730:	a80b883a 	mov	r5,r21
   6a734:	8009883a 	mov	r4,r16
   6a738:	1027883a 	mov	r19,r2
   6a73c:	006aee00 	call	6aee0 <__udivsi3>
   6a740:	a009883a 	mov	r4,r20
   6a744:	100b883a 	mov	r5,r2
   6a748:	9826943a 	slli	r19,r19,16
   6a74c:	1039883a 	mov	fp,r2
   6a750:	00609000 	call	60900 <__mulsi3>
   6a754:	b13fffcc 	andi	r4,r22,65535
   6a758:	24c8b03a 	or	r4,r4,r19
   6a75c:	2080062e 	bgeu	r4,r2,6a778 <__udivdi3+0x550>
   6a760:	2449883a 	add	r4,r4,r17
   6a764:	e0ffffc4 	addi	r3,fp,-1
   6a768:	24402436 	bltu	r4,r17,6a7fc <__udivdi3+0x5d4>
   6a76c:	2080232e 	bgeu	r4,r2,6a7fc <__udivdi3+0x5d4>
   6a770:	e73fff84 	addi	fp,fp,-2
   6a774:	2449883a 	add	r4,r4,r17
   6a778:	b82e943a 	slli	r23,r23,16
   6a77c:	20a1c83a 	sub	r16,r4,r2
   6a780:	bf06b03a 	or	r3,r23,fp
   6a784:	003f2806 	br	6a428 <__alt_data_end+0xfffea428>
   6a788:	2021883a 	mov	r16,r4
   6a78c:	003f5306 	br	6a4dc <__alt_data_end+0xfffea4dc>
   6a790:	1821883a 	mov	r16,r3
   6a794:	003ef406 	br	6a368 <__alt_data_end+0xfffea368>
   6a798:	1806943a 	slli	r3,r3,16
   6a79c:	9de6983a 	sll	r19,r19,r23
   6a7a0:	e73fffcc 	andi	fp,fp,65535
   6a7a4:	1f07883a 	add	r3,r3,fp
   6a7a8:	98ffbd2e 	bgeu	r19,r3,6a6a0 <__alt_data_end+0xfffea6a0>
   6a7ac:	90bfffc4 	addi	r2,r18,-1
   6a7b0:	0007883a 	mov	r3,zero
   6a7b4:	003f4e06 	br	6a4f0 <__alt_data_end+0xfffea4f0>
   6a7b8:	00800604 	movi	r2,24
   6a7bc:	003ef506 	br	6a394 <__alt_data_end+0xfffea394>
   6a7c0:	00800604 	movi	r2,24
   6a7c4:	003f0b06 	br	6a3f4 <__alt_data_end+0xfffea3f4>
   6a7c8:	00800604 	movi	r2,24
   6a7cc:	003ead06 	br	6a284 <__alt_data_end+0xfffea284>
   6a7d0:	0007883a 	mov	r3,zero
   6a7d4:	00800044 	movi	r2,1
   6a7d8:	003f4506 	br	6a4f0 <__alt_data_end+0xfffea4f0>
   6a7dc:	80bf8e2e 	bgeu	r16,r2,6a618 <__alt_data_end+0xfffea618>
   6a7e0:	8c7fff84 	addi	r17,r17,-2
   6a7e4:	8721883a 	add	r16,r16,fp
   6a7e8:	003f8c06 	br	6a61c <__alt_data_end+0xfffea61c>
   6a7ec:	18bf762e 	bgeu	r3,r2,6a5c8 <__alt_data_end+0xfffea5c8>
   6a7f0:	ad7fff84 	addi	r21,r21,-2
   6a7f4:	1f07883a 	add	r3,r3,fp
   6a7f8:	003f7406 	br	6a5cc <__alt_data_end+0xfffea5cc>
   6a7fc:	1839883a 	mov	fp,r3
   6a800:	003fdd06 	br	6a778 <__alt_data_end+0xfffea778>
   6a804:	182f883a 	mov	r23,r3
   6a808:	003fc506 	br	6a720 <__alt_data_end+0xfffea720>
   6a80c:	b5bfff84 	addi	r22,r22,-2
   6a810:	3c4f883a 	add	r7,r7,r17
   6a814:	003f1a06 	br	6a480 <__alt_data_end+0xfffea480>
   6a818:	b5bfff84 	addi	r22,r22,-2
   6a81c:	1c47883a 	add	r3,r3,r17
   6a820:	003ebc06 	br	6a314 <__alt_data_end+0xfffea314>

0006a824 <__umoddi3>:
   6a824:	defff304 	addi	sp,sp,-52
   6a828:	df000b15 	stw	fp,44(sp)
   6a82c:	dc400415 	stw	r17,16(sp)
   6a830:	dc000315 	stw	r16,12(sp)
   6a834:	dfc00c15 	stw	ra,48(sp)
   6a838:	ddc00a15 	stw	r23,40(sp)
   6a83c:	dd800915 	stw	r22,36(sp)
   6a840:	dd400815 	stw	r21,32(sp)
   6a844:	dd000715 	stw	r20,28(sp)
   6a848:	dcc00615 	stw	r19,24(sp)
   6a84c:	dc800515 	stw	r18,20(sp)
   6a850:	2021883a 	mov	r16,r4
   6a854:	2823883a 	mov	r17,r5
   6a858:	2839883a 	mov	fp,r5
   6a85c:	3800401e 	bne	r7,zero,6a960 <__umoddi3+0x13c>
   6a860:	3027883a 	mov	r19,r6
   6a864:	2029883a 	mov	r20,r4
   6a868:	2980552e 	bgeu	r5,r6,6a9c0 <__umoddi3+0x19c>
   6a86c:	00bfffd4 	movui	r2,65535
   6a870:	1180a236 	bltu	r2,r6,6aafc <__umoddi3+0x2d8>
   6a874:	01003fc4 	movi	r4,255
   6a878:	2189803a 	cmpltu	r4,r4,r6
   6a87c:	200890fa 	slli	r4,r4,3
   6a880:	3104d83a 	srl	r2,r6,r4
   6a884:	00c001f4 	movhi	r3,7
   6a888:	18c1e804 	addi	r3,r3,1952
   6a88c:	1885883a 	add	r2,r3,r2
   6a890:	10c00003 	ldbu	r3,0(r2)
   6a894:	00800804 	movi	r2,32
   6a898:	1909883a 	add	r4,r3,r4
   6a89c:	1125c83a 	sub	r18,r2,r4
   6a8a0:	90000526 	beq	r18,zero,6a8b8 <__umoddi3+0x94>
   6a8a4:	8ca2983a 	sll	r17,r17,r18
   6a8a8:	8108d83a 	srl	r4,r16,r4
   6a8ac:	34a6983a 	sll	r19,r6,r18
   6a8b0:	84a8983a 	sll	r20,r16,r18
   6a8b4:	2478b03a 	or	fp,r4,r17
   6a8b8:	982cd43a 	srli	r22,r19,16
   6a8bc:	e009883a 	mov	r4,fp
   6a8c0:	9dffffcc 	andi	r23,r19,65535
   6a8c4:	b00b883a 	mov	r5,r22
   6a8c8:	006af440 	call	6af44 <__umodsi3>
   6a8cc:	b00b883a 	mov	r5,r22
   6a8d0:	e009883a 	mov	r4,fp
   6a8d4:	102b883a 	mov	r21,r2
   6a8d8:	006aee00 	call	6aee0 <__udivsi3>
   6a8dc:	100b883a 	mov	r5,r2
   6a8e0:	b809883a 	mov	r4,r23
   6a8e4:	00609000 	call	60900 <__mulsi3>
   6a8e8:	a82a943a 	slli	r21,r21,16
   6a8ec:	a006d43a 	srli	r3,r20,16
   6a8f0:	1d46b03a 	or	r3,r3,r21
   6a8f4:	1880032e 	bgeu	r3,r2,6a904 <__umoddi3+0xe0>
   6a8f8:	1cc7883a 	add	r3,r3,r19
   6a8fc:	1cc00136 	bltu	r3,r19,6a904 <__umoddi3+0xe0>
   6a900:	18813136 	bltu	r3,r2,6adc8 <__umoddi3+0x5a4>
   6a904:	18a1c83a 	sub	r16,r3,r2
   6a908:	b00b883a 	mov	r5,r22
   6a90c:	8009883a 	mov	r4,r16
   6a910:	006af440 	call	6af44 <__umodsi3>
   6a914:	b00b883a 	mov	r5,r22
   6a918:	8009883a 	mov	r4,r16
   6a91c:	1023883a 	mov	r17,r2
   6a920:	006aee00 	call	6aee0 <__udivsi3>
   6a924:	100b883a 	mov	r5,r2
   6a928:	b809883a 	mov	r4,r23
   6a92c:	8822943a 	slli	r17,r17,16
   6a930:	00609000 	call	60900 <__mulsi3>
   6a934:	a0ffffcc 	andi	r3,r20,65535
   6a938:	1c46b03a 	or	r3,r3,r17
   6a93c:	1880042e 	bgeu	r3,r2,6a950 <__umoddi3+0x12c>
   6a940:	1cc7883a 	add	r3,r3,r19
   6a944:	1cc00236 	bltu	r3,r19,6a950 <__umoddi3+0x12c>
   6a948:	1880012e 	bgeu	r3,r2,6a950 <__umoddi3+0x12c>
   6a94c:	1cc7883a 	add	r3,r3,r19
   6a950:	1885c83a 	sub	r2,r3,r2
   6a954:	1484d83a 	srl	r2,r2,r18
   6a958:	0007883a 	mov	r3,zero
   6a95c:	00005306 	br	6aaac <__umoddi3+0x288>
   6a960:	29c05036 	bltu	r5,r7,6aaa4 <__umoddi3+0x280>
   6a964:	00bfffd4 	movui	r2,65535
   6a968:	11c05c2e 	bgeu	r2,r7,6aadc <__umoddi3+0x2b8>
   6a96c:	00804034 	movhi	r2,256
   6a970:	10bfffc4 	addi	r2,r2,-1
   6a974:	11c10636 	bltu	r2,r7,6ad90 <__umoddi3+0x56c>
   6a978:	01000404 	movi	r4,16
   6a97c:	3904d83a 	srl	r2,r7,r4
   6a980:	00c001f4 	movhi	r3,7
   6a984:	18c1e804 	addi	r3,r3,1952
   6a988:	1885883a 	add	r2,r3,r2
   6a98c:	14c00003 	ldbu	r19,0(r2)
   6a990:	00c00804 	movi	r3,32
   6a994:	9927883a 	add	r19,r19,r4
   6a998:	1ce9c83a 	sub	r20,r3,r19
   6a99c:	a0005c1e 	bne	r20,zero,6ab10 <__umoddi3+0x2ec>
   6a9a0:	3c400136 	bltu	r7,r17,6a9a8 <__umoddi3+0x184>
   6a9a4:	81810a36 	bltu	r16,r6,6add0 <__umoddi3+0x5ac>
   6a9a8:	8185c83a 	sub	r2,r16,r6
   6a9ac:	89e3c83a 	sub	r17,r17,r7
   6a9b0:	8089803a 	cmpltu	r4,r16,r2
   6a9b4:	8939c83a 	sub	fp,r17,r4
   6a9b8:	e007883a 	mov	r3,fp
   6a9bc:	00003b06 	br	6aaac <__umoddi3+0x288>
   6a9c0:	3000041e 	bne	r6,zero,6a9d4 <__umoddi3+0x1b0>
   6a9c4:	000b883a 	mov	r5,zero
   6a9c8:	01000044 	movi	r4,1
   6a9cc:	006aee00 	call	6aee0 <__udivsi3>
   6a9d0:	1027883a 	mov	r19,r2
   6a9d4:	00bfffd4 	movui	r2,65535
   6a9d8:	14c0442e 	bgeu	r2,r19,6aaec <__umoddi3+0x2c8>
   6a9dc:	00804034 	movhi	r2,256
   6a9e0:	10bfffc4 	addi	r2,r2,-1
   6a9e4:	14c0ec36 	bltu	r2,r19,6ad98 <__umoddi3+0x574>
   6a9e8:	00800404 	movi	r2,16
   6a9ec:	9886d83a 	srl	r3,r19,r2
   6a9f0:	010001f4 	movhi	r4,7
   6a9f4:	2101e804 	addi	r4,r4,1952
   6a9f8:	20c7883a 	add	r3,r4,r3
   6a9fc:	18c00003 	ldbu	r3,0(r3)
   6aa00:	1887883a 	add	r3,r3,r2
   6aa04:	00800804 	movi	r2,32
   6aa08:	10e5c83a 	sub	r18,r2,r3
   6aa0c:	9000ab1e 	bne	r18,zero,6acbc <__umoddi3+0x498>
   6aa10:	982cd43a 	srli	r22,r19,16
   6aa14:	8ce3c83a 	sub	r17,r17,r19
   6aa18:	9dffffcc 	andi	r23,r19,65535
   6aa1c:	b00b883a 	mov	r5,r22
   6aa20:	8809883a 	mov	r4,r17
   6aa24:	006af440 	call	6af44 <__umodsi3>
   6aa28:	b00b883a 	mov	r5,r22
   6aa2c:	8809883a 	mov	r4,r17
   6aa30:	102b883a 	mov	r21,r2
   6aa34:	006aee00 	call	6aee0 <__udivsi3>
   6aa38:	b80b883a 	mov	r5,r23
   6aa3c:	1009883a 	mov	r4,r2
   6aa40:	00609000 	call	60900 <__mulsi3>
   6aa44:	a82a943a 	slli	r21,r21,16
   6aa48:	a006d43a 	srli	r3,r20,16
   6aa4c:	1d46b03a 	or	r3,r3,r21
   6aa50:	1880042e 	bgeu	r3,r2,6aa64 <__umoddi3+0x240>
   6aa54:	1cc7883a 	add	r3,r3,r19
   6aa58:	1cc00236 	bltu	r3,r19,6aa64 <__umoddi3+0x240>
   6aa5c:	1880012e 	bgeu	r3,r2,6aa64 <__umoddi3+0x240>
   6aa60:	1cc7883a 	add	r3,r3,r19
   6aa64:	18a1c83a 	sub	r16,r3,r2
   6aa68:	b00b883a 	mov	r5,r22
   6aa6c:	8009883a 	mov	r4,r16
   6aa70:	006af440 	call	6af44 <__umodsi3>
   6aa74:	1023883a 	mov	r17,r2
   6aa78:	b00b883a 	mov	r5,r22
   6aa7c:	8009883a 	mov	r4,r16
   6aa80:	006aee00 	call	6aee0 <__udivsi3>
   6aa84:	8822943a 	slli	r17,r17,16
   6aa88:	b80b883a 	mov	r5,r23
   6aa8c:	1009883a 	mov	r4,r2
   6aa90:	00609000 	call	60900 <__mulsi3>
   6aa94:	a53fffcc 	andi	r20,r20,65535
   6aa98:	a446b03a 	or	r3,r20,r17
   6aa9c:	18bfac2e 	bgeu	r3,r2,6a950 <__alt_data_end+0xfffea950>
   6aaa0:	003fa706 	br	6a940 <__alt_data_end+0xfffea940>
   6aaa4:	2005883a 	mov	r2,r4
   6aaa8:	2807883a 	mov	r3,r5
   6aaac:	dfc00c17 	ldw	ra,48(sp)
   6aab0:	df000b17 	ldw	fp,44(sp)
   6aab4:	ddc00a17 	ldw	r23,40(sp)
   6aab8:	dd800917 	ldw	r22,36(sp)
   6aabc:	dd400817 	ldw	r21,32(sp)
   6aac0:	dd000717 	ldw	r20,28(sp)
   6aac4:	dcc00617 	ldw	r19,24(sp)
   6aac8:	dc800517 	ldw	r18,20(sp)
   6aacc:	dc400417 	ldw	r17,16(sp)
   6aad0:	dc000317 	ldw	r16,12(sp)
   6aad4:	dec00d04 	addi	sp,sp,52
   6aad8:	f800283a 	ret
   6aadc:	04c03fc4 	movi	r19,255
   6aae0:	99c9803a 	cmpltu	r4,r19,r7
   6aae4:	200890fa 	slli	r4,r4,3
   6aae8:	003fa406 	br	6a97c <__alt_data_end+0xfffea97c>
   6aaec:	00803fc4 	movi	r2,255
   6aaf0:	14c5803a 	cmpltu	r2,r2,r19
   6aaf4:	100490fa 	slli	r2,r2,3
   6aaf8:	003fbc06 	br	6a9ec <__alt_data_end+0xfffea9ec>
   6aafc:	00804034 	movhi	r2,256
   6ab00:	10bfffc4 	addi	r2,r2,-1
   6ab04:	1180a636 	bltu	r2,r6,6ada0 <__umoddi3+0x57c>
   6ab08:	01000404 	movi	r4,16
   6ab0c:	003f5c06 	br	6a880 <__alt_data_end+0xfffea880>
   6ab10:	3d0e983a 	sll	r7,r7,r20
   6ab14:	34ead83a 	srl	r21,r6,r19
   6ab18:	8cc6d83a 	srl	r3,r17,r19
   6ab1c:	8d10983a 	sll	r8,r17,r20
   6ab20:	3d6ab03a 	or	r21,r7,r21
   6ab24:	a82cd43a 	srli	r22,r21,16
   6ab28:	84e2d83a 	srl	r17,r16,r19
   6ab2c:	1809883a 	mov	r4,r3
   6ab30:	b00b883a 	mov	r5,r22
   6ab34:	8a22b03a 	or	r17,r17,r8
   6ab38:	3524983a 	sll	r18,r6,r20
   6ab3c:	dc400015 	stw	r17,0(sp)
   6ab40:	d8c00115 	stw	r3,4(sp)
   6ab44:	006af440 	call	6af44 <__umodsi3>
   6ab48:	d8c00117 	ldw	r3,4(sp)
   6ab4c:	b00b883a 	mov	r5,r22
   6ab50:	1039883a 	mov	fp,r2
   6ab54:	1809883a 	mov	r4,r3
   6ab58:	006aee00 	call	6aee0 <__udivsi3>
   6ab5c:	adffffcc 	andi	r23,r21,65535
   6ab60:	100b883a 	mov	r5,r2
   6ab64:	b809883a 	mov	r4,r23
   6ab68:	1023883a 	mov	r17,r2
   6ab6c:	00609000 	call	60900 <__mulsi3>
   6ab70:	d9400017 	ldw	r5,0(sp)
   6ab74:	e008943a 	slli	r4,fp,16
   6ab78:	8520983a 	sll	r16,r16,r20
   6ab7c:	2806d43a 	srli	r3,r5,16
   6ab80:	1906b03a 	or	r3,r3,r4
   6ab84:	1880042e 	bgeu	r3,r2,6ab98 <__umoddi3+0x374>
   6ab88:	1d47883a 	add	r3,r3,r21
   6ab8c:	893fffc4 	addi	r4,r17,-1
   6ab90:	1d40892e 	bgeu	r3,r21,6adb8 <__umoddi3+0x594>
   6ab94:	2023883a 	mov	r17,r4
   6ab98:	18b9c83a 	sub	fp,r3,r2
   6ab9c:	b00b883a 	mov	r5,r22
   6aba0:	e009883a 	mov	r4,fp
   6aba4:	006af440 	call	6af44 <__umodsi3>
   6aba8:	b00b883a 	mov	r5,r22
   6abac:	e009883a 	mov	r4,fp
   6abb0:	d8800215 	stw	r2,8(sp)
   6abb4:	006aee00 	call	6aee0 <__udivsi3>
   6abb8:	100b883a 	mov	r5,r2
   6abbc:	b809883a 	mov	r4,r23
   6abc0:	102d883a 	mov	r22,r2
   6abc4:	00609000 	call	60900 <__mulsi3>
   6abc8:	d9800217 	ldw	r6,8(sp)
   6abcc:	d8c00017 	ldw	r3,0(sp)
   6abd0:	300c943a 	slli	r6,r6,16
   6abd4:	1a3fffcc 	andi	r8,r3,65535
   6abd8:	4190b03a 	or	r8,r8,r6
   6abdc:	4080042e 	bgeu	r8,r2,6abf0 <__umoddi3+0x3cc>
   6abe0:	4551883a 	add	r8,r8,r21
   6abe4:	b0ffffc4 	addi	r3,r22,-1
   6abe8:	45406f2e 	bgeu	r8,r21,6ada8 <__umoddi3+0x584>
   6abec:	182d883a 	mov	r22,r3
   6abf0:	880e943a 	slli	r7,r17,16
   6abf4:	9006d43a 	srli	r3,r18,16
   6abf8:	91bfffcc 	andi	r6,r18,65535
   6abfc:	3dacb03a 	or	r22,r7,r22
   6ac00:	b02ed43a 	srli	r23,r22,16
   6ac04:	b5bfffcc 	andi	r22,r22,65535
   6ac08:	300b883a 	mov	r5,r6
   6ac0c:	b009883a 	mov	r4,r22
   6ac10:	40a3c83a 	sub	r17,r8,r2
   6ac14:	d8c00115 	stw	r3,4(sp)
   6ac18:	d9800215 	stw	r6,8(sp)
   6ac1c:	00609000 	call	60900 <__mulsi3>
   6ac20:	d9800217 	ldw	r6,8(sp)
   6ac24:	b809883a 	mov	r4,r23
   6ac28:	1039883a 	mov	fp,r2
   6ac2c:	300b883a 	mov	r5,r6
   6ac30:	00609000 	call	60900 <__mulsi3>
   6ac34:	d8c00117 	ldw	r3,4(sp)
   6ac38:	b809883a 	mov	r4,r23
   6ac3c:	d8800215 	stw	r2,8(sp)
   6ac40:	180b883a 	mov	r5,r3
   6ac44:	00609000 	call	60900 <__mulsi3>
   6ac48:	d8c00117 	ldw	r3,4(sp)
   6ac4c:	b009883a 	mov	r4,r22
   6ac50:	102f883a 	mov	r23,r2
   6ac54:	180b883a 	mov	r5,r3
   6ac58:	00609000 	call	60900 <__mulsi3>
   6ac5c:	d9800217 	ldw	r6,8(sp)
   6ac60:	e006d43a 	srli	r3,fp,16
   6ac64:	1185883a 	add	r2,r2,r6
   6ac68:	1885883a 	add	r2,r3,r2
   6ac6c:	1180022e 	bgeu	r2,r6,6ac78 <__umoddi3+0x454>
   6ac70:	00c00074 	movhi	r3,1
   6ac74:	b8ef883a 	add	r23,r23,r3
   6ac78:	1006d43a 	srli	r3,r2,16
   6ac7c:	1004943a 	slli	r2,r2,16
   6ac80:	e73fffcc 	andi	fp,fp,65535
   6ac84:	1dc7883a 	add	r3,r3,r23
   6ac88:	1739883a 	add	fp,r2,fp
   6ac8c:	88c03a36 	bltu	r17,r3,6ad78 <__umoddi3+0x554>
   6ac90:	88c05126 	beq	r17,r3,6add8 <__umoddi3+0x5b4>
   6ac94:	88c9c83a 	sub	r4,r17,r3
   6ac98:	e00f883a 	mov	r7,fp
   6ac9c:	81cfc83a 	sub	r7,r16,r7
   6aca0:	81c7803a 	cmpltu	r3,r16,r7
   6aca4:	20c7c83a 	sub	r3,r4,r3
   6aca8:	1cc4983a 	sll	r2,r3,r19
   6acac:	3d0ed83a 	srl	r7,r7,r20
   6acb0:	1d06d83a 	srl	r3,r3,r20
   6acb4:	11c4b03a 	or	r2,r2,r7
   6acb8:	003f7c06 	br	6aaac <__alt_data_end+0xfffeaaac>
   6acbc:	9ca6983a 	sll	r19,r19,r18
   6acc0:	88f8d83a 	srl	fp,r17,r3
   6acc4:	80c4d83a 	srl	r2,r16,r3
   6acc8:	982cd43a 	srli	r22,r19,16
   6accc:	8ca2983a 	sll	r17,r17,r18
   6acd0:	e009883a 	mov	r4,fp
   6acd4:	b00b883a 	mov	r5,r22
   6acd8:	146ab03a 	or	r21,r2,r17
   6acdc:	006af440 	call	6af44 <__umodsi3>
   6ace0:	b00b883a 	mov	r5,r22
   6ace4:	e009883a 	mov	r4,fp
   6ace8:	1029883a 	mov	r20,r2
   6acec:	9dffffcc 	andi	r23,r19,65535
   6acf0:	006aee00 	call	6aee0 <__udivsi3>
   6acf4:	b809883a 	mov	r4,r23
   6acf8:	100b883a 	mov	r5,r2
   6acfc:	00609000 	call	60900 <__mulsi3>
   6ad00:	a008943a 	slli	r4,r20,16
   6ad04:	a806d43a 	srli	r3,r21,16
   6ad08:	84a8983a 	sll	r20,r16,r18
   6ad0c:	1906b03a 	or	r3,r3,r4
   6ad10:	1880042e 	bgeu	r3,r2,6ad24 <__umoddi3+0x500>
   6ad14:	1cc7883a 	add	r3,r3,r19
   6ad18:	1cc00236 	bltu	r3,r19,6ad24 <__umoddi3+0x500>
   6ad1c:	1880012e 	bgeu	r3,r2,6ad24 <__umoddi3+0x500>
   6ad20:	1cc7883a 	add	r3,r3,r19
   6ad24:	18a3c83a 	sub	r17,r3,r2
   6ad28:	b00b883a 	mov	r5,r22
   6ad2c:	8809883a 	mov	r4,r17
   6ad30:	006af440 	call	6af44 <__umodsi3>
   6ad34:	b00b883a 	mov	r5,r22
   6ad38:	8809883a 	mov	r4,r17
   6ad3c:	1021883a 	mov	r16,r2
   6ad40:	006aee00 	call	6aee0 <__udivsi3>
   6ad44:	100b883a 	mov	r5,r2
   6ad48:	b809883a 	mov	r4,r23
   6ad4c:	8020943a 	slli	r16,r16,16
   6ad50:	00609000 	call	60900 <__mulsi3>
   6ad54:	a8ffffcc 	andi	r3,r21,65535
   6ad58:	1c06b03a 	or	r3,r3,r16
   6ad5c:	1880042e 	bgeu	r3,r2,6ad70 <__umoddi3+0x54c>
   6ad60:	1cc7883a 	add	r3,r3,r19
   6ad64:	1cc00236 	bltu	r3,r19,6ad70 <__umoddi3+0x54c>
   6ad68:	1880012e 	bgeu	r3,r2,6ad70 <__umoddi3+0x54c>
   6ad6c:	1cc7883a 	add	r3,r3,r19
   6ad70:	18a3c83a 	sub	r17,r3,r2
   6ad74:	003f2906 	br	6aa1c <__alt_data_end+0xfffeaa1c>
   6ad78:	e48fc83a 	sub	r7,fp,r18
   6ad7c:	1d49c83a 	sub	r4,r3,r21
   6ad80:	e1f9803a 	cmpltu	fp,fp,r7
   6ad84:	2739c83a 	sub	fp,r4,fp
   6ad88:	8f09c83a 	sub	r4,r17,fp
   6ad8c:	003fc306 	br	6ac9c <__alt_data_end+0xfffeac9c>
   6ad90:	01000604 	movi	r4,24
   6ad94:	003ef906 	br	6a97c <__alt_data_end+0xfffea97c>
   6ad98:	00800604 	movi	r2,24
   6ad9c:	003f1306 	br	6a9ec <__alt_data_end+0xfffea9ec>
   6ada0:	01000604 	movi	r4,24
   6ada4:	003eb606 	br	6a880 <__alt_data_end+0xfffea880>
   6ada8:	40bf902e 	bgeu	r8,r2,6abec <__alt_data_end+0xfffeabec>
   6adac:	b5bfff84 	addi	r22,r22,-2
   6adb0:	4551883a 	add	r8,r8,r21
   6adb4:	003f8e06 	br	6abf0 <__alt_data_end+0xfffeabf0>
   6adb8:	18bf762e 	bgeu	r3,r2,6ab94 <__alt_data_end+0xfffeab94>
   6adbc:	8c7fff84 	addi	r17,r17,-2
   6adc0:	1d47883a 	add	r3,r3,r21
   6adc4:	003f7406 	br	6ab98 <__alt_data_end+0xfffeab98>
   6adc8:	1cc7883a 	add	r3,r3,r19
   6adcc:	003ecd06 	br	6a904 <__alt_data_end+0xfffea904>
   6add0:	8005883a 	mov	r2,r16
   6add4:	003ef806 	br	6a9b8 <__alt_data_end+0xfffea9b8>
   6add8:	873fe736 	bltu	r16,fp,6ad78 <__alt_data_end+0xfffead78>
   6addc:	e00f883a 	mov	r7,fp
   6ade0:	0009883a 	mov	r4,zero
   6ade4:	003fad06 	br	6ac9c <__alt_data_end+0xfffeac9c>

0006ade8 <__divsi3>:
   6ade8:	20001b16 	blt	r4,zero,6ae58 <__divsi3+0x70>
   6adec:	000f883a 	mov	r7,zero
   6adf0:	28001616 	blt	r5,zero,6ae4c <__divsi3+0x64>
   6adf4:	200d883a 	mov	r6,r4
   6adf8:	29001a2e 	bgeu	r5,r4,6ae64 <__divsi3+0x7c>
   6adfc:	00800804 	movi	r2,32
   6ae00:	00c00044 	movi	r3,1
   6ae04:	00000106 	br	6ae0c <__divsi3+0x24>
   6ae08:	10000d26 	beq	r2,zero,6ae40 <__divsi3+0x58>
   6ae0c:	294b883a 	add	r5,r5,r5
   6ae10:	10bfffc4 	addi	r2,r2,-1
   6ae14:	18c7883a 	add	r3,r3,r3
   6ae18:	293ffb36 	bltu	r5,r4,6ae08 <__alt_data_end+0xfffeae08>
   6ae1c:	0005883a 	mov	r2,zero
   6ae20:	18000726 	beq	r3,zero,6ae40 <__divsi3+0x58>
   6ae24:	0005883a 	mov	r2,zero
   6ae28:	31400236 	bltu	r6,r5,6ae34 <__divsi3+0x4c>
   6ae2c:	314dc83a 	sub	r6,r6,r5
   6ae30:	10c4b03a 	or	r2,r2,r3
   6ae34:	1806d07a 	srli	r3,r3,1
   6ae38:	280ad07a 	srli	r5,r5,1
   6ae3c:	183ffa1e 	bne	r3,zero,6ae28 <__alt_data_end+0xfffeae28>
   6ae40:	38000126 	beq	r7,zero,6ae48 <__divsi3+0x60>
   6ae44:	0085c83a 	sub	r2,zero,r2
   6ae48:	f800283a 	ret
   6ae4c:	014bc83a 	sub	r5,zero,r5
   6ae50:	39c0005c 	xori	r7,r7,1
   6ae54:	003fe706 	br	6adf4 <__alt_data_end+0xfffeadf4>
   6ae58:	0109c83a 	sub	r4,zero,r4
   6ae5c:	01c00044 	movi	r7,1
   6ae60:	003fe306 	br	6adf0 <__alt_data_end+0xfffeadf0>
   6ae64:	00c00044 	movi	r3,1
   6ae68:	003fee06 	br	6ae24 <__alt_data_end+0xfffeae24>

0006ae6c <__modsi3>:
   6ae6c:	20001716 	blt	r4,zero,6aecc <__modsi3+0x60>
   6ae70:	000f883a 	mov	r7,zero
   6ae74:	2005883a 	mov	r2,r4
   6ae78:	28001216 	blt	r5,zero,6aec4 <__modsi3+0x58>
   6ae7c:	2900162e 	bgeu	r5,r4,6aed8 <__modsi3+0x6c>
   6ae80:	01800804 	movi	r6,32
   6ae84:	00c00044 	movi	r3,1
   6ae88:	00000106 	br	6ae90 <__modsi3+0x24>
   6ae8c:	30000a26 	beq	r6,zero,6aeb8 <__modsi3+0x4c>
   6ae90:	294b883a 	add	r5,r5,r5
   6ae94:	31bfffc4 	addi	r6,r6,-1
   6ae98:	18c7883a 	add	r3,r3,r3
   6ae9c:	293ffb36 	bltu	r5,r4,6ae8c <__alt_data_end+0xfffeae8c>
   6aea0:	18000526 	beq	r3,zero,6aeb8 <__modsi3+0x4c>
   6aea4:	1806d07a 	srli	r3,r3,1
   6aea8:	11400136 	bltu	r2,r5,6aeb0 <__modsi3+0x44>
   6aeac:	1145c83a 	sub	r2,r2,r5
   6aeb0:	280ad07a 	srli	r5,r5,1
   6aeb4:	183ffb1e 	bne	r3,zero,6aea4 <__alt_data_end+0xfffeaea4>
   6aeb8:	38000126 	beq	r7,zero,6aec0 <__modsi3+0x54>
   6aebc:	0085c83a 	sub	r2,zero,r2
   6aec0:	f800283a 	ret
   6aec4:	014bc83a 	sub	r5,zero,r5
   6aec8:	003fec06 	br	6ae7c <__alt_data_end+0xfffeae7c>
   6aecc:	0109c83a 	sub	r4,zero,r4
   6aed0:	01c00044 	movi	r7,1
   6aed4:	003fe706 	br	6ae74 <__alt_data_end+0xfffeae74>
   6aed8:	00c00044 	movi	r3,1
   6aedc:	003ff106 	br	6aea4 <__alt_data_end+0xfffeaea4>

0006aee0 <__udivsi3>:
   6aee0:	200d883a 	mov	r6,r4
   6aee4:	2900152e 	bgeu	r5,r4,6af3c <__udivsi3+0x5c>
   6aee8:	28001416 	blt	r5,zero,6af3c <__udivsi3+0x5c>
   6aeec:	00800804 	movi	r2,32
   6aef0:	00c00044 	movi	r3,1
   6aef4:	00000206 	br	6af00 <__udivsi3+0x20>
   6aef8:	10000e26 	beq	r2,zero,6af34 <__udivsi3+0x54>
   6aefc:	28000516 	blt	r5,zero,6af14 <__udivsi3+0x34>
   6af00:	294b883a 	add	r5,r5,r5
   6af04:	10bfffc4 	addi	r2,r2,-1
   6af08:	18c7883a 	add	r3,r3,r3
   6af0c:	293ffa36 	bltu	r5,r4,6aef8 <__alt_data_end+0xfffeaef8>
   6af10:	18000826 	beq	r3,zero,6af34 <__udivsi3+0x54>
   6af14:	0005883a 	mov	r2,zero
   6af18:	31400236 	bltu	r6,r5,6af24 <__udivsi3+0x44>
   6af1c:	314dc83a 	sub	r6,r6,r5
   6af20:	10c4b03a 	or	r2,r2,r3
   6af24:	1806d07a 	srli	r3,r3,1
   6af28:	280ad07a 	srli	r5,r5,1
   6af2c:	183ffa1e 	bne	r3,zero,6af18 <__alt_data_end+0xfffeaf18>
   6af30:	f800283a 	ret
   6af34:	0005883a 	mov	r2,zero
   6af38:	f800283a 	ret
   6af3c:	00c00044 	movi	r3,1
   6af40:	003ff406 	br	6af14 <__alt_data_end+0xfffeaf14>

0006af44 <__umodsi3>:
   6af44:	2005883a 	mov	r2,r4
   6af48:	2900122e 	bgeu	r5,r4,6af94 <__umodsi3+0x50>
   6af4c:	28001116 	blt	r5,zero,6af94 <__umodsi3+0x50>
   6af50:	01800804 	movi	r6,32
   6af54:	00c00044 	movi	r3,1
   6af58:	00000206 	br	6af64 <__umodsi3+0x20>
   6af5c:	30000c26 	beq	r6,zero,6af90 <__umodsi3+0x4c>
   6af60:	28000516 	blt	r5,zero,6af78 <__umodsi3+0x34>
   6af64:	294b883a 	add	r5,r5,r5
   6af68:	31bfffc4 	addi	r6,r6,-1
   6af6c:	18c7883a 	add	r3,r3,r3
   6af70:	293ffa36 	bltu	r5,r4,6af5c <__alt_data_end+0xfffeaf5c>
   6af74:	18000626 	beq	r3,zero,6af90 <__umodsi3+0x4c>
   6af78:	1806d07a 	srli	r3,r3,1
   6af7c:	11400136 	bltu	r2,r5,6af84 <__umodsi3+0x40>
   6af80:	1145c83a 	sub	r2,r2,r5
   6af84:	280ad07a 	srli	r5,r5,1
   6af88:	183ffb1e 	bne	r3,zero,6af78 <__alt_data_end+0xfffeaf78>
   6af8c:	f800283a 	ret
   6af90:	f800283a 	ret
   6af94:	00c00044 	movi	r3,1
   6af98:	003ff706 	br	6af78 <__alt_data_end+0xfffeaf78>

0006af9c <__adddf3>:
   6af9c:	02c00434 	movhi	r11,16
   6afa0:	5affffc4 	addi	r11,r11,-1
   6afa4:	2806d7fa 	srli	r3,r5,31
   6afa8:	2ad4703a 	and	r10,r5,r11
   6afac:	3ad2703a 	and	r9,r7,r11
   6afb0:	3804d53a 	srli	r2,r7,20
   6afb4:	3018d77a 	srli	r12,r6,29
   6afb8:	280ad53a 	srli	r5,r5,20
   6afbc:	501490fa 	slli	r10,r10,3
   6afc0:	2010d77a 	srli	r8,r4,29
   6afc4:	481290fa 	slli	r9,r9,3
   6afc8:	380ed7fa 	srli	r7,r7,31
   6afcc:	defffb04 	addi	sp,sp,-20
   6afd0:	dc800215 	stw	r18,8(sp)
   6afd4:	dc400115 	stw	r17,4(sp)
   6afd8:	dc000015 	stw	r16,0(sp)
   6afdc:	dfc00415 	stw	ra,16(sp)
   6afe0:	dcc00315 	stw	r19,12(sp)
   6afe4:	1c803fcc 	andi	r18,r3,255
   6afe8:	2c01ffcc 	andi	r16,r5,2047
   6afec:	5210b03a 	or	r8,r10,r8
   6aff0:	202290fa 	slli	r17,r4,3
   6aff4:	1081ffcc 	andi	r2,r2,2047
   6aff8:	4b12b03a 	or	r9,r9,r12
   6affc:	300c90fa 	slli	r6,r6,3
   6b000:	91c07526 	beq	r18,r7,6b1d8 <__adddf3+0x23c>
   6b004:	8087c83a 	sub	r3,r16,r2
   6b008:	00c0ab0e 	bge	zero,r3,6b2b8 <__adddf3+0x31c>
   6b00c:	10002a1e 	bne	r2,zero,6b0b8 <__adddf3+0x11c>
   6b010:	4984b03a 	or	r2,r9,r6
   6b014:	1000961e 	bne	r2,zero,6b270 <__adddf3+0x2d4>
   6b018:	888001cc 	andi	r2,r17,7
   6b01c:	10000726 	beq	r2,zero,6b03c <__adddf3+0xa0>
   6b020:	888003cc 	andi	r2,r17,15
   6b024:	00c00104 	movi	r3,4
   6b028:	10c00426 	beq	r2,r3,6b03c <__adddf3+0xa0>
   6b02c:	88c7883a 	add	r3,r17,r3
   6b030:	1c63803a 	cmpltu	r17,r3,r17
   6b034:	4451883a 	add	r8,r8,r17
   6b038:	1823883a 	mov	r17,r3
   6b03c:	4080202c 	andhi	r2,r8,128
   6b040:	10005926 	beq	r2,zero,6b1a8 <__adddf3+0x20c>
   6b044:	84000044 	addi	r16,r16,1
   6b048:	0081ffc4 	movi	r2,2047
   6b04c:	8080ba26 	beq	r16,r2,6b338 <__adddf3+0x39c>
   6b050:	00bfe034 	movhi	r2,65408
   6b054:	10bfffc4 	addi	r2,r2,-1
   6b058:	4090703a 	and	r8,r8,r2
   6b05c:	4004977a 	slli	r2,r8,29
   6b060:	4010927a 	slli	r8,r8,9
   6b064:	8822d0fa 	srli	r17,r17,3
   6b068:	8401ffcc 	andi	r16,r16,2047
   6b06c:	4010d33a 	srli	r8,r8,12
   6b070:	9007883a 	mov	r3,r18
   6b074:	1444b03a 	or	r2,r2,r17
   6b078:	8401ffcc 	andi	r16,r16,2047
   6b07c:	8020953a 	slli	r16,r16,20
   6b080:	18c03fcc 	andi	r3,r3,255
   6b084:	01000434 	movhi	r4,16
   6b088:	213fffc4 	addi	r4,r4,-1
   6b08c:	180697fa 	slli	r3,r3,31
   6b090:	4110703a 	and	r8,r8,r4
   6b094:	4410b03a 	or	r8,r8,r16
   6b098:	40c6b03a 	or	r3,r8,r3
   6b09c:	dfc00417 	ldw	ra,16(sp)
   6b0a0:	dcc00317 	ldw	r19,12(sp)
   6b0a4:	dc800217 	ldw	r18,8(sp)
   6b0a8:	dc400117 	ldw	r17,4(sp)
   6b0ac:	dc000017 	ldw	r16,0(sp)
   6b0b0:	dec00504 	addi	sp,sp,20
   6b0b4:	f800283a 	ret
   6b0b8:	0081ffc4 	movi	r2,2047
   6b0bc:	80bfd626 	beq	r16,r2,6b018 <__alt_data_end+0xfffeb018>
   6b0c0:	4a402034 	orhi	r9,r9,128
   6b0c4:	00800e04 	movi	r2,56
   6b0c8:	10c09f16 	blt	r2,r3,6b348 <__adddf3+0x3ac>
   6b0cc:	008007c4 	movi	r2,31
   6b0d0:	10c0c216 	blt	r2,r3,6b3dc <__adddf3+0x440>
   6b0d4:	00800804 	movi	r2,32
   6b0d8:	10c5c83a 	sub	r2,r2,r3
   6b0dc:	488a983a 	sll	r5,r9,r2
   6b0e0:	30c8d83a 	srl	r4,r6,r3
   6b0e4:	3084983a 	sll	r2,r6,r2
   6b0e8:	48c6d83a 	srl	r3,r9,r3
   6b0ec:	290cb03a 	or	r6,r5,r4
   6b0f0:	1004c03a 	cmpne	r2,r2,zero
   6b0f4:	308cb03a 	or	r6,r6,r2
   6b0f8:	898dc83a 	sub	r6,r17,r6
   6b0fc:	89a3803a 	cmpltu	r17,r17,r6
   6b100:	40d1c83a 	sub	r8,r8,r3
   6b104:	4451c83a 	sub	r8,r8,r17
   6b108:	3023883a 	mov	r17,r6
   6b10c:	4080202c 	andhi	r2,r8,128
   6b110:	10002326 	beq	r2,zero,6b1a0 <__adddf3+0x204>
   6b114:	04c02034 	movhi	r19,128
   6b118:	9cffffc4 	addi	r19,r19,-1
   6b11c:	44e6703a 	and	r19,r8,r19
   6b120:	98007626 	beq	r19,zero,6b2fc <__adddf3+0x360>
   6b124:	9809883a 	mov	r4,r19
   6b128:	006d7dc0 	call	6d7dc <__clzsi2>
   6b12c:	10fffe04 	addi	r3,r2,-8
   6b130:	010007c4 	movi	r4,31
   6b134:	20c07716 	blt	r4,r3,6b314 <__adddf3+0x378>
   6b138:	00800804 	movi	r2,32
   6b13c:	10c5c83a 	sub	r2,r2,r3
   6b140:	8884d83a 	srl	r2,r17,r2
   6b144:	98d0983a 	sll	r8,r19,r3
   6b148:	88e2983a 	sll	r17,r17,r3
   6b14c:	1204b03a 	or	r2,r2,r8
   6b150:	1c007416 	blt	r3,r16,6b324 <__adddf3+0x388>
   6b154:	1c21c83a 	sub	r16,r3,r16
   6b158:	82000044 	addi	r8,r16,1
   6b15c:	00c007c4 	movi	r3,31
   6b160:	1a009116 	blt	r3,r8,6b3a8 <__adddf3+0x40c>
   6b164:	00c00804 	movi	r3,32
   6b168:	1a07c83a 	sub	r3,r3,r8
   6b16c:	8a08d83a 	srl	r4,r17,r8
   6b170:	88e2983a 	sll	r17,r17,r3
   6b174:	10c6983a 	sll	r3,r2,r3
   6b178:	1210d83a 	srl	r8,r2,r8
   6b17c:	8804c03a 	cmpne	r2,r17,zero
   6b180:	1906b03a 	or	r3,r3,r4
   6b184:	18a2b03a 	or	r17,r3,r2
   6b188:	0021883a 	mov	r16,zero
   6b18c:	003fa206 	br	6b018 <__alt_data_end+0xfffeb018>
   6b190:	1890b03a 	or	r8,r3,r2
   6b194:	40017d26 	beq	r8,zero,6b78c <__adddf3+0x7f0>
   6b198:	1011883a 	mov	r8,r2
   6b19c:	1823883a 	mov	r17,r3
   6b1a0:	888001cc 	andi	r2,r17,7
   6b1a4:	103f9e1e 	bne	r2,zero,6b020 <__alt_data_end+0xfffeb020>
   6b1a8:	4004977a 	slli	r2,r8,29
   6b1ac:	8822d0fa 	srli	r17,r17,3
   6b1b0:	4010d0fa 	srli	r8,r8,3
   6b1b4:	9007883a 	mov	r3,r18
   6b1b8:	1444b03a 	or	r2,r2,r17
   6b1bc:	0101ffc4 	movi	r4,2047
   6b1c0:	81002426 	beq	r16,r4,6b254 <__adddf3+0x2b8>
   6b1c4:	8120703a 	and	r16,r16,r4
   6b1c8:	01000434 	movhi	r4,16
   6b1cc:	213fffc4 	addi	r4,r4,-1
   6b1d0:	4110703a 	and	r8,r8,r4
   6b1d4:	003fa806 	br	6b078 <__alt_data_end+0xfffeb078>
   6b1d8:	8089c83a 	sub	r4,r16,r2
   6b1dc:	01005e0e 	bge	zero,r4,6b358 <__adddf3+0x3bc>
   6b1e0:	10002b26 	beq	r2,zero,6b290 <__adddf3+0x2f4>
   6b1e4:	0081ffc4 	movi	r2,2047
   6b1e8:	80bf8b26 	beq	r16,r2,6b018 <__alt_data_end+0xfffeb018>
   6b1ec:	4a402034 	orhi	r9,r9,128
   6b1f0:	00800e04 	movi	r2,56
   6b1f4:	1100a40e 	bge	r2,r4,6b488 <__adddf3+0x4ec>
   6b1f8:	498cb03a 	or	r6,r9,r6
   6b1fc:	300ac03a 	cmpne	r5,r6,zero
   6b200:	0013883a 	mov	r9,zero
   6b204:	2c4b883a 	add	r5,r5,r17
   6b208:	2c63803a 	cmpltu	r17,r5,r17
   6b20c:	4a11883a 	add	r8,r9,r8
   6b210:	8a11883a 	add	r8,r17,r8
   6b214:	2823883a 	mov	r17,r5
   6b218:	4080202c 	andhi	r2,r8,128
   6b21c:	103fe026 	beq	r2,zero,6b1a0 <__alt_data_end+0xfffeb1a0>
   6b220:	84000044 	addi	r16,r16,1
   6b224:	0081ffc4 	movi	r2,2047
   6b228:	8080d226 	beq	r16,r2,6b574 <__adddf3+0x5d8>
   6b22c:	00bfe034 	movhi	r2,65408
   6b230:	10bfffc4 	addi	r2,r2,-1
   6b234:	4090703a 	and	r8,r8,r2
   6b238:	880ad07a 	srli	r5,r17,1
   6b23c:	400897fa 	slli	r4,r8,31
   6b240:	88c0004c 	andi	r3,r17,1
   6b244:	28e2b03a 	or	r17,r5,r3
   6b248:	4010d07a 	srli	r8,r8,1
   6b24c:	2462b03a 	or	r17,r4,r17
   6b250:	003f7106 	br	6b018 <__alt_data_end+0xfffeb018>
   6b254:	4088b03a 	or	r4,r8,r2
   6b258:	20014526 	beq	r4,zero,6b770 <__adddf3+0x7d4>
   6b25c:	01000434 	movhi	r4,16
   6b260:	42000234 	orhi	r8,r8,8
   6b264:	213fffc4 	addi	r4,r4,-1
   6b268:	4110703a 	and	r8,r8,r4
   6b26c:	003f8206 	br	6b078 <__alt_data_end+0xfffeb078>
   6b270:	18ffffc4 	addi	r3,r3,-1
   6b274:	1800491e 	bne	r3,zero,6b39c <__adddf3+0x400>
   6b278:	898bc83a 	sub	r5,r17,r6
   6b27c:	8963803a 	cmpltu	r17,r17,r5
   6b280:	4251c83a 	sub	r8,r8,r9
   6b284:	4451c83a 	sub	r8,r8,r17
   6b288:	2823883a 	mov	r17,r5
   6b28c:	003f9f06 	br	6b10c <__alt_data_end+0xfffeb10c>
   6b290:	4984b03a 	or	r2,r9,r6
   6b294:	103f6026 	beq	r2,zero,6b018 <__alt_data_end+0xfffeb018>
   6b298:	213fffc4 	addi	r4,r4,-1
   6b29c:	2000931e 	bne	r4,zero,6b4ec <__adddf3+0x550>
   6b2a0:	898d883a 	add	r6,r17,r6
   6b2a4:	3463803a 	cmpltu	r17,r6,r17
   6b2a8:	4251883a 	add	r8,r8,r9
   6b2ac:	8a11883a 	add	r8,r17,r8
   6b2b0:	3023883a 	mov	r17,r6
   6b2b4:	003fd806 	br	6b218 <__alt_data_end+0xfffeb218>
   6b2b8:	1800541e 	bne	r3,zero,6b40c <__adddf3+0x470>
   6b2bc:	80800044 	addi	r2,r16,1
   6b2c0:	1081ffcc 	andi	r2,r2,2047
   6b2c4:	00c00044 	movi	r3,1
   6b2c8:	1880a00e 	bge	r3,r2,6b54c <__adddf3+0x5b0>
   6b2cc:	8989c83a 	sub	r4,r17,r6
   6b2d0:	8905803a 	cmpltu	r2,r17,r4
   6b2d4:	4267c83a 	sub	r19,r8,r9
   6b2d8:	98a7c83a 	sub	r19,r19,r2
   6b2dc:	9880202c 	andhi	r2,r19,128
   6b2e0:	10006326 	beq	r2,zero,6b470 <__adddf3+0x4d4>
   6b2e4:	3463c83a 	sub	r17,r6,r17
   6b2e8:	4a07c83a 	sub	r3,r9,r8
   6b2ec:	344d803a 	cmpltu	r6,r6,r17
   6b2f0:	19a7c83a 	sub	r19,r3,r6
   6b2f4:	3825883a 	mov	r18,r7
   6b2f8:	983f8a1e 	bne	r19,zero,6b124 <__alt_data_end+0xfffeb124>
   6b2fc:	8809883a 	mov	r4,r17
   6b300:	006d7dc0 	call	6d7dc <__clzsi2>
   6b304:	10800804 	addi	r2,r2,32
   6b308:	10fffe04 	addi	r3,r2,-8
   6b30c:	010007c4 	movi	r4,31
   6b310:	20ff890e 	bge	r4,r3,6b138 <__alt_data_end+0xfffeb138>
   6b314:	10bff604 	addi	r2,r2,-40
   6b318:	8884983a 	sll	r2,r17,r2
   6b31c:	0023883a 	mov	r17,zero
   6b320:	1c3f8c0e 	bge	r3,r16,6b154 <__alt_data_end+0xfffeb154>
   6b324:	023fe034 	movhi	r8,65408
   6b328:	423fffc4 	addi	r8,r8,-1
   6b32c:	80e1c83a 	sub	r16,r16,r3
   6b330:	1210703a 	and	r8,r2,r8
   6b334:	003f3806 	br	6b018 <__alt_data_end+0xfffeb018>
   6b338:	9007883a 	mov	r3,r18
   6b33c:	0011883a 	mov	r8,zero
   6b340:	0005883a 	mov	r2,zero
   6b344:	003f4c06 	br	6b078 <__alt_data_end+0xfffeb078>
   6b348:	498cb03a 	or	r6,r9,r6
   6b34c:	300cc03a 	cmpne	r6,r6,zero
   6b350:	0007883a 	mov	r3,zero
   6b354:	003f6806 	br	6b0f8 <__alt_data_end+0xfffeb0f8>
   6b358:	20009c1e 	bne	r4,zero,6b5cc <__adddf3+0x630>
   6b35c:	80800044 	addi	r2,r16,1
   6b360:	1141ffcc 	andi	r5,r2,2047
   6b364:	01000044 	movi	r4,1
   6b368:	2140670e 	bge	r4,r5,6b508 <__adddf3+0x56c>
   6b36c:	0101ffc4 	movi	r4,2047
   6b370:	11007f26 	beq	r2,r4,6b570 <__adddf3+0x5d4>
   6b374:	898d883a 	add	r6,r17,r6
   6b378:	4247883a 	add	r3,r8,r9
   6b37c:	3451803a 	cmpltu	r8,r6,r17
   6b380:	40d1883a 	add	r8,r8,r3
   6b384:	402297fa 	slli	r17,r8,31
   6b388:	300cd07a 	srli	r6,r6,1
   6b38c:	4010d07a 	srli	r8,r8,1
   6b390:	1021883a 	mov	r16,r2
   6b394:	89a2b03a 	or	r17,r17,r6
   6b398:	003f1f06 	br	6b018 <__alt_data_end+0xfffeb018>
   6b39c:	0081ffc4 	movi	r2,2047
   6b3a0:	80bf481e 	bne	r16,r2,6b0c4 <__alt_data_end+0xfffeb0c4>
   6b3a4:	003f1c06 	br	6b018 <__alt_data_end+0xfffeb018>
   6b3a8:	843ff844 	addi	r16,r16,-31
   6b3ac:	01000804 	movi	r4,32
   6b3b0:	1406d83a 	srl	r3,r2,r16
   6b3b4:	41005026 	beq	r8,r4,6b4f8 <__adddf3+0x55c>
   6b3b8:	01001004 	movi	r4,64
   6b3bc:	2211c83a 	sub	r8,r4,r8
   6b3c0:	1204983a 	sll	r2,r2,r8
   6b3c4:	88a2b03a 	or	r17,r17,r2
   6b3c8:	8822c03a 	cmpne	r17,r17,zero
   6b3cc:	1c62b03a 	or	r17,r3,r17
   6b3d0:	0011883a 	mov	r8,zero
   6b3d4:	0021883a 	mov	r16,zero
   6b3d8:	003f7106 	br	6b1a0 <__alt_data_end+0xfffeb1a0>
   6b3dc:	193ff804 	addi	r4,r3,-32
   6b3e0:	00800804 	movi	r2,32
   6b3e4:	4908d83a 	srl	r4,r9,r4
   6b3e8:	18804526 	beq	r3,r2,6b500 <__adddf3+0x564>
   6b3ec:	00801004 	movi	r2,64
   6b3f0:	10c5c83a 	sub	r2,r2,r3
   6b3f4:	4886983a 	sll	r3,r9,r2
   6b3f8:	198cb03a 	or	r6,r3,r6
   6b3fc:	300cc03a 	cmpne	r6,r6,zero
   6b400:	218cb03a 	or	r6,r4,r6
   6b404:	0007883a 	mov	r3,zero
   6b408:	003f3b06 	br	6b0f8 <__alt_data_end+0xfffeb0f8>
   6b40c:	80002a26 	beq	r16,zero,6b4b8 <__adddf3+0x51c>
   6b410:	0101ffc4 	movi	r4,2047
   6b414:	11006826 	beq	r2,r4,6b5b8 <__adddf3+0x61c>
   6b418:	00c7c83a 	sub	r3,zero,r3
   6b41c:	42002034 	orhi	r8,r8,128
   6b420:	01000e04 	movi	r4,56
   6b424:	20c07c16 	blt	r4,r3,6b618 <__adddf3+0x67c>
   6b428:	010007c4 	movi	r4,31
   6b42c:	20c0da16 	blt	r4,r3,6b798 <__adddf3+0x7fc>
   6b430:	01000804 	movi	r4,32
   6b434:	20c9c83a 	sub	r4,r4,r3
   6b438:	4114983a 	sll	r10,r8,r4
   6b43c:	88cad83a 	srl	r5,r17,r3
   6b440:	8908983a 	sll	r4,r17,r4
   6b444:	40c6d83a 	srl	r3,r8,r3
   6b448:	5162b03a 	or	r17,r10,r5
   6b44c:	2008c03a 	cmpne	r4,r4,zero
   6b450:	8922b03a 	or	r17,r17,r4
   6b454:	3463c83a 	sub	r17,r6,r17
   6b458:	48c7c83a 	sub	r3,r9,r3
   6b45c:	344d803a 	cmpltu	r6,r6,r17
   6b460:	1991c83a 	sub	r8,r3,r6
   6b464:	1021883a 	mov	r16,r2
   6b468:	3825883a 	mov	r18,r7
   6b46c:	003f2706 	br	6b10c <__alt_data_end+0xfffeb10c>
   6b470:	24d0b03a 	or	r8,r4,r19
   6b474:	40001b1e 	bne	r8,zero,6b4e4 <__adddf3+0x548>
   6b478:	0005883a 	mov	r2,zero
   6b47c:	0007883a 	mov	r3,zero
   6b480:	0021883a 	mov	r16,zero
   6b484:	003f4d06 	br	6b1bc <__alt_data_end+0xfffeb1bc>
   6b488:	008007c4 	movi	r2,31
   6b48c:	11003c16 	blt	r2,r4,6b580 <__adddf3+0x5e4>
   6b490:	00800804 	movi	r2,32
   6b494:	1105c83a 	sub	r2,r2,r4
   6b498:	488e983a 	sll	r7,r9,r2
   6b49c:	310ad83a 	srl	r5,r6,r4
   6b4a0:	3084983a 	sll	r2,r6,r2
   6b4a4:	4912d83a 	srl	r9,r9,r4
   6b4a8:	394ab03a 	or	r5,r7,r5
   6b4ac:	1004c03a 	cmpne	r2,r2,zero
   6b4b0:	288ab03a 	or	r5,r5,r2
   6b4b4:	003f5306 	br	6b204 <__alt_data_end+0xfffeb204>
   6b4b8:	4448b03a 	or	r4,r8,r17
   6b4bc:	20003e26 	beq	r4,zero,6b5b8 <__adddf3+0x61c>
   6b4c0:	00c6303a 	nor	r3,zero,r3
   6b4c4:	18003a1e 	bne	r3,zero,6b5b0 <__adddf3+0x614>
   6b4c8:	3463c83a 	sub	r17,r6,r17
   6b4cc:	4a07c83a 	sub	r3,r9,r8
   6b4d0:	344d803a 	cmpltu	r6,r6,r17
   6b4d4:	1991c83a 	sub	r8,r3,r6
   6b4d8:	1021883a 	mov	r16,r2
   6b4dc:	3825883a 	mov	r18,r7
   6b4e0:	003f0a06 	br	6b10c <__alt_data_end+0xfffeb10c>
   6b4e4:	2023883a 	mov	r17,r4
   6b4e8:	003f0d06 	br	6b120 <__alt_data_end+0xfffeb120>
   6b4ec:	0081ffc4 	movi	r2,2047
   6b4f0:	80bf3f1e 	bne	r16,r2,6b1f0 <__alt_data_end+0xfffeb1f0>
   6b4f4:	003ec806 	br	6b018 <__alt_data_end+0xfffeb018>
   6b4f8:	0005883a 	mov	r2,zero
   6b4fc:	003fb106 	br	6b3c4 <__alt_data_end+0xfffeb3c4>
   6b500:	0007883a 	mov	r3,zero
   6b504:	003fbc06 	br	6b3f8 <__alt_data_end+0xfffeb3f8>
   6b508:	4444b03a 	or	r2,r8,r17
   6b50c:	8000871e 	bne	r16,zero,6b72c <__adddf3+0x790>
   6b510:	1000ba26 	beq	r2,zero,6b7fc <__adddf3+0x860>
   6b514:	4984b03a 	or	r2,r9,r6
   6b518:	103ebf26 	beq	r2,zero,6b018 <__alt_data_end+0xfffeb018>
   6b51c:	8985883a 	add	r2,r17,r6
   6b520:	4247883a 	add	r3,r8,r9
   6b524:	1451803a 	cmpltu	r8,r2,r17
   6b528:	40d1883a 	add	r8,r8,r3
   6b52c:	40c0202c 	andhi	r3,r8,128
   6b530:	1023883a 	mov	r17,r2
   6b534:	183f1a26 	beq	r3,zero,6b1a0 <__alt_data_end+0xfffeb1a0>
   6b538:	00bfe034 	movhi	r2,65408
   6b53c:	10bfffc4 	addi	r2,r2,-1
   6b540:	2021883a 	mov	r16,r4
   6b544:	4090703a 	and	r8,r8,r2
   6b548:	003eb306 	br	6b018 <__alt_data_end+0xfffeb018>
   6b54c:	4444b03a 	or	r2,r8,r17
   6b550:	8000291e 	bne	r16,zero,6b5f8 <__adddf3+0x65c>
   6b554:	10004b1e 	bne	r2,zero,6b684 <__adddf3+0x6e8>
   6b558:	4990b03a 	or	r8,r9,r6
   6b55c:	40008b26 	beq	r8,zero,6b78c <__adddf3+0x7f0>
   6b560:	4811883a 	mov	r8,r9
   6b564:	3023883a 	mov	r17,r6
   6b568:	3825883a 	mov	r18,r7
   6b56c:	003eaa06 	br	6b018 <__alt_data_end+0xfffeb018>
   6b570:	1021883a 	mov	r16,r2
   6b574:	0011883a 	mov	r8,zero
   6b578:	0005883a 	mov	r2,zero
   6b57c:	003f0f06 	br	6b1bc <__alt_data_end+0xfffeb1bc>
   6b580:	217ff804 	addi	r5,r4,-32
   6b584:	00800804 	movi	r2,32
   6b588:	494ad83a 	srl	r5,r9,r5
   6b58c:	20807d26 	beq	r4,r2,6b784 <__adddf3+0x7e8>
   6b590:	00801004 	movi	r2,64
   6b594:	1109c83a 	sub	r4,r2,r4
   6b598:	4912983a 	sll	r9,r9,r4
   6b59c:	498cb03a 	or	r6,r9,r6
   6b5a0:	300cc03a 	cmpne	r6,r6,zero
   6b5a4:	298ab03a 	or	r5,r5,r6
   6b5a8:	0013883a 	mov	r9,zero
   6b5ac:	003f1506 	br	6b204 <__alt_data_end+0xfffeb204>
   6b5b0:	0101ffc4 	movi	r4,2047
   6b5b4:	113f9a1e 	bne	r2,r4,6b420 <__alt_data_end+0xfffeb420>
   6b5b8:	4811883a 	mov	r8,r9
   6b5bc:	3023883a 	mov	r17,r6
   6b5c0:	1021883a 	mov	r16,r2
   6b5c4:	3825883a 	mov	r18,r7
   6b5c8:	003e9306 	br	6b018 <__alt_data_end+0xfffeb018>
   6b5cc:	8000161e 	bne	r16,zero,6b628 <__adddf3+0x68c>
   6b5d0:	444ab03a 	or	r5,r8,r17
   6b5d4:	28005126 	beq	r5,zero,6b71c <__adddf3+0x780>
   6b5d8:	0108303a 	nor	r4,zero,r4
   6b5dc:	20004d1e 	bne	r4,zero,6b714 <__adddf3+0x778>
   6b5e0:	89a3883a 	add	r17,r17,r6
   6b5e4:	4253883a 	add	r9,r8,r9
   6b5e8:	898d803a 	cmpltu	r6,r17,r6
   6b5ec:	3251883a 	add	r8,r6,r9
   6b5f0:	1021883a 	mov	r16,r2
   6b5f4:	003f0806 	br	6b218 <__alt_data_end+0xfffeb218>
   6b5f8:	1000301e 	bne	r2,zero,6b6bc <__adddf3+0x720>
   6b5fc:	4984b03a 	or	r2,r9,r6
   6b600:	10007126 	beq	r2,zero,6b7c8 <__adddf3+0x82c>
   6b604:	4811883a 	mov	r8,r9
   6b608:	3023883a 	mov	r17,r6
   6b60c:	3825883a 	mov	r18,r7
   6b610:	0401ffc4 	movi	r16,2047
   6b614:	003e8006 	br	6b018 <__alt_data_end+0xfffeb018>
   6b618:	4462b03a 	or	r17,r8,r17
   6b61c:	8822c03a 	cmpne	r17,r17,zero
   6b620:	0007883a 	mov	r3,zero
   6b624:	003f8b06 	br	6b454 <__alt_data_end+0xfffeb454>
   6b628:	0141ffc4 	movi	r5,2047
   6b62c:	11403b26 	beq	r2,r5,6b71c <__adddf3+0x780>
   6b630:	0109c83a 	sub	r4,zero,r4
   6b634:	42002034 	orhi	r8,r8,128
   6b638:	01400e04 	movi	r5,56
   6b63c:	29006716 	blt	r5,r4,6b7dc <__adddf3+0x840>
   6b640:	014007c4 	movi	r5,31
   6b644:	29007016 	blt	r5,r4,6b808 <__adddf3+0x86c>
   6b648:	01400804 	movi	r5,32
   6b64c:	290bc83a 	sub	r5,r5,r4
   6b650:	4154983a 	sll	r10,r8,r5
   6b654:	890ed83a 	srl	r7,r17,r4
   6b658:	894a983a 	sll	r5,r17,r5
   6b65c:	4108d83a 	srl	r4,r8,r4
   6b660:	51e2b03a 	or	r17,r10,r7
   6b664:	280ac03a 	cmpne	r5,r5,zero
   6b668:	8962b03a 	or	r17,r17,r5
   6b66c:	89a3883a 	add	r17,r17,r6
   6b670:	2253883a 	add	r9,r4,r9
   6b674:	898d803a 	cmpltu	r6,r17,r6
   6b678:	3251883a 	add	r8,r6,r9
   6b67c:	1021883a 	mov	r16,r2
   6b680:	003ee506 	br	6b218 <__alt_data_end+0xfffeb218>
   6b684:	4984b03a 	or	r2,r9,r6
   6b688:	103e6326 	beq	r2,zero,6b018 <__alt_data_end+0xfffeb018>
   6b68c:	8987c83a 	sub	r3,r17,r6
   6b690:	88c9803a 	cmpltu	r4,r17,r3
   6b694:	4245c83a 	sub	r2,r8,r9
   6b698:	1105c83a 	sub	r2,r2,r4
   6b69c:	1100202c 	andhi	r4,r2,128
   6b6a0:	203ebb26 	beq	r4,zero,6b190 <__alt_data_end+0xfffeb190>
   6b6a4:	3463c83a 	sub	r17,r6,r17
   6b6a8:	4a07c83a 	sub	r3,r9,r8
   6b6ac:	344d803a 	cmpltu	r6,r6,r17
   6b6b0:	1991c83a 	sub	r8,r3,r6
   6b6b4:	3825883a 	mov	r18,r7
   6b6b8:	003e5706 	br	6b018 <__alt_data_end+0xfffeb018>
   6b6bc:	4984b03a 	or	r2,r9,r6
   6b6c0:	10002e26 	beq	r2,zero,6b77c <__adddf3+0x7e0>
   6b6c4:	4004d0fa 	srli	r2,r8,3
   6b6c8:	8822d0fa 	srli	r17,r17,3
   6b6cc:	4010977a 	slli	r8,r8,29
   6b6d0:	10c0022c 	andhi	r3,r2,8
   6b6d4:	4462b03a 	or	r17,r8,r17
   6b6d8:	18000826 	beq	r3,zero,6b6fc <__adddf3+0x760>
   6b6dc:	4808d0fa 	srli	r4,r9,3
   6b6e0:	20c0022c 	andhi	r3,r4,8
   6b6e4:	1800051e 	bne	r3,zero,6b6fc <__adddf3+0x760>
   6b6e8:	300cd0fa 	srli	r6,r6,3
   6b6ec:	4806977a 	slli	r3,r9,29
   6b6f0:	2005883a 	mov	r2,r4
   6b6f4:	3825883a 	mov	r18,r7
   6b6f8:	19a2b03a 	or	r17,r3,r6
   6b6fc:	8810d77a 	srli	r8,r17,29
   6b700:	100490fa 	slli	r2,r2,3
   6b704:	882290fa 	slli	r17,r17,3
   6b708:	0401ffc4 	movi	r16,2047
   6b70c:	4090b03a 	or	r8,r8,r2
   6b710:	003e4106 	br	6b018 <__alt_data_end+0xfffeb018>
   6b714:	0141ffc4 	movi	r5,2047
   6b718:	117fc71e 	bne	r2,r5,6b638 <__alt_data_end+0xfffeb638>
   6b71c:	4811883a 	mov	r8,r9
   6b720:	3023883a 	mov	r17,r6
   6b724:	1021883a 	mov	r16,r2
   6b728:	003e3b06 	br	6b018 <__alt_data_end+0xfffeb018>
   6b72c:	10002f26 	beq	r2,zero,6b7ec <__adddf3+0x850>
   6b730:	4984b03a 	or	r2,r9,r6
   6b734:	10001126 	beq	r2,zero,6b77c <__adddf3+0x7e0>
   6b738:	4004d0fa 	srli	r2,r8,3
   6b73c:	8822d0fa 	srli	r17,r17,3
   6b740:	4010977a 	slli	r8,r8,29
   6b744:	10c0022c 	andhi	r3,r2,8
   6b748:	4462b03a 	or	r17,r8,r17
   6b74c:	183feb26 	beq	r3,zero,6b6fc <__alt_data_end+0xfffeb6fc>
   6b750:	4808d0fa 	srli	r4,r9,3
   6b754:	20c0022c 	andhi	r3,r4,8
   6b758:	183fe81e 	bne	r3,zero,6b6fc <__alt_data_end+0xfffeb6fc>
   6b75c:	300cd0fa 	srli	r6,r6,3
   6b760:	4806977a 	slli	r3,r9,29
   6b764:	2005883a 	mov	r2,r4
   6b768:	19a2b03a 	or	r17,r3,r6
   6b76c:	003fe306 	br	6b6fc <__alt_data_end+0xfffeb6fc>
   6b770:	0011883a 	mov	r8,zero
   6b774:	0005883a 	mov	r2,zero
   6b778:	003e3f06 	br	6b078 <__alt_data_end+0xfffeb078>
   6b77c:	0401ffc4 	movi	r16,2047
   6b780:	003e2506 	br	6b018 <__alt_data_end+0xfffeb018>
   6b784:	0013883a 	mov	r9,zero
   6b788:	003f8406 	br	6b59c <__alt_data_end+0xfffeb59c>
   6b78c:	0005883a 	mov	r2,zero
   6b790:	0007883a 	mov	r3,zero
   6b794:	003e8906 	br	6b1bc <__alt_data_end+0xfffeb1bc>
   6b798:	197ff804 	addi	r5,r3,-32
   6b79c:	01000804 	movi	r4,32
   6b7a0:	414ad83a 	srl	r5,r8,r5
   6b7a4:	19002426 	beq	r3,r4,6b838 <__adddf3+0x89c>
   6b7a8:	01001004 	movi	r4,64
   6b7ac:	20c7c83a 	sub	r3,r4,r3
   6b7b0:	40c6983a 	sll	r3,r8,r3
   6b7b4:	1c46b03a 	or	r3,r3,r17
   6b7b8:	1806c03a 	cmpne	r3,r3,zero
   6b7bc:	28e2b03a 	or	r17,r5,r3
   6b7c0:	0007883a 	mov	r3,zero
   6b7c4:	003f2306 	br	6b454 <__alt_data_end+0xfffeb454>
   6b7c8:	0007883a 	mov	r3,zero
   6b7cc:	5811883a 	mov	r8,r11
   6b7d0:	00bfffc4 	movi	r2,-1
   6b7d4:	0401ffc4 	movi	r16,2047
   6b7d8:	003e7806 	br	6b1bc <__alt_data_end+0xfffeb1bc>
   6b7dc:	4462b03a 	or	r17,r8,r17
   6b7e0:	8822c03a 	cmpne	r17,r17,zero
   6b7e4:	0009883a 	mov	r4,zero
   6b7e8:	003fa006 	br	6b66c <__alt_data_end+0xfffeb66c>
   6b7ec:	4811883a 	mov	r8,r9
   6b7f0:	3023883a 	mov	r17,r6
   6b7f4:	0401ffc4 	movi	r16,2047
   6b7f8:	003e0706 	br	6b018 <__alt_data_end+0xfffeb018>
   6b7fc:	4811883a 	mov	r8,r9
   6b800:	3023883a 	mov	r17,r6
   6b804:	003e0406 	br	6b018 <__alt_data_end+0xfffeb018>
   6b808:	21fff804 	addi	r7,r4,-32
   6b80c:	01400804 	movi	r5,32
   6b810:	41ced83a 	srl	r7,r8,r7
   6b814:	21400a26 	beq	r4,r5,6b840 <__adddf3+0x8a4>
   6b818:	01401004 	movi	r5,64
   6b81c:	2909c83a 	sub	r4,r5,r4
   6b820:	4108983a 	sll	r4,r8,r4
   6b824:	2448b03a 	or	r4,r4,r17
   6b828:	2008c03a 	cmpne	r4,r4,zero
   6b82c:	3922b03a 	or	r17,r7,r4
   6b830:	0009883a 	mov	r4,zero
   6b834:	003f8d06 	br	6b66c <__alt_data_end+0xfffeb66c>
   6b838:	0007883a 	mov	r3,zero
   6b83c:	003fdd06 	br	6b7b4 <__alt_data_end+0xfffeb7b4>
   6b840:	0009883a 	mov	r4,zero
   6b844:	003ff706 	br	6b824 <__alt_data_end+0xfffeb824>

0006b848 <__divdf3>:
   6b848:	defff004 	addi	sp,sp,-64
   6b84c:	dc800815 	stw	r18,32(sp)
   6b850:	2824d53a 	srli	r18,r5,20
   6b854:	dd800c15 	stw	r22,48(sp)
   6b858:	282cd7fa 	srli	r22,r5,31
   6b85c:	dc000615 	stw	r16,24(sp)
   6b860:	04000434 	movhi	r16,16
   6b864:	843fffc4 	addi	r16,r16,-1
   6b868:	dfc00f15 	stw	ra,60(sp)
   6b86c:	df000e15 	stw	fp,56(sp)
   6b870:	ddc00d15 	stw	r23,52(sp)
   6b874:	dd400b15 	stw	r21,44(sp)
   6b878:	dd000a15 	stw	r20,40(sp)
   6b87c:	dcc00915 	stw	r19,36(sp)
   6b880:	dc400715 	stw	r17,28(sp)
   6b884:	9481ffcc 	andi	r18,r18,2047
   6b888:	2c20703a 	and	r16,r5,r16
   6b88c:	b2003fcc 	andi	r8,r22,255
   6b890:	90006126 	beq	r18,zero,6ba18 <__divdf3+0x1d0>
   6b894:	0081ffc4 	movi	r2,2047
   6b898:	202b883a 	mov	r21,r4
   6b89c:	90803726 	beq	r18,r2,6b97c <__divdf3+0x134>
   6b8a0:	80800434 	orhi	r2,r16,16
   6b8a4:	100490fa 	slli	r2,r2,3
   6b8a8:	2020d77a 	srli	r16,r4,29
   6b8ac:	202a90fa 	slli	r21,r4,3
   6b8b0:	94bf0044 	addi	r18,r18,-1023
   6b8b4:	80a0b03a 	or	r16,r16,r2
   6b8b8:	0013883a 	mov	r9,zero
   6b8bc:	000b883a 	mov	r5,zero
   6b8c0:	3806d53a 	srli	r3,r7,20
   6b8c4:	382ed7fa 	srli	r23,r7,31
   6b8c8:	04400434 	movhi	r17,16
   6b8cc:	8c7fffc4 	addi	r17,r17,-1
   6b8d0:	18c1ffcc 	andi	r3,r3,2047
   6b8d4:	3029883a 	mov	r20,r6
   6b8d8:	3c62703a 	and	r17,r7,r17
   6b8dc:	bf003fcc 	andi	fp,r23,255
   6b8e0:	18006e26 	beq	r3,zero,6ba9c <__divdf3+0x254>
   6b8e4:	0081ffc4 	movi	r2,2047
   6b8e8:	18806626 	beq	r3,r2,6ba84 <__divdf3+0x23c>
   6b8ec:	88800434 	orhi	r2,r17,16
   6b8f0:	100490fa 	slli	r2,r2,3
   6b8f4:	3022d77a 	srli	r17,r6,29
   6b8f8:	302890fa 	slli	r20,r6,3
   6b8fc:	18ff0044 	addi	r3,r3,-1023
   6b900:	88a2b03a 	or	r17,r17,r2
   6b904:	000f883a 	mov	r7,zero
   6b908:	b5e6f03a 	xor	r19,r22,r23
   6b90c:	3a4cb03a 	or	r6,r7,r9
   6b910:	008003c4 	movi	r2,15
   6b914:	9809883a 	mov	r4,r19
   6b918:	90c7c83a 	sub	r3,r18,r3
   6b91c:	9cc03fcc 	andi	r19,r19,255
   6b920:	11809636 	bltu	r2,r6,6bb7c <__divdf3+0x334>
   6b924:	300c90ba 	slli	r6,r6,2
   6b928:	008001f4 	movhi	r2,7
   6b92c:	10ae4f04 	addi	r2,r2,-18116
   6b930:	308d883a 	add	r6,r6,r2
   6b934:	30800017 	ldw	r2,0(r6)
   6b938:	1000683a 	jmp	r2
   6b93c:	0006bb7c 	xorhi	zero,zero,6893
   6b940:	0006b9b4 	movhi	zero,6886
   6b944:	0006bb6c 	andhi	zero,zero,6893
   6b948:	0006b9a8 	cmpgeui	zero,zero,6886
   6b94c:	0006bb6c 	andhi	zero,zero,6893
   6b950:	0006bb40 	call	6bb4 <__alt_mem_sdram_controller+0x6bb4>
   6b954:	0006bb6c 	andhi	zero,zero,6893
   6b958:	0006b9a8 	cmpgeui	zero,zero,6886
   6b95c:	0006b9b4 	movhi	zero,6886
   6b960:	0006b9b4 	movhi	zero,6886
   6b964:	0006bb40 	call	6bb4 <__alt_mem_sdram_controller+0x6bb4>
   6b968:	0006b9a8 	cmpgeui	zero,zero,6886
   6b96c:	0006b998 	cmpnei	zero,zero,6886
   6b970:	0006b998 	cmpnei	zero,zero,6886
   6b974:	0006b998 	cmpnei	zero,zero,6886
   6b978:	0006bf04 	movi	zero,6908
   6b97c:	2404b03a 	or	r2,r4,r16
   6b980:	10006c1e 	bne	r2,zero,6bb34 <__divdf3+0x2ec>
   6b984:	02400204 	movi	r9,8
   6b988:	0021883a 	mov	r16,zero
   6b98c:	002b883a 	mov	r21,zero
   6b990:	01400084 	movi	r5,2
   6b994:	003fca06 	br	6b8c0 <__alt_data_end+0xfffeb8c0>
   6b998:	8023883a 	mov	r17,r16
   6b99c:	a829883a 	mov	r20,r21
   6b9a0:	4039883a 	mov	fp,r8
   6b9a4:	280f883a 	mov	r7,r5
   6b9a8:	00800084 	movi	r2,2
   6b9ac:	3881601e 	bne	r7,r2,6bf30 <__divdf3+0x6e8>
   6b9b0:	e027883a 	mov	r19,fp
   6b9b4:	9900004c 	andi	r4,r19,1
   6b9b8:	0081ffc4 	movi	r2,2047
   6b9bc:	0021883a 	mov	r16,zero
   6b9c0:	002b883a 	mov	r21,zero
   6b9c4:	1004953a 	slli	r2,r2,20
   6b9c8:	20c03fcc 	andi	r3,r4,255
   6b9cc:	01400434 	movhi	r5,16
   6b9d0:	297fffc4 	addi	r5,r5,-1
   6b9d4:	180697fa 	slli	r3,r3,31
   6b9d8:	8160703a 	and	r16,r16,r5
   6b9dc:	80a0b03a 	or	r16,r16,r2
   6b9e0:	80c6b03a 	or	r3,r16,r3
   6b9e4:	a805883a 	mov	r2,r21
   6b9e8:	dfc00f17 	ldw	ra,60(sp)
   6b9ec:	df000e17 	ldw	fp,56(sp)
   6b9f0:	ddc00d17 	ldw	r23,52(sp)
   6b9f4:	dd800c17 	ldw	r22,48(sp)
   6b9f8:	dd400b17 	ldw	r21,44(sp)
   6b9fc:	dd000a17 	ldw	r20,40(sp)
   6ba00:	dcc00917 	ldw	r19,36(sp)
   6ba04:	dc800817 	ldw	r18,32(sp)
   6ba08:	dc400717 	ldw	r17,28(sp)
   6ba0c:	dc000617 	ldw	r16,24(sp)
   6ba10:	dec01004 	addi	sp,sp,64
   6ba14:	f800283a 	ret
   6ba18:	2404b03a 	or	r2,r4,r16
   6ba1c:	2023883a 	mov	r17,r4
   6ba20:	10003f26 	beq	r2,zero,6bb20 <__divdf3+0x2d8>
   6ba24:	80015e26 	beq	r16,zero,6bfa0 <__divdf3+0x758>
   6ba28:	8009883a 	mov	r4,r16
   6ba2c:	d9800215 	stw	r6,8(sp)
   6ba30:	d9c00515 	stw	r7,20(sp)
   6ba34:	da000415 	stw	r8,16(sp)
   6ba38:	006d7dc0 	call	6d7dc <__clzsi2>
   6ba3c:	d9800217 	ldw	r6,8(sp)
   6ba40:	d9c00517 	ldw	r7,20(sp)
   6ba44:	da000417 	ldw	r8,16(sp)
   6ba48:	113ffd44 	addi	r4,r2,-11
   6ba4c:	00c00704 	movi	r3,28
   6ba50:	19014f16 	blt	r3,r4,6bf90 <__divdf3+0x748>
   6ba54:	00c00744 	movi	r3,29
   6ba58:	157ffe04 	addi	r21,r2,-8
   6ba5c:	1907c83a 	sub	r3,r3,r4
   6ba60:	8560983a 	sll	r16,r16,r21
   6ba64:	88c6d83a 	srl	r3,r17,r3
   6ba68:	8d6a983a 	sll	r21,r17,r21
   6ba6c:	1c20b03a 	or	r16,r3,r16
   6ba70:	1080fcc4 	addi	r2,r2,1011
   6ba74:	00a5c83a 	sub	r18,zero,r2
   6ba78:	0013883a 	mov	r9,zero
   6ba7c:	000b883a 	mov	r5,zero
   6ba80:	003f8f06 	br	6b8c0 <__alt_data_end+0xfffeb8c0>
   6ba84:	3444b03a 	or	r2,r6,r17
   6ba88:	1000231e 	bne	r2,zero,6bb18 <__divdf3+0x2d0>
   6ba8c:	0023883a 	mov	r17,zero
   6ba90:	0029883a 	mov	r20,zero
   6ba94:	01c00084 	movi	r7,2
   6ba98:	003f9b06 	br	6b908 <__alt_data_end+0xfffeb908>
   6ba9c:	3444b03a 	or	r2,r6,r17
   6baa0:	10001926 	beq	r2,zero,6bb08 <__divdf3+0x2c0>
   6baa4:	88014b26 	beq	r17,zero,6bfd4 <__divdf3+0x78c>
   6baa8:	8809883a 	mov	r4,r17
   6baac:	d9400115 	stw	r5,4(sp)
   6bab0:	d9800215 	stw	r6,8(sp)
   6bab4:	da000415 	stw	r8,16(sp)
   6bab8:	da400315 	stw	r9,12(sp)
   6babc:	006d7dc0 	call	6d7dc <__clzsi2>
   6bac0:	d9400117 	ldw	r5,4(sp)
   6bac4:	d9800217 	ldw	r6,8(sp)
   6bac8:	da000417 	ldw	r8,16(sp)
   6bacc:	da400317 	ldw	r9,12(sp)
   6bad0:	113ffd44 	addi	r4,r2,-11
   6bad4:	00c00704 	movi	r3,28
   6bad8:	19013a16 	blt	r3,r4,6bfc4 <__divdf3+0x77c>
   6badc:	00c00744 	movi	r3,29
   6bae0:	153ffe04 	addi	r20,r2,-8
   6bae4:	1907c83a 	sub	r3,r3,r4
   6bae8:	8d22983a 	sll	r17,r17,r20
   6baec:	30c6d83a 	srl	r3,r6,r3
   6baf0:	3528983a 	sll	r20,r6,r20
   6baf4:	1c62b03a 	or	r17,r3,r17
   6baf8:	1080fcc4 	addi	r2,r2,1011
   6bafc:	0087c83a 	sub	r3,zero,r2
   6bb00:	000f883a 	mov	r7,zero
   6bb04:	003f8006 	br	6b908 <__alt_data_end+0xfffeb908>
   6bb08:	0023883a 	mov	r17,zero
   6bb0c:	0029883a 	mov	r20,zero
   6bb10:	01c00044 	movi	r7,1
   6bb14:	003f7c06 	br	6b908 <__alt_data_end+0xfffeb908>
   6bb18:	01c000c4 	movi	r7,3
   6bb1c:	003f7a06 	br	6b908 <__alt_data_end+0xfffeb908>
   6bb20:	02400104 	movi	r9,4
   6bb24:	0021883a 	mov	r16,zero
   6bb28:	002b883a 	mov	r21,zero
   6bb2c:	01400044 	movi	r5,1
   6bb30:	003f6306 	br	6b8c0 <__alt_data_end+0xfffeb8c0>
   6bb34:	02400304 	movi	r9,12
   6bb38:	014000c4 	movi	r5,3
   6bb3c:	003f6006 	br	6b8c0 <__alt_data_end+0xfffeb8c0>
   6bb40:	04000434 	movhi	r16,16
   6bb44:	0009883a 	mov	r4,zero
   6bb48:	843fffc4 	addi	r16,r16,-1
   6bb4c:	057fffc4 	movi	r21,-1
   6bb50:	0081ffc4 	movi	r2,2047
   6bb54:	003f9b06 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6bb58:	00c00044 	movi	r3,1
   6bb5c:	1887c83a 	sub	r3,r3,r2
   6bb60:	01000e04 	movi	r4,56
   6bb64:	20c1530e 	bge	r4,r3,6c0b4 <__divdf3+0x86c>
   6bb68:	9900004c 	andi	r4,r19,1
   6bb6c:	0005883a 	mov	r2,zero
   6bb70:	0021883a 	mov	r16,zero
   6bb74:	002b883a 	mov	r21,zero
   6bb78:	003f9206 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6bb7c:	8c012e36 	bltu	r17,r16,6c038 <__divdf3+0x7f0>
   6bb80:	84412c26 	beq	r16,r17,6c034 <__divdf3+0x7ec>
   6bb84:	a82f883a 	mov	r23,r21
   6bb88:	18ffffc4 	addi	r3,r3,-1
   6bb8c:	002b883a 	mov	r21,zero
   6bb90:	a004d63a 	srli	r2,r20,24
   6bb94:	8822923a 	slli	r17,r17,8
   6bb98:	a028923a 	slli	r20,r20,8
   6bb9c:	8009883a 	mov	r4,r16
   6bba0:	88acb03a 	or	r22,r17,r2
   6bba4:	dd000015 	stw	r20,0(sp)
   6bba8:	b028d43a 	srli	r20,r22,16
   6bbac:	d8c00215 	stw	r3,8(sp)
   6bbb0:	b4bfffcc 	andi	r18,r22,65535
   6bbb4:	a00b883a 	mov	r5,r20
   6bbb8:	006aee00 	call	6aee0 <__udivsi3>
   6bbbc:	100b883a 	mov	r5,r2
   6bbc0:	9009883a 	mov	r4,r18
   6bbc4:	1023883a 	mov	r17,r2
   6bbc8:	00609000 	call	60900 <__mulsi3>
   6bbcc:	8009883a 	mov	r4,r16
   6bbd0:	a00b883a 	mov	r5,r20
   6bbd4:	1039883a 	mov	fp,r2
   6bbd8:	006af440 	call	6af44 <__umodsi3>
   6bbdc:	1004943a 	slli	r2,r2,16
   6bbe0:	b808d43a 	srli	r4,r23,16
   6bbe4:	d8c00217 	ldw	r3,8(sp)
   6bbe8:	2084b03a 	or	r2,r4,r2
   6bbec:	1700062e 	bgeu	r2,fp,6bc08 <__divdf3+0x3c0>
   6bbf0:	1585883a 	add	r2,r2,r22
   6bbf4:	893fffc4 	addi	r4,r17,-1
   6bbf8:	15811d36 	bltu	r2,r22,6c070 <__divdf3+0x828>
   6bbfc:	17011c2e 	bgeu	r2,fp,6c070 <__divdf3+0x828>
   6bc00:	8c7fff84 	addi	r17,r17,-2
   6bc04:	1585883a 	add	r2,r2,r22
   6bc08:	1739c83a 	sub	fp,r2,fp
   6bc0c:	a00b883a 	mov	r5,r20
   6bc10:	e009883a 	mov	r4,fp
   6bc14:	d8c00215 	stw	r3,8(sp)
   6bc18:	006aee00 	call	6aee0 <__udivsi3>
   6bc1c:	100b883a 	mov	r5,r2
   6bc20:	9009883a 	mov	r4,r18
   6bc24:	1021883a 	mov	r16,r2
   6bc28:	00609000 	call	60900 <__mulsi3>
   6bc2c:	a00b883a 	mov	r5,r20
   6bc30:	e009883a 	mov	r4,fp
   6bc34:	d8800415 	stw	r2,16(sp)
   6bc38:	006af440 	call	6af44 <__umodsi3>
   6bc3c:	1004943a 	slli	r2,r2,16
   6bc40:	da000417 	ldw	r8,16(sp)
   6bc44:	bdffffcc 	andi	r23,r23,65535
   6bc48:	b884b03a 	or	r2,r23,r2
   6bc4c:	d8c00217 	ldw	r3,8(sp)
   6bc50:	1200062e 	bgeu	r2,r8,6bc6c <__divdf3+0x424>
   6bc54:	1585883a 	add	r2,r2,r22
   6bc58:	813fffc4 	addi	r4,r16,-1
   6bc5c:	15810236 	bltu	r2,r22,6c068 <__divdf3+0x820>
   6bc60:	1201012e 	bgeu	r2,r8,6c068 <__divdf3+0x820>
   6bc64:	843fff84 	addi	r16,r16,-2
   6bc68:	1585883a 	add	r2,r2,r22
   6bc6c:	8822943a 	slli	r17,r17,16
   6bc70:	d9800017 	ldw	r6,0(sp)
   6bc74:	1211c83a 	sub	r8,r2,r8
   6bc78:	8c22b03a 	or	r17,r17,r16
   6bc7c:	373fffcc 	andi	fp,r6,65535
   6bc80:	8abfffcc 	andi	r10,r17,65535
   6bc84:	8820d43a 	srli	r16,r17,16
   6bc88:	5009883a 	mov	r4,r10
   6bc8c:	e00b883a 	mov	r5,fp
   6bc90:	302ed43a 	srli	r23,r6,16
   6bc94:	d8c00215 	stw	r3,8(sp)
   6bc98:	da000415 	stw	r8,16(sp)
   6bc9c:	da800115 	stw	r10,4(sp)
   6bca0:	00609000 	call	60900 <__mulsi3>
   6bca4:	800b883a 	mov	r5,r16
   6bca8:	e009883a 	mov	r4,fp
   6bcac:	d8800515 	stw	r2,20(sp)
   6bcb0:	00609000 	call	60900 <__mulsi3>
   6bcb4:	8009883a 	mov	r4,r16
   6bcb8:	b80b883a 	mov	r5,r23
   6bcbc:	d8800315 	stw	r2,12(sp)
   6bcc0:	00609000 	call	60900 <__mulsi3>
   6bcc4:	da800117 	ldw	r10,4(sp)
   6bcc8:	b80b883a 	mov	r5,r23
   6bccc:	1021883a 	mov	r16,r2
   6bcd0:	5009883a 	mov	r4,r10
   6bcd4:	00609000 	call	60900 <__mulsi3>
   6bcd8:	d9c00517 	ldw	r7,20(sp)
   6bcdc:	da400317 	ldw	r9,12(sp)
   6bce0:	d8c00217 	ldw	r3,8(sp)
   6bce4:	3808d43a 	srli	r4,r7,16
   6bce8:	1245883a 	add	r2,r2,r9
   6bcec:	da000417 	ldw	r8,16(sp)
   6bcf0:	2085883a 	add	r2,r4,r2
   6bcf4:	1240022e 	bgeu	r2,r9,6bd00 <__divdf3+0x4b8>
   6bcf8:	01000074 	movhi	r4,1
   6bcfc:	8121883a 	add	r16,r16,r4
   6bd00:	1008d43a 	srli	r4,r2,16
   6bd04:	1004943a 	slli	r2,r2,16
   6bd08:	39ffffcc 	andi	r7,r7,65535
   6bd0c:	2409883a 	add	r4,r4,r16
   6bd10:	11c5883a 	add	r2,r2,r7
   6bd14:	4100bb36 	bltu	r8,r4,6c004 <__divdf3+0x7bc>
   6bd18:	4100d726 	beq	r8,r4,6c078 <__divdf3+0x830>
   6bd1c:	4109c83a 	sub	r4,r8,r4
   6bd20:	a8a1c83a 	sub	r16,r21,r2
   6bd24:	ac2b803a 	cmpltu	r21,r21,r16
   6bd28:	256bc83a 	sub	r21,r4,r21
   6bd2c:	b540d926 	beq	r22,r21,6c094 <__divdf3+0x84c>
   6bd30:	a00b883a 	mov	r5,r20
   6bd34:	a809883a 	mov	r4,r21
   6bd38:	d8c00215 	stw	r3,8(sp)
   6bd3c:	006aee00 	call	6aee0 <__udivsi3>
   6bd40:	100b883a 	mov	r5,r2
   6bd44:	9009883a 	mov	r4,r18
   6bd48:	d8800515 	stw	r2,20(sp)
   6bd4c:	00609000 	call	60900 <__mulsi3>
   6bd50:	a809883a 	mov	r4,r21
   6bd54:	a00b883a 	mov	r5,r20
   6bd58:	d8800415 	stw	r2,16(sp)
   6bd5c:	006af440 	call	6af44 <__umodsi3>
   6bd60:	1004943a 	slli	r2,r2,16
   6bd64:	8008d43a 	srli	r4,r16,16
   6bd68:	da000417 	ldw	r8,16(sp)
   6bd6c:	d8c00217 	ldw	r3,8(sp)
   6bd70:	2084b03a 	or	r2,r4,r2
   6bd74:	d9c00517 	ldw	r7,20(sp)
   6bd78:	1200062e 	bgeu	r2,r8,6bd94 <__divdf3+0x54c>
   6bd7c:	1585883a 	add	r2,r2,r22
   6bd80:	393fffc4 	addi	r4,r7,-1
   6bd84:	1580c536 	bltu	r2,r22,6c09c <__divdf3+0x854>
   6bd88:	1200c42e 	bgeu	r2,r8,6c09c <__divdf3+0x854>
   6bd8c:	39ffff84 	addi	r7,r7,-2
   6bd90:	1585883a 	add	r2,r2,r22
   6bd94:	122bc83a 	sub	r21,r2,r8
   6bd98:	a00b883a 	mov	r5,r20
   6bd9c:	a809883a 	mov	r4,r21
   6bda0:	d8c00215 	stw	r3,8(sp)
   6bda4:	d9c00515 	stw	r7,20(sp)
   6bda8:	006aee00 	call	6aee0 <__udivsi3>
   6bdac:	9009883a 	mov	r4,r18
   6bdb0:	100b883a 	mov	r5,r2
   6bdb4:	d8800415 	stw	r2,16(sp)
   6bdb8:	00609000 	call	60900 <__mulsi3>
   6bdbc:	a809883a 	mov	r4,r21
   6bdc0:	a00b883a 	mov	r5,r20
   6bdc4:	1025883a 	mov	r18,r2
   6bdc8:	006af440 	call	6af44 <__umodsi3>
   6bdcc:	1004943a 	slli	r2,r2,16
   6bdd0:	813fffcc 	andi	r4,r16,65535
   6bdd4:	d8c00217 	ldw	r3,8(sp)
   6bdd8:	20a0b03a 	or	r16,r4,r2
   6bddc:	d9c00517 	ldw	r7,20(sp)
   6bde0:	da000417 	ldw	r8,16(sp)
   6bde4:	8480062e 	bgeu	r16,r18,6be00 <__divdf3+0x5b8>
   6bde8:	85a1883a 	add	r16,r16,r22
   6bdec:	40bfffc4 	addi	r2,r8,-1
   6bdf0:	8580ac36 	bltu	r16,r22,6c0a4 <__divdf3+0x85c>
   6bdf4:	8480ab2e 	bgeu	r16,r18,6c0a4 <__divdf3+0x85c>
   6bdf8:	423fff84 	addi	r8,r8,-2
   6bdfc:	85a1883a 	add	r16,r16,r22
   6be00:	3804943a 	slli	r2,r7,16
   6be04:	84a1c83a 	sub	r16,r16,r18
   6be08:	e009883a 	mov	r4,fp
   6be0c:	1228b03a 	or	r20,r2,r8
   6be10:	a1ffffcc 	andi	r7,r20,65535
   6be14:	a024d43a 	srli	r18,r20,16
   6be18:	380b883a 	mov	r5,r7
   6be1c:	d8c00215 	stw	r3,8(sp)
   6be20:	d9c00515 	stw	r7,20(sp)
   6be24:	00609000 	call	60900 <__mulsi3>
   6be28:	900b883a 	mov	r5,r18
   6be2c:	e009883a 	mov	r4,fp
   6be30:	102b883a 	mov	r21,r2
   6be34:	00609000 	call	60900 <__mulsi3>
   6be38:	900b883a 	mov	r5,r18
   6be3c:	b809883a 	mov	r4,r23
   6be40:	1039883a 	mov	fp,r2
   6be44:	00609000 	call	60900 <__mulsi3>
   6be48:	d9c00517 	ldw	r7,20(sp)
   6be4c:	b80b883a 	mov	r5,r23
   6be50:	1025883a 	mov	r18,r2
   6be54:	3809883a 	mov	r4,r7
   6be58:	00609000 	call	60900 <__mulsi3>
   6be5c:	a808d43a 	srli	r4,r21,16
   6be60:	1705883a 	add	r2,r2,fp
   6be64:	d8c00217 	ldw	r3,8(sp)
   6be68:	2085883a 	add	r2,r4,r2
   6be6c:	1700022e 	bgeu	r2,fp,6be78 <__divdf3+0x630>
   6be70:	01000074 	movhi	r4,1
   6be74:	9125883a 	add	r18,r18,r4
   6be78:	1008d43a 	srli	r4,r2,16
   6be7c:	1004943a 	slli	r2,r2,16
   6be80:	ad7fffcc 	andi	r21,r21,65535
   6be84:	2489883a 	add	r4,r4,r18
   6be88:	1545883a 	add	r2,r2,r21
   6be8c:	81003836 	bltu	r16,r4,6bf70 <__divdf3+0x728>
   6be90:	81003626 	beq	r16,r4,6bf6c <__divdf3+0x724>
   6be94:	a5000054 	ori	r20,r20,1
   6be98:	1880ffc4 	addi	r2,r3,1023
   6be9c:	00bf2e0e 	bge	zero,r2,6bb58 <__alt_data_end+0xfffebb58>
   6bea0:	a10001cc 	andi	r4,r20,7
   6bea4:	20000726 	beq	r4,zero,6bec4 <__divdf3+0x67c>
   6bea8:	a10003cc 	andi	r4,r20,15
   6beac:	01400104 	movi	r5,4
   6beb0:	21400426 	beq	r4,r5,6bec4 <__divdf3+0x67c>
   6beb4:	a149883a 	add	r4,r20,r5
   6beb8:	2529803a 	cmpltu	r20,r4,r20
   6bebc:	8d23883a 	add	r17,r17,r20
   6bec0:	2029883a 	mov	r20,r4
   6bec4:	8900402c 	andhi	r4,r17,256
   6bec8:	20000426 	beq	r4,zero,6bedc <__divdf3+0x694>
   6becc:	18810004 	addi	r2,r3,1024
   6bed0:	00ffc034 	movhi	r3,65280
   6bed4:	18ffffc4 	addi	r3,r3,-1
   6bed8:	88e2703a 	and	r17,r17,r3
   6bedc:	00c1ff84 	movi	r3,2046
   6bee0:	18beb416 	blt	r3,r2,6b9b4 <__alt_data_end+0xfffeb9b4>
   6bee4:	a028d0fa 	srli	r20,r20,3
   6bee8:	882a977a 	slli	r21,r17,29
   6beec:	8820927a 	slli	r16,r17,9
   6bef0:	1081ffcc 	andi	r2,r2,2047
   6bef4:	ad2ab03a 	or	r21,r21,r20
   6bef8:	8020d33a 	srli	r16,r16,12
   6befc:	9900004c 	andi	r4,r19,1
   6bf00:	003eb006 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6bf04:	8080022c 	andhi	r2,r16,8
   6bf08:	10001226 	beq	r2,zero,6bf54 <__divdf3+0x70c>
   6bf0c:	8880022c 	andhi	r2,r17,8
   6bf10:	1000101e 	bne	r2,zero,6bf54 <__divdf3+0x70c>
   6bf14:	00800434 	movhi	r2,16
   6bf18:	8c000234 	orhi	r16,r17,8
   6bf1c:	10bfffc4 	addi	r2,r2,-1
   6bf20:	b809883a 	mov	r4,r23
   6bf24:	80a0703a 	and	r16,r16,r2
   6bf28:	a02b883a 	mov	r21,r20
   6bf2c:	003f0806 	br	6bb50 <__alt_data_end+0xfffebb50>
   6bf30:	008000c4 	movi	r2,3
   6bf34:	3880b126 	beq	r7,r2,6c1fc <__divdf3+0x9b4>
   6bf38:	00800044 	movi	r2,1
   6bf3c:	38805b1e 	bne	r7,r2,6c0ac <__divdf3+0x864>
   6bf40:	e009883a 	mov	r4,fp
   6bf44:	0005883a 	mov	r2,zero
   6bf48:	0021883a 	mov	r16,zero
   6bf4c:	002b883a 	mov	r21,zero
   6bf50:	003e9c06 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6bf54:	00800434 	movhi	r2,16
   6bf58:	84000234 	orhi	r16,r16,8
   6bf5c:	10bfffc4 	addi	r2,r2,-1
   6bf60:	b009883a 	mov	r4,r22
   6bf64:	80a0703a 	and	r16,r16,r2
   6bf68:	003ef906 	br	6bb50 <__alt_data_end+0xfffebb50>
   6bf6c:	103fca26 	beq	r2,zero,6be98 <__alt_data_end+0xfffebe98>
   6bf70:	b421883a 	add	r16,r22,r16
   6bf74:	a17fffc4 	addi	r5,r20,-1
   6bf78:	8580422e 	bgeu	r16,r22,6c084 <__divdf3+0x83c>
   6bf7c:	2829883a 	mov	r20,r5
   6bf80:	813fc41e 	bne	r16,r4,6be94 <__alt_data_end+0xfffebe94>
   6bf84:	d9800017 	ldw	r6,0(sp)
   6bf88:	30bfc21e 	bne	r6,r2,6be94 <__alt_data_end+0xfffebe94>
   6bf8c:	003fc206 	br	6be98 <__alt_data_end+0xfffebe98>
   6bf90:	143ff604 	addi	r16,r2,-40
   6bf94:	8c20983a 	sll	r16,r17,r16
   6bf98:	002b883a 	mov	r21,zero
   6bf9c:	003eb406 	br	6ba70 <__alt_data_end+0xfffeba70>
   6bfa0:	d9800215 	stw	r6,8(sp)
   6bfa4:	d9c00515 	stw	r7,20(sp)
   6bfa8:	da000415 	stw	r8,16(sp)
   6bfac:	006d7dc0 	call	6d7dc <__clzsi2>
   6bfb0:	10800804 	addi	r2,r2,32
   6bfb4:	da000417 	ldw	r8,16(sp)
   6bfb8:	d9c00517 	ldw	r7,20(sp)
   6bfbc:	d9800217 	ldw	r6,8(sp)
   6bfc0:	003ea106 	br	6ba48 <__alt_data_end+0xfffeba48>
   6bfc4:	147ff604 	addi	r17,r2,-40
   6bfc8:	3462983a 	sll	r17,r6,r17
   6bfcc:	0029883a 	mov	r20,zero
   6bfd0:	003ec906 	br	6baf8 <__alt_data_end+0xfffebaf8>
   6bfd4:	3009883a 	mov	r4,r6
   6bfd8:	d9400115 	stw	r5,4(sp)
   6bfdc:	d9800215 	stw	r6,8(sp)
   6bfe0:	da000415 	stw	r8,16(sp)
   6bfe4:	da400315 	stw	r9,12(sp)
   6bfe8:	006d7dc0 	call	6d7dc <__clzsi2>
   6bfec:	10800804 	addi	r2,r2,32
   6bff0:	da400317 	ldw	r9,12(sp)
   6bff4:	da000417 	ldw	r8,16(sp)
   6bff8:	d9800217 	ldw	r6,8(sp)
   6bffc:	d9400117 	ldw	r5,4(sp)
   6c000:	003eb306 	br	6bad0 <__alt_data_end+0xfffebad0>
   6c004:	d9800017 	ldw	r6,0(sp)
   6c008:	a9ab883a 	add	r21,r21,r6
   6c00c:	a98b803a 	cmpltu	r5,r21,r6
   6c010:	2d8b883a 	add	r5,r5,r22
   6c014:	2a11883a 	add	r8,r5,r8
   6c018:	897fffc4 	addi	r5,r17,-1
   6c01c:	b2000c2e 	bgeu	r22,r8,6c050 <__divdf3+0x808>
   6c020:	41003f36 	bltu	r8,r4,6c120 <__divdf3+0x8d8>
   6c024:	22006c26 	beq	r4,r8,6c1d8 <__divdf3+0x990>
   6c028:	4109c83a 	sub	r4,r8,r4
   6c02c:	2823883a 	mov	r17,r5
   6c030:	003f3b06 	br	6bd20 <__alt_data_end+0xfffebd20>
   6c034:	ad3ed336 	bltu	r21,r20,6bb84 <__alt_data_end+0xfffebb84>
   6c038:	a804d07a 	srli	r2,r21,1
   6c03c:	802e97fa 	slli	r23,r16,31
   6c040:	a82a97fa 	slli	r21,r21,31
   6c044:	8020d07a 	srli	r16,r16,1
   6c048:	b8aeb03a 	or	r23,r23,r2
   6c04c:	003ed006 	br	6bb90 <__alt_data_end+0xfffebb90>
   6c050:	b23ff51e 	bne	r22,r8,6c028 <__alt_data_end+0xfffec028>
   6c054:	d9800017 	ldw	r6,0(sp)
   6c058:	a9bff12e 	bgeu	r21,r6,6c020 <__alt_data_end+0xfffec020>
   6c05c:	b109c83a 	sub	r4,r22,r4
   6c060:	2823883a 	mov	r17,r5
   6c064:	003f2e06 	br	6bd20 <__alt_data_end+0xfffebd20>
   6c068:	2021883a 	mov	r16,r4
   6c06c:	003eff06 	br	6bc6c <__alt_data_end+0xfffebc6c>
   6c070:	2023883a 	mov	r17,r4
   6c074:	003ee406 	br	6bc08 <__alt_data_end+0xfffebc08>
   6c078:	a8bfe236 	bltu	r21,r2,6c004 <__alt_data_end+0xfffec004>
   6c07c:	0009883a 	mov	r4,zero
   6c080:	003f2706 	br	6bd20 <__alt_data_end+0xfffebd20>
   6c084:	81002d36 	bltu	r16,r4,6c13c <__divdf3+0x8f4>
   6c088:	24005626 	beq	r4,r16,6c1e4 <__divdf3+0x99c>
   6c08c:	2829883a 	mov	r20,r5
   6c090:	003f8006 	br	6be94 <__alt_data_end+0xfffebe94>
   6c094:	053fffc4 	movi	r20,-1
   6c098:	003f7f06 	br	6be98 <__alt_data_end+0xfffebe98>
   6c09c:	200f883a 	mov	r7,r4
   6c0a0:	003f3c06 	br	6bd94 <__alt_data_end+0xfffebd94>
   6c0a4:	1011883a 	mov	r8,r2
   6c0a8:	003f5506 	br	6be00 <__alt_data_end+0xfffebe00>
   6c0ac:	e027883a 	mov	r19,fp
   6c0b0:	003f7906 	br	6be98 <__alt_data_end+0xfffebe98>
   6c0b4:	010007c4 	movi	r4,31
   6c0b8:	20c02816 	blt	r4,r3,6c15c <__divdf3+0x914>
   6c0bc:	00800804 	movi	r2,32
   6c0c0:	10c5c83a 	sub	r2,r2,r3
   6c0c4:	888a983a 	sll	r5,r17,r2
   6c0c8:	a0c8d83a 	srl	r4,r20,r3
   6c0cc:	a084983a 	sll	r2,r20,r2
   6c0d0:	88e2d83a 	srl	r17,r17,r3
   6c0d4:	2906b03a 	or	r3,r5,r4
   6c0d8:	1004c03a 	cmpne	r2,r2,zero
   6c0dc:	1886b03a 	or	r3,r3,r2
   6c0e0:	188001cc 	andi	r2,r3,7
   6c0e4:	10000726 	beq	r2,zero,6c104 <__divdf3+0x8bc>
   6c0e8:	188003cc 	andi	r2,r3,15
   6c0ec:	01000104 	movi	r4,4
   6c0f0:	11000426 	beq	r2,r4,6c104 <__divdf3+0x8bc>
   6c0f4:	1805883a 	mov	r2,r3
   6c0f8:	10c00104 	addi	r3,r2,4
   6c0fc:	1885803a 	cmpltu	r2,r3,r2
   6c100:	88a3883a 	add	r17,r17,r2
   6c104:	8880202c 	andhi	r2,r17,128
   6c108:	10002926 	beq	r2,zero,6c1b0 <__divdf3+0x968>
   6c10c:	9900004c 	andi	r4,r19,1
   6c110:	00800044 	movi	r2,1
   6c114:	0021883a 	mov	r16,zero
   6c118:	002b883a 	mov	r21,zero
   6c11c:	003e2906 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6c120:	d9800017 	ldw	r6,0(sp)
   6c124:	8c7fff84 	addi	r17,r17,-2
   6c128:	a9ab883a 	add	r21,r21,r6
   6c12c:	a98b803a 	cmpltu	r5,r21,r6
   6c130:	2d8b883a 	add	r5,r5,r22
   6c134:	2a11883a 	add	r8,r5,r8
   6c138:	003ef806 	br	6bd1c <__alt_data_end+0xfffebd1c>
   6c13c:	d9800017 	ldw	r6,0(sp)
   6c140:	318f883a 	add	r7,r6,r6
   6c144:	398b803a 	cmpltu	r5,r7,r6
   6c148:	2d8d883a 	add	r6,r5,r22
   6c14c:	81a1883a 	add	r16,r16,r6
   6c150:	a17fff84 	addi	r5,r20,-2
   6c154:	d9c00015 	stw	r7,0(sp)
   6c158:	003f8806 	br	6bf7c <__alt_data_end+0xfffebf7c>
   6c15c:	013ff844 	movi	r4,-31
   6c160:	2085c83a 	sub	r2,r4,r2
   6c164:	8888d83a 	srl	r4,r17,r2
   6c168:	00800804 	movi	r2,32
   6c16c:	18802126 	beq	r3,r2,6c1f4 <__divdf3+0x9ac>
   6c170:	04001004 	movi	r16,64
   6c174:	80c7c83a 	sub	r3,r16,r3
   6c178:	88e0983a 	sll	r16,r17,r3
   6c17c:	8504b03a 	or	r2,r16,r20
   6c180:	1004c03a 	cmpne	r2,r2,zero
   6c184:	2084b03a 	or	r2,r4,r2
   6c188:	144001cc 	andi	r17,r2,7
   6c18c:	88000d1e 	bne	r17,zero,6c1c4 <__divdf3+0x97c>
   6c190:	0021883a 	mov	r16,zero
   6c194:	102ad0fa 	srli	r21,r2,3
   6c198:	9900004c 	andi	r4,r19,1
   6c19c:	0005883a 	mov	r2,zero
   6c1a0:	ac6ab03a 	or	r21,r21,r17
   6c1a4:	003e0706 	br	6b9c4 <__alt_data_end+0xfffeb9c4>
   6c1a8:	1007883a 	mov	r3,r2
   6c1ac:	0023883a 	mov	r17,zero
   6c1b0:	8820927a 	slli	r16,r17,9
   6c1b4:	1805883a 	mov	r2,r3
   6c1b8:	8822977a 	slli	r17,r17,29
   6c1bc:	8020d33a 	srli	r16,r16,12
   6c1c0:	003ff406 	br	6c194 <__alt_data_end+0xfffec194>
   6c1c4:	10c003cc 	andi	r3,r2,15
   6c1c8:	01000104 	movi	r4,4
   6c1cc:	193ff626 	beq	r3,r4,6c1a8 <__alt_data_end+0xfffec1a8>
   6c1d0:	0023883a 	mov	r17,zero
   6c1d4:	003fc806 	br	6c0f8 <__alt_data_end+0xfffec0f8>
   6c1d8:	a8bfd136 	bltu	r21,r2,6c120 <__alt_data_end+0xfffec120>
   6c1dc:	2823883a 	mov	r17,r5
   6c1e0:	003fa606 	br	6c07c <__alt_data_end+0xfffec07c>
   6c1e4:	d9800017 	ldw	r6,0(sp)
   6c1e8:	30bfd436 	bltu	r6,r2,6c13c <__alt_data_end+0xfffec13c>
   6c1ec:	2829883a 	mov	r20,r5
   6c1f0:	003f6406 	br	6bf84 <__alt_data_end+0xfffebf84>
   6c1f4:	0021883a 	mov	r16,zero
   6c1f8:	003fe006 	br	6c17c <__alt_data_end+0xfffec17c>
   6c1fc:	00800434 	movhi	r2,16
   6c200:	8c000234 	orhi	r16,r17,8
   6c204:	10bfffc4 	addi	r2,r2,-1
   6c208:	e009883a 	mov	r4,fp
   6c20c:	80a0703a 	and	r16,r16,r2
   6c210:	a02b883a 	mov	r21,r20
   6c214:	003e4e06 	br	6bb50 <__alt_data_end+0xfffebb50>

0006c218 <__eqdf2>:
   6c218:	2804d53a 	srli	r2,r5,20
   6c21c:	3806d53a 	srli	r3,r7,20
   6c220:	02000434 	movhi	r8,16
   6c224:	423fffc4 	addi	r8,r8,-1
   6c228:	1081ffcc 	andi	r2,r2,2047
   6c22c:	0281ffc4 	movi	r10,2047
   6c230:	2a12703a 	and	r9,r5,r8
   6c234:	18c1ffcc 	andi	r3,r3,2047
   6c238:	3a10703a 	and	r8,r7,r8
   6c23c:	280ad7fa 	srli	r5,r5,31
   6c240:	380ed7fa 	srli	r7,r7,31
   6c244:	12801026 	beq	r2,r10,6c288 <__eqdf2+0x70>
   6c248:	0281ffc4 	movi	r10,2047
   6c24c:	1a800a26 	beq	r3,r10,6c278 <__eqdf2+0x60>
   6c250:	10c00226 	beq	r2,r3,6c25c <__eqdf2+0x44>
   6c254:	00800044 	movi	r2,1
   6c258:	f800283a 	ret
   6c25c:	4a3ffd1e 	bne	r9,r8,6c254 <__alt_data_end+0xfffec254>
   6c260:	21bffc1e 	bne	r4,r6,6c254 <__alt_data_end+0xfffec254>
   6c264:	29c00c26 	beq	r5,r7,6c298 <__eqdf2+0x80>
   6c268:	103ffa1e 	bne	r2,zero,6c254 <__alt_data_end+0xfffec254>
   6c26c:	2244b03a 	or	r2,r4,r9
   6c270:	1004c03a 	cmpne	r2,r2,zero
   6c274:	f800283a 	ret
   6c278:	3214b03a 	or	r10,r6,r8
   6c27c:	503ff426 	beq	r10,zero,6c250 <__alt_data_end+0xfffec250>
   6c280:	00800044 	movi	r2,1
   6c284:	f800283a 	ret
   6c288:	2254b03a 	or	r10,r4,r9
   6c28c:	503fee26 	beq	r10,zero,6c248 <__alt_data_end+0xfffec248>
   6c290:	00800044 	movi	r2,1
   6c294:	f800283a 	ret
   6c298:	0005883a 	mov	r2,zero
   6c29c:	f800283a 	ret

0006c2a0 <__gedf2>:
   6c2a0:	2804d53a 	srli	r2,r5,20
   6c2a4:	3806d53a 	srli	r3,r7,20
   6c2a8:	02000434 	movhi	r8,16
   6c2ac:	423fffc4 	addi	r8,r8,-1
   6c2b0:	1081ffcc 	andi	r2,r2,2047
   6c2b4:	0241ffc4 	movi	r9,2047
   6c2b8:	2a14703a 	and	r10,r5,r8
   6c2bc:	18c1ffcc 	andi	r3,r3,2047
   6c2c0:	3a10703a 	and	r8,r7,r8
   6c2c4:	280ad7fa 	srli	r5,r5,31
   6c2c8:	380ed7fa 	srli	r7,r7,31
   6c2cc:	12401d26 	beq	r2,r9,6c344 <__gedf2+0xa4>
   6c2d0:	0241ffc4 	movi	r9,2047
   6c2d4:	1a401226 	beq	r3,r9,6c320 <__gedf2+0x80>
   6c2d8:	1000081e 	bne	r2,zero,6c2fc <__gedf2+0x5c>
   6c2dc:	2296b03a 	or	r11,r4,r10
   6c2e0:	5813003a 	cmpeq	r9,r11,zero
   6c2e4:	1800091e 	bne	r3,zero,6c30c <__gedf2+0x6c>
   6c2e8:	3218b03a 	or	r12,r6,r8
   6c2ec:	6000071e 	bne	r12,zero,6c30c <__gedf2+0x6c>
   6c2f0:	0005883a 	mov	r2,zero
   6c2f4:	5800101e 	bne	r11,zero,6c338 <__gedf2+0x98>
   6c2f8:	f800283a 	ret
   6c2fc:	18000c1e 	bne	r3,zero,6c330 <__gedf2+0x90>
   6c300:	3212b03a 	or	r9,r6,r8
   6c304:	48000c26 	beq	r9,zero,6c338 <__gedf2+0x98>
   6c308:	0013883a 	mov	r9,zero
   6c30c:	39c03fcc 	andi	r7,r7,255
   6c310:	48000826 	beq	r9,zero,6c334 <__gedf2+0x94>
   6c314:	38000926 	beq	r7,zero,6c33c <__gedf2+0x9c>
   6c318:	00800044 	movi	r2,1
   6c31c:	f800283a 	ret
   6c320:	3212b03a 	or	r9,r6,r8
   6c324:	483fec26 	beq	r9,zero,6c2d8 <__alt_data_end+0xfffec2d8>
   6c328:	00bfff84 	movi	r2,-2
   6c32c:	f800283a 	ret
   6c330:	39c03fcc 	andi	r7,r7,255
   6c334:	29c00626 	beq	r5,r7,6c350 <__gedf2+0xb0>
   6c338:	283ff726 	beq	r5,zero,6c318 <__alt_data_end+0xfffec318>
   6c33c:	00bfffc4 	movi	r2,-1
   6c340:	f800283a 	ret
   6c344:	2292b03a 	or	r9,r4,r10
   6c348:	483fe126 	beq	r9,zero,6c2d0 <__alt_data_end+0xfffec2d0>
   6c34c:	003ff606 	br	6c328 <__alt_data_end+0xfffec328>
   6c350:	18bff916 	blt	r3,r2,6c338 <__alt_data_end+0xfffec338>
   6c354:	10c00316 	blt	r2,r3,6c364 <__gedf2+0xc4>
   6c358:	42bff736 	bltu	r8,r10,6c338 <__alt_data_end+0xfffec338>
   6c35c:	52000326 	beq	r10,r8,6c36c <__gedf2+0xcc>
   6c360:	5200042e 	bgeu	r10,r8,6c374 <__gedf2+0xd4>
   6c364:	283fec1e 	bne	r5,zero,6c318 <__alt_data_end+0xfffec318>
   6c368:	003ff406 	br	6c33c <__alt_data_end+0xfffec33c>
   6c36c:	313ff236 	bltu	r6,r4,6c338 <__alt_data_end+0xfffec338>
   6c370:	21bffc36 	bltu	r4,r6,6c364 <__alt_data_end+0xfffec364>
   6c374:	0005883a 	mov	r2,zero
   6c378:	f800283a 	ret

0006c37c <__ledf2>:
   6c37c:	2804d53a 	srli	r2,r5,20
   6c380:	3810d53a 	srli	r8,r7,20
   6c384:	00c00434 	movhi	r3,16
   6c388:	18ffffc4 	addi	r3,r3,-1
   6c38c:	1081ffcc 	andi	r2,r2,2047
   6c390:	0241ffc4 	movi	r9,2047
   6c394:	28d4703a 	and	r10,r5,r3
   6c398:	4201ffcc 	andi	r8,r8,2047
   6c39c:	38c6703a 	and	r3,r7,r3
   6c3a0:	280ad7fa 	srli	r5,r5,31
   6c3a4:	380ed7fa 	srli	r7,r7,31
   6c3a8:	12401f26 	beq	r2,r9,6c428 <__ledf2+0xac>
   6c3ac:	0241ffc4 	movi	r9,2047
   6c3b0:	42401426 	beq	r8,r9,6c404 <__ledf2+0x88>
   6c3b4:	1000091e 	bne	r2,zero,6c3dc <__ledf2+0x60>
   6c3b8:	2296b03a 	or	r11,r4,r10
   6c3bc:	5813003a 	cmpeq	r9,r11,zero
   6c3c0:	29403fcc 	andi	r5,r5,255
   6c3c4:	40000a1e 	bne	r8,zero,6c3f0 <__ledf2+0x74>
   6c3c8:	30d8b03a 	or	r12,r6,r3
   6c3cc:	6000081e 	bne	r12,zero,6c3f0 <__ledf2+0x74>
   6c3d0:	0005883a 	mov	r2,zero
   6c3d4:	5800111e 	bne	r11,zero,6c41c <__ledf2+0xa0>
   6c3d8:	f800283a 	ret
   6c3dc:	29403fcc 	andi	r5,r5,255
   6c3e0:	40000c1e 	bne	r8,zero,6c414 <__ledf2+0x98>
   6c3e4:	30d2b03a 	or	r9,r6,r3
   6c3e8:	48000c26 	beq	r9,zero,6c41c <__ledf2+0xa0>
   6c3ec:	0013883a 	mov	r9,zero
   6c3f0:	39c03fcc 	andi	r7,r7,255
   6c3f4:	48000826 	beq	r9,zero,6c418 <__ledf2+0x9c>
   6c3f8:	38001126 	beq	r7,zero,6c440 <__ledf2+0xc4>
   6c3fc:	00800044 	movi	r2,1
   6c400:	f800283a 	ret
   6c404:	30d2b03a 	or	r9,r6,r3
   6c408:	483fea26 	beq	r9,zero,6c3b4 <__alt_data_end+0xfffec3b4>
   6c40c:	00800084 	movi	r2,2
   6c410:	f800283a 	ret
   6c414:	39c03fcc 	andi	r7,r7,255
   6c418:	39400726 	beq	r7,r5,6c438 <__ledf2+0xbc>
   6c41c:	2800081e 	bne	r5,zero,6c440 <__ledf2+0xc4>
   6c420:	00800044 	movi	r2,1
   6c424:	f800283a 	ret
   6c428:	2292b03a 	or	r9,r4,r10
   6c42c:	483fdf26 	beq	r9,zero,6c3ac <__alt_data_end+0xfffec3ac>
   6c430:	00800084 	movi	r2,2
   6c434:	f800283a 	ret
   6c438:	4080030e 	bge	r8,r2,6c448 <__ledf2+0xcc>
   6c43c:	383fef26 	beq	r7,zero,6c3fc <__alt_data_end+0xfffec3fc>
   6c440:	00bfffc4 	movi	r2,-1
   6c444:	f800283a 	ret
   6c448:	123feb16 	blt	r2,r8,6c3f8 <__alt_data_end+0xfffec3f8>
   6c44c:	1abff336 	bltu	r3,r10,6c41c <__alt_data_end+0xfffec41c>
   6c450:	50c00326 	beq	r10,r3,6c460 <__ledf2+0xe4>
   6c454:	50c0042e 	bgeu	r10,r3,6c468 <__ledf2+0xec>
   6c458:	283fe81e 	bne	r5,zero,6c3fc <__alt_data_end+0xfffec3fc>
   6c45c:	003ff806 	br	6c440 <__alt_data_end+0xfffec440>
   6c460:	313fee36 	bltu	r6,r4,6c41c <__alt_data_end+0xfffec41c>
   6c464:	21bffc36 	bltu	r4,r6,6c458 <__alt_data_end+0xfffec458>
   6c468:	0005883a 	mov	r2,zero
   6c46c:	f800283a 	ret

0006c470 <__muldf3>:
   6c470:	deffee04 	addi	sp,sp,-72
   6c474:	dd000c15 	stw	r20,48(sp)
   6c478:	2828d53a 	srli	r20,r5,20
   6c47c:	ddc00f15 	stw	r23,60(sp)
   6c480:	282ed7fa 	srli	r23,r5,31
   6c484:	dc000815 	stw	r16,32(sp)
   6c488:	04000434 	movhi	r16,16
   6c48c:	dcc00b15 	stw	r19,44(sp)
   6c490:	843fffc4 	addi	r16,r16,-1
   6c494:	dfc01115 	stw	ra,68(sp)
   6c498:	df001015 	stw	fp,64(sp)
   6c49c:	dd800e15 	stw	r22,56(sp)
   6c4a0:	dd400d15 	stw	r21,52(sp)
   6c4a4:	dc800a15 	stw	r18,40(sp)
   6c4a8:	dc400915 	stw	r17,36(sp)
   6c4ac:	a501ffcc 	andi	r20,r20,2047
   6c4b0:	2c20703a 	and	r16,r5,r16
   6c4b4:	b827883a 	mov	r19,r23
   6c4b8:	ba403fcc 	andi	r9,r23,255
   6c4bc:	a0006026 	beq	r20,zero,6c640 <__muldf3+0x1d0>
   6c4c0:	0081ffc4 	movi	r2,2047
   6c4c4:	202d883a 	mov	r22,r4
   6c4c8:	a0803626 	beq	r20,r2,6c5a4 <__muldf3+0x134>
   6c4cc:	84000434 	orhi	r16,r16,16
   6c4d0:	200ad77a 	srli	r5,r4,29
   6c4d4:	800490fa 	slli	r2,r16,3
   6c4d8:	202c90fa 	slli	r22,r4,3
   6c4dc:	a53f0044 	addi	r20,r20,-1023
   6c4e0:	28a0b03a 	or	r16,r5,r2
   6c4e4:	002b883a 	mov	r21,zero
   6c4e8:	000b883a 	mov	r5,zero
   6c4ec:	3804d53a 	srli	r2,r7,20
   6c4f0:	3838d7fa 	srli	fp,r7,31
   6c4f4:	04400434 	movhi	r17,16
   6c4f8:	8c7fffc4 	addi	r17,r17,-1
   6c4fc:	1081ffcc 	andi	r2,r2,2047
   6c500:	3025883a 	mov	r18,r6
   6c504:	3c62703a 	and	r17,r7,r17
   6c508:	e2803fcc 	andi	r10,fp,255
   6c50c:	10006d26 	beq	r2,zero,6c6c4 <__muldf3+0x254>
   6c510:	00c1ffc4 	movi	r3,2047
   6c514:	10c06526 	beq	r2,r3,6c6ac <__muldf3+0x23c>
   6c518:	8c400434 	orhi	r17,r17,16
   6c51c:	300ed77a 	srli	r7,r6,29
   6c520:	880690fa 	slli	r3,r17,3
   6c524:	302490fa 	slli	r18,r6,3
   6c528:	10bf0044 	addi	r2,r2,-1023
   6c52c:	38e2b03a 	or	r17,r7,r3
   6c530:	000f883a 	mov	r7,zero
   6c534:	a087883a 	add	r3,r20,r2
   6c538:	010003c4 	movi	r4,15
   6c53c:	3d44b03a 	or	r2,r7,r21
   6c540:	e5ccf03a 	xor	r6,fp,r23
   6c544:	1a000044 	addi	r8,r3,1
   6c548:	20809b36 	bltu	r4,r2,6c7b8 <__muldf3+0x348>
   6c54c:	100490ba 	slli	r2,r2,2
   6c550:	010001f4 	movhi	r4,7
   6c554:	21315904 	addi	r4,r4,-15004
   6c558:	1105883a 	add	r2,r2,r4
   6c55c:	10800017 	ldw	r2,0(r2)
   6c560:	1000683a 	jmp	r2
   6c564:	0006c7b8 	rdprs	zero,zero,6942
   6c568:	0006c5c4 	movi	zero,6935
   6c56c:	0006c5c4 	movi	zero,6935
   6c570:	0006c5c0 	call	6c5c <__alt_mem_sdram_controller+0x6c5c>
   6c574:	0006c794 	movui	zero,6942
   6c578:	0006c794 	movui	zero,6942
   6c57c:	0006c77c 	xorhi	zero,zero,6941
   6c580:	0006c5c0 	call	6c5c <__alt_mem_sdram_controller+0x6c5c>
   6c584:	0006c794 	movui	zero,6942
   6c588:	0006c77c 	xorhi	zero,zero,6941
   6c58c:	0006c794 	movui	zero,6942
   6c590:	0006c5c0 	call	6c5c <__alt_mem_sdram_controller+0x6c5c>
   6c594:	0006c7a4 	muli	zero,zero,6942
   6c598:	0006c7a4 	muli	zero,zero,6942
   6c59c:	0006c7a4 	muli	zero,zero,6942
   6c5a0:	0006cb04 	movi	zero,6956
   6c5a4:	2404b03a 	or	r2,r4,r16
   6c5a8:	1000711e 	bne	r2,zero,6c770 <__muldf3+0x300>
   6c5ac:	05400204 	movi	r21,8
   6c5b0:	0021883a 	mov	r16,zero
   6c5b4:	002d883a 	mov	r22,zero
   6c5b8:	01400084 	movi	r5,2
   6c5bc:	003fcb06 	br	6c4ec <__alt_data_end+0xfffec4ec>
   6c5c0:	500d883a 	mov	r6,r10
   6c5c4:	00800084 	movi	r2,2
   6c5c8:	38805926 	beq	r7,r2,6c730 <__muldf3+0x2c0>
   6c5cc:	008000c4 	movi	r2,3
   6c5d0:	3881bb26 	beq	r7,r2,6ccc0 <__muldf3+0x850>
   6c5d4:	00800044 	movi	r2,1
   6c5d8:	3881961e 	bne	r7,r2,6cc34 <__muldf3+0x7c4>
   6c5dc:	3027883a 	mov	r19,r6
   6c5e0:	0005883a 	mov	r2,zero
   6c5e4:	0021883a 	mov	r16,zero
   6c5e8:	002d883a 	mov	r22,zero
   6c5ec:	1004953a 	slli	r2,r2,20
   6c5f0:	98c03fcc 	andi	r3,r19,255
   6c5f4:	04400434 	movhi	r17,16
   6c5f8:	8c7fffc4 	addi	r17,r17,-1
   6c5fc:	180697fa 	slli	r3,r3,31
   6c600:	8460703a 	and	r16,r16,r17
   6c604:	80a0b03a 	or	r16,r16,r2
   6c608:	80c6b03a 	or	r3,r16,r3
   6c60c:	b005883a 	mov	r2,r22
   6c610:	dfc01117 	ldw	ra,68(sp)
   6c614:	df001017 	ldw	fp,64(sp)
   6c618:	ddc00f17 	ldw	r23,60(sp)
   6c61c:	dd800e17 	ldw	r22,56(sp)
   6c620:	dd400d17 	ldw	r21,52(sp)
   6c624:	dd000c17 	ldw	r20,48(sp)
   6c628:	dcc00b17 	ldw	r19,44(sp)
   6c62c:	dc800a17 	ldw	r18,40(sp)
   6c630:	dc400917 	ldw	r17,36(sp)
   6c634:	dc000817 	ldw	r16,32(sp)
   6c638:	dec01204 	addi	sp,sp,72
   6c63c:	f800283a 	ret
   6c640:	2404b03a 	or	r2,r4,r16
   6c644:	202b883a 	mov	r21,r4
   6c648:	10004426 	beq	r2,zero,6c75c <__muldf3+0x2ec>
   6c64c:	80015126 	beq	r16,zero,6cb94 <__muldf3+0x724>
   6c650:	8009883a 	mov	r4,r16
   6c654:	d9800715 	stw	r6,28(sp)
   6c658:	d9c00215 	stw	r7,8(sp)
   6c65c:	da400415 	stw	r9,16(sp)
   6c660:	006d7dc0 	call	6d7dc <__clzsi2>
   6c664:	d9800717 	ldw	r6,28(sp)
   6c668:	d9c00217 	ldw	r7,8(sp)
   6c66c:	da400417 	ldw	r9,16(sp)
   6c670:	113ffd44 	addi	r4,r2,-11
   6c674:	00c00704 	movi	r3,28
   6c678:	19014216 	blt	r3,r4,6cb84 <__muldf3+0x714>
   6c67c:	00c00744 	movi	r3,29
   6c680:	15bffe04 	addi	r22,r2,-8
   6c684:	1907c83a 	sub	r3,r3,r4
   6c688:	85a0983a 	sll	r16,r16,r22
   6c68c:	a8c6d83a 	srl	r3,r21,r3
   6c690:	adac983a 	sll	r22,r21,r22
   6c694:	1c20b03a 	or	r16,r3,r16
   6c698:	1080fcc4 	addi	r2,r2,1011
   6c69c:	00a9c83a 	sub	r20,zero,r2
   6c6a0:	002b883a 	mov	r21,zero
   6c6a4:	000b883a 	mov	r5,zero
   6c6a8:	003f9006 	br	6c4ec <__alt_data_end+0xfffec4ec>
   6c6ac:	3446b03a 	or	r3,r6,r17
   6c6b0:	1800281e 	bne	r3,zero,6c754 <__muldf3+0x2e4>
   6c6b4:	0023883a 	mov	r17,zero
   6c6b8:	0025883a 	mov	r18,zero
   6c6bc:	01c00084 	movi	r7,2
   6c6c0:	003f9c06 	br	6c534 <__alt_data_end+0xfffec534>
   6c6c4:	3446b03a 	or	r3,r6,r17
   6c6c8:	18001e26 	beq	r3,zero,6c744 <__muldf3+0x2d4>
   6c6cc:	88012126 	beq	r17,zero,6cb54 <__muldf3+0x6e4>
   6c6d0:	8809883a 	mov	r4,r17
   6c6d4:	d9400215 	stw	r5,8(sp)
   6c6d8:	d9800715 	stw	r6,28(sp)
   6c6dc:	da400415 	stw	r9,16(sp)
   6c6e0:	da800315 	stw	r10,12(sp)
   6c6e4:	006d7dc0 	call	6d7dc <__clzsi2>
   6c6e8:	d9400217 	ldw	r5,8(sp)
   6c6ec:	d9800717 	ldw	r6,28(sp)
   6c6f0:	da400417 	ldw	r9,16(sp)
   6c6f4:	da800317 	ldw	r10,12(sp)
   6c6f8:	113ffd44 	addi	r4,r2,-11
   6c6fc:	00c00704 	movi	r3,28
   6c700:	19011016 	blt	r3,r4,6cb44 <__muldf3+0x6d4>
   6c704:	00c00744 	movi	r3,29
   6c708:	14bffe04 	addi	r18,r2,-8
   6c70c:	1907c83a 	sub	r3,r3,r4
   6c710:	8ca2983a 	sll	r17,r17,r18
   6c714:	30c6d83a 	srl	r3,r6,r3
   6c718:	34a4983a 	sll	r18,r6,r18
   6c71c:	1c62b03a 	or	r17,r3,r17
   6c720:	1080fcc4 	addi	r2,r2,1011
   6c724:	0085c83a 	sub	r2,zero,r2
   6c728:	000f883a 	mov	r7,zero
   6c72c:	003f8106 	br	6c534 <__alt_data_end+0xfffec534>
   6c730:	3027883a 	mov	r19,r6
   6c734:	0081ffc4 	movi	r2,2047
   6c738:	0021883a 	mov	r16,zero
   6c73c:	002d883a 	mov	r22,zero
   6c740:	003faa06 	br	6c5ec <__alt_data_end+0xfffec5ec>
   6c744:	0023883a 	mov	r17,zero
   6c748:	0025883a 	mov	r18,zero
   6c74c:	01c00044 	movi	r7,1
   6c750:	003f7806 	br	6c534 <__alt_data_end+0xfffec534>
   6c754:	01c000c4 	movi	r7,3
   6c758:	003f7606 	br	6c534 <__alt_data_end+0xfffec534>
   6c75c:	05400104 	movi	r21,4
   6c760:	0021883a 	mov	r16,zero
   6c764:	002d883a 	mov	r22,zero
   6c768:	01400044 	movi	r5,1
   6c76c:	003f5f06 	br	6c4ec <__alt_data_end+0xfffec4ec>
   6c770:	05400304 	movi	r21,12
   6c774:	014000c4 	movi	r5,3
   6c778:	003f5c06 	br	6c4ec <__alt_data_end+0xfffec4ec>
   6c77c:	04000434 	movhi	r16,16
   6c780:	0027883a 	mov	r19,zero
   6c784:	843fffc4 	addi	r16,r16,-1
   6c788:	05bfffc4 	movi	r22,-1
   6c78c:	0081ffc4 	movi	r2,2047
   6c790:	003f9606 	br	6c5ec <__alt_data_end+0xfffec5ec>
   6c794:	8023883a 	mov	r17,r16
   6c798:	b025883a 	mov	r18,r22
   6c79c:	280f883a 	mov	r7,r5
   6c7a0:	003f8806 	br	6c5c4 <__alt_data_end+0xfffec5c4>
   6c7a4:	8023883a 	mov	r17,r16
   6c7a8:	b025883a 	mov	r18,r22
   6c7ac:	480d883a 	mov	r6,r9
   6c7b0:	280f883a 	mov	r7,r5
   6c7b4:	003f8306 	br	6c5c4 <__alt_data_end+0xfffec5c4>
   6c7b8:	b026d43a 	srli	r19,r22,16
   6c7bc:	902ed43a 	srli	r23,r18,16
   6c7c0:	b5bfffcc 	andi	r22,r22,65535
   6c7c4:	94bfffcc 	andi	r18,r18,65535
   6c7c8:	b00b883a 	mov	r5,r22
   6c7cc:	9009883a 	mov	r4,r18
   6c7d0:	d8c00515 	stw	r3,20(sp)
   6c7d4:	d9800715 	stw	r6,28(sp)
   6c7d8:	da000615 	stw	r8,24(sp)
   6c7dc:	00609000 	call	60900 <__mulsi3>
   6c7e0:	980b883a 	mov	r5,r19
   6c7e4:	9009883a 	mov	r4,r18
   6c7e8:	1029883a 	mov	r20,r2
   6c7ec:	00609000 	call	60900 <__mulsi3>
   6c7f0:	b80b883a 	mov	r5,r23
   6c7f4:	9809883a 	mov	r4,r19
   6c7f8:	102b883a 	mov	r21,r2
   6c7fc:	00609000 	call	60900 <__mulsi3>
   6c800:	b809883a 	mov	r4,r23
   6c804:	b00b883a 	mov	r5,r22
   6c808:	1039883a 	mov	fp,r2
   6c80c:	00609000 	call	60900 <__mulsi3>
   6c810:	a008d43a 	srli	r4,r20,16
   6c814:	1545883a 	add	r2,r2,r21
   6c818:	d8c00517 	ldw	r3,20(sp)
   6c81c:	2085883a 	add	r2,r4,r2
   6c820:	d9800717 	ldw	r6,28(sp)
   6c824:	da000617 	ldw	r8,24(sp)
   6c828:	1540022e 	bgeu	r2,r21,6c834 <__muldf3+0x3c4>
   6c82c:	01000074 	movhi	r4,1
   6c830:	e139883a 	add	fp,fp,r4
   6c834:	100e943a 	slli	r7,r2,16
   6c838:	1004d43a 	srli	r2,r2,16
   6c83c:	882ad43a 	srli	r21,r17,16
   6c840:	a53fffcc 	andi	r20,r20,65535
   6c844:	8c7fffcc 	andi	r17,r17,65535
   6c848:	3d29883a 	add	r20,r7,r20
   6c84c:	b00b883a 	mov	r5,r22
   6c850:	8809883a 	mov	r4,r17
   6c854:	d8c00515 	stw	r3,20(sp)
   6c858:	d9800715 	stw	r6,28(sp)
   6c85c:	da000615 	stw	r8,24(sp)
   6c860:	dd000115 	stw	r20,4(sp)
   6c864:	d8800015 	stw	r2,0(sp)
   6c868:	00609000 	call	60900 <__mulsi3>
   6c86c:	980b883a 	mov	r5,r19
   6c870:	8809883a 	mov	r4,r17
   6c874:	d8800215 	stw	r2,8(sp)
   6c878:	00609000 	call	60900 <__mulsi3>
   6c87c:	9809883a 	mov	r4,r19
   6c880:	a80b883a 	mov	r5,r21
   6c884:	1029883a 	mov	r20,r2
   6c888:	00609000 	call	60900 <__mulsi3>
   6c88c:	b00b883a 	mov	r5,r22
   6c890:	a809883a 	mov	r4,r21
   6c894:	d8800415 	stw	r2,16(sp)
   6c898:	00609000 	call	60900 <__mulsi3>
   6c89c:	d9c00217 	ldw	r7,8(sp)
   6c8a0:	1505883a 	add	r2,r2,r20
   6c8a4:	d8c00517 	ldw	r3,20(sp)
   6c8a8:	3826d43a 	srli	r19,r7,16
   6c8ac:	d9800717 	ldw	r6,28(sp)
   6c8b0:	da000617 	ldw	r8,24(sp)
   6c8b4:	9885883a 	add	r2,r19,r2
   6c8b8:	da400417 	ldw	r9,16(sp)
   6c8bc:	1500022e 	bgeu	r2,r20,6c8c8 <__muldf3+0x458>
   6c8c0:	01000074 	movhi	r4,1
   6c8c4:	4913883a 	add	r9,r9,r4
   6c8c8:	1028d43a 	srli	r20,r2,16
   6c8cc:	1004943a 	slli	r2,r2,16
   6c8d0:	802cd43a 	srli	r22,r16,16
   6c8d4:	843fffcc 	andi	r16,r16,65535
   6c8d8:	3cffffcc 	andi	r19,r7,65535
   6c8dc:	9009883a 	mov	r4,r18
   6c8e0:	800b883a 	mov	r5,r16
   6c8e4:	a269883a 	add	r20,r20,r9
   6c8e8:	d8c00515 	stw	r3,20(sp)
   6c8ec:	d9800715 	stw	r6,28(sp)
   6c8f0:	da000615 	stw	r8,24(sp)
   6c8f4:	14e7883a 	add	r19,r2,r19
   6c8f8:	00609000 	call	60900 <__mulsi3>
   6c8fc:	9009883a 	mov	r4,r18
   6c900:	b00b883a 	mov	r5,r22
   6c904:	d8800315 	stw	r2,12(sp)
   6c908:	00609000 	call	60900 <__mulsi3>
   6c90c:	b809883a 	mov	r4,r23
   6c910:	b00b883a 	mov	r5,r22
   6c914:	d8800215 	stw	r2,8(sp)
   6c918:	00609000 	call	60900 <__mulsi3>
   6c91c:	b80b883a 	mov	r5,r23
   6c920:	8009883a 	mov	r4,r16
   6c924:	d8800415 	stw	r2,16(sp)
   6c928:	00609000 	call	60900 <__mulsi3>
   6c92c:	da800317 	ldw	r10,12(sp)
   6c930:	d9c00217 	ldw	r7,8(sp)
   6c934:	d9000017 	ldw	r4,0(sp)
   6c938:	502ed43a 	srli	r23,r10,16
   6c93c:	11c5883a 	add	r2,r2,r7
   6c940:	24e5883a 	add	r18,r4,r19
   6c944:	b885883a 	add	r2,r23,r2
   6c948:	d8c00517 	ldw	r3,20(sp)
   6c94c:	d9800717 	ldw	r6,28(sp)
   6c950:	da000617 	ldw	r8,24(sp)
   6c954:	da400417 	ldw	r9,16(sp)
   6c958:	11c0022e 	bgeu	r2,r7,6c964 <__muldf3+0x4f4>
   6c95c:	01000074 	movhi	r4,1
   6c960:	4913883a 	add	r9,r9,r4
   6c964:	100ed43a 	srli	r7,r2,16
   6c968:	1004943a 	slli	r2,r2,16
   6c96c:	55ffffcc 	andi	r23,r10,65535
   6c970:	3a53883a 	add	r9,r7,r9
   6c974:	8809883a 	mov	r4,r17
   6c978:	800b883a 	mov	r5,r16
   6c97c:	d8c00515 	stw	r3,20(sp)
   6c980:	d9800715 	stw	r6,28(sp)
   6c984:	da000615 	stw	r8,24(sp)
   6c988:	da400415 	stw	r9,16(sp)
   6c98c:	15ef883a 	add	r23,r2,r23
   6c990:	00609000 	call	60900 <__mulsi3>
   6c994:	8809883a 	mov	r4,r17
   6c998:	b00b883a 	mov	r5,r22
   6c99c:	d8800215 	stw	r2,8(sp)
   6c9a0:	00609000 	call	60900 <__mulsi3>
   6c9a4:	b00b883a 	mov	r5,r22
   6c9a8:	a809883a 	mov	r4,r21
   6c9ac:	d8800315 	stw	r2,12(sp)
   6c9b0:	00609000 	call	60900 <__mulsi3>
   6c9b4:	8009883a 	mov	r4,r16
   6c9b8:	a80b883a 	mov	r5,r21
   6c9bc:	1023883a 	mov	r17,r2
   6c9c0:	00609000 	call	60900 <__mulsi3>
   6c9c4:	d9c00217 	ldw	r7,8(sp)
   6c9c8:	da800317 	ldw	r10,12(sp)
   6c9cc:	d8c00517 	ldw	r3,20(sp)
   6c9d0:	3808d43a 	srli	r4,r7,16
   6c9d4:	1285883a 	add	r2,r2,r10
   6c9d8:	d9800717 	ldw	r6,28(sp)
   6c9dc:	2085883a 	add	r2,r4,r2
   6c9e0:	da000617 	ldw	r8,24(sp)
   6c9e4:	da400417 	ldw	r9,16(sp)
   6c9e8:	1280022e 	bgeu	r2,r10,6c9f4 <__muldf3+0x584>
   6c9ec:	01000074 	movhi	r4,1
   6c9f0:	8923883a 	add	r17,r17,r4
   6c9f4:	1008943a 	slli	r4,r2,16
   6c9f8:	39ffffcc 	andi	r7,r7,65535
   6c9fc:	e4b9883a 	add	fp,fp,r18
   6ca00:	21cf883a 	add	r7,r4,r7
   6ca04:	e4e7803a 	cmpltu	r19,fp,r19
   6ca08:	3d0f883a 	add	r7,r7,r20
   6ca0c:	bf39883a 	add	fp,r23,fp
   6ca10:	99c9883a 	add	r4,r19,r7
   6ca14:	e5ef803a 	cmpltu	r23,fp,r23
   6ca18:	490b883a 	add	r5,r9,r4
   6ca1c:	1004d43a 	srli	r2,r2,16
   6ca20:	b965883a 	add	r18,r23,r5
   6ca24:	24c9803a 	cmpltu	r4,r4,r19
   6ca28:	3d29803a 	cmpltu	r20,r7,r20
   6ca2c:	a128b03a 	or	r20,r20,r4
   6ca30:	95ef803a 	cmpltu	r23,r18,r23
   6ca34:	2a53803a 	cmpltu	r9,r5,r9
   6ca38:	a0a9883a 	add	r20,r20,r2
   6ca3c:	4deeb03a 	or	r23,r9,r23
   6ca40:	a5ef883a 	add	r23,r20,r23
   6ca44:	bc63883a 	add	r17,r23,r17
   6ca48:	e004927a 	slli	r2,fp,9
   6ca4c:	d9000117 	ldw	r4,4(sp)
   6ca50:	882e927a 	slli	r23,r17,9
   6ca54:	9022d5fa 	srli	r17,r18,23
   6ca58:	e038d5fa 	srli	fp,fp,23
   6ca5c:	1104b03a 	or	r2,r2,r4
   6ca60:	9024927a 	slli	r18,r18,9
   6ca64:	1004c03a 	cmpne	r2,r2,zero
   6ca68:	bc62b03a 	or	r17,r23,r17
   6ca6c:	1738b03a 	or	fp,r2,fp
   6ca70:	8880402c 	andhi	r2,r17,256
   6ca74:	e4a4b03a 	or	r18,fp,r18
   6ca78:	10000726 	beq	r2,zero,6ca98 <__muldf3+0x628>
   6ca7c:	9006d07a 	srli	r3,r18,1
   6ca80:	880497fa 	slli	r2,r17,31
   6ca84:	9480004c 	andi	r18,r18,1
   6ca88:	8822d07a 	srli	r17,r17,1
   6ca8c:	1ca4b03a 	or	r18,r3,r18
   6ca90:	14a4b03a 	or	r18,r2,r18
   6ca94:	4007883a 	mov	r3,r8
   6ca98:	1880ffc4 	addi	r2,r3,1023
   6ca9c:	0080460e 	bge	zero,r2,6cbb8 <__muldf3+0x748>
   6caa0:	910001cc 	andi	r4,r18,7
   6caa4:	20000726 	beq	r4,zero,6cac4 <__muldf3+0x654>
   6caa8:	910003cc 	andi	r4,r18,15
   6caac:	01400104 	movi	r5,4
   6cab0:	21400426 	beq	r4,r5,6cac4 <__muldf3+0x654>
   6cab4:	9149883a 	add	r4,r18,r5
   6cab8:	24a5803a 	cmpltu	r18,r4,r18
   6cabc:	8ca3883a 	add	r17,r17,r18
   6cac0:	2025883a 	mov	r18,r4
   6cac4:	8900402c 	andhi	r4,r17,256
   6cac8:	20000426 	beq	r4,zero,6cadc <__muldf3+0x66c>
   6cacc:	18810004 	addi	r2,r3,1024
   6cad0:	00ffc034 	movhi	r3,65280
   6cad4:	18ffffc4 	addi	r3,r3,-1
   6cad8:	88e2703a 	and	r17,r17,r3
   6cadc:	00c1ff84 	movi	r3,2046
   6cae0:	18bf1316 	blt	r3,r2,6c730 <__alt_data_end+0xfffec730>
   6cae4:	882c977a 	slli	r22,r17,29
   6cae8:	9024d0fa 	srli	r18,r18,3
   6caec:	8822927a 	slli	r17,r17,9
   6caf0:	1081ffcc 	andi	r2,r2,2047
   6caf4:	b4acb03a 	or	r22,r22,r18
   6caf8:	8820d33a 	srli	r16,r17,12
   6cafc:	3027883a 	mov	r19,r6
   6cb00:	003eba06 	br	6c5ec <__alt_data_end+0xfffec5ec>
   6cb04:	8080022c 	andhi	r2,r16,8
   6cb08:	10000926 	beq	r2,zero,6cb30 <__muldf3+0x6c0>
   6cb0c:	8880022c 	andhi	r2,r17,8
   6cb10:	1000071e 	bne	r2,zero,6cb30 <__muldf3+0x6c0>
   6cb14:	00800434 	movhi	r2,16
   6cb18:	8c000234 	orhi	r16,r17,8
   6cb1c:	10bfffc4 	addi	r2,r2,-1
   6cb20:	e027883a 	mov	r19,fp
   6cb24:	80a0703a 	and	r16,r16,r2
   6cb28:	902d883a 	mov	r22,r18
   6cb2c:	003f1706 	br	6c78c <__alt_data_end+0xfffec78c>
   6cb30:	00800434 	movhi	r2,16
   6cb34:	84000234 	orhi	r16,r16,8
   6cb38:	10bfffc4 	addi	r2,r2,-1
   6cb3c:	80a0703a 	and	r16,r16,r2
   6cb40:	003f1206 	br	6c78c <__alt_data_end+0xfffec78c>
   6cb44:	147ff604 	addi	r17,r2,-40
   6cb48:	3462983a 	sll	r17,r6,r17
   6cb4c:	0025883a 	mov	r18,zero
   6cb50:	003ef306 	br	6c720 <__alt_data_end+0xfffec720>
   6cb54:	3009883a 	mov	r4,r6
   6cb58:	d9400215 	stw	r5,8(sp)
   6cb5c:	d9800715 	stw	r6,28(sp)
   6cb60:	da400415 	stw	r9,16(sp)
   6cb64:	da800315 	stw	r10,12(sp)
   6cb68:	006d7dc0 	call	6d7dc <__clzsi2>
   6cb6c:	10800804 	addi	r2,r2,32
   6cb70:	da800317 	ldw	r10,12(sp)
   6cb74:	da400417 	ldw	r9,16(sp)
   6cb78:	d9800717 	ldw	r6,28(sp)
   6cb7c:	d9400217 	ldw	r5,8(sp)
   6cb80:	003edd06 	br	6c6f8 <__alt_data_end+0xfffec6f8>
   6cb84:	143ff604 	addi	r16,r2,-40
   6cb88:	ac20983a 	sll	r16,r21,r16
   6cb8c:	002d883a 	mov	r22,zero
   6cb90:	003ec106 	br	6c698 <__alt_data_end+0xfffec698>
   6cb94:	d9800715 	stw	r6,28(sp)
   6cb98:	d9c00215 	stw	r7,8(sp)
   6cb9c:	da400415 	stw	r9,16(sp)
   6cba0:	006d7dc0 	call	6d7dc <__clzsi2>
   6cba4:	10800804 	addi	r2,r2,32
   6cba8:	da400417 	ldw	r9,16(sp)
   6cbac:	d9c00217 	ldw	r7,8(sp)
   6cbb0:	d9800717 	ldw	r6,28(sp)
   6cbb4:	003eae06 	br	6c670 <__alt_data_end+0xfffec670>
   6cbb8:	00c00044 	movi	r3,1
   6cbbc:	1887c83a 	sub	r3,r3,r2
   6cbc0:	01000e04 	movi	r4,56
   6cbc4:	20fe8516 	blt	r4,r3,6c5dc <__alt_data_end+0xfffec5dc>
   6cbc8:	010007c4 	movi	r4,31
   6cbcc:	20c01b16 	blt	r4,r3,6cc3c <__muldf3+0x7cc>
   6cbd0:	00800804 	movi	r2,32
   6cbd4:	10c5c83a 	sub	r2,r2,r3
   6cbd8:	888a983a 	sll	r5,r17,r2
   6cbdc:	90c8d83a 	srl	r4,r18,r3
   6cbe0:	9084983a 	sll	r2,r18,r2
   6cbe4:	88e2d83a 	srl	r17,r17,r3
   6cbe8:	2906b03a 	or	r3,r5,r4
   6cbec:	1004c03a 	cmpne	r2,r2,zero
   6cbf0:	1886b03a 	or	r3,r3,r2
   6cbf4:	188001cc 	andi	r2,r3,7
   6cbf8:	10000726 	beq	r2,zero,6cc18 <__muldf3+0x7a8>
   6cbfc:	188003cc 	andi	r2,r3,15
   6cc00:	01000104 	movi	r4,4
   6cc04:	11000426 	beq	r2,r4,6cc18 <__muldf3+0x7a8>
   6cc08:	1805883a 	mov	r2,r3
   6cc0c:	10c00104 	addi	r3,r2,4
   6cc10:	1885803a 	cmpltu	r2,r3,r2
   6cc14:	88a3883a 	add	r17,r17,r2
   6cc18:	8880202c 	andhi	r2,r17,128
   6cc1c:	10001c26 	beq	r2,zero,6cc90 <__muldf3+0x820>
   6cc20:	3027883a 	mov	r19,r6
   6cc24:	00800044 	movi	r2,1
   6cc28:	0021883a 	mov	r16,zero
   6cc2c:	002d883a 	mov	r22,zero
   6cc30:	003e6e06 	br	6c5ec <__alt_data_end+0xfffec5ec>
   6cc34:	4007883a 	mov	r3,r8
   6cc38:	003f9706 	br	6ca98 <__alt_data_end+0xfffeca98>
   6cc3c:	017ff844 	movi	r5,-31
   6cc40:	2885c83a 	sub	r2,r5,r2
   6cc44:	888ad83a 	srl	r5,r17,r2
   6cc48:	00800804 	movi	r2,32
   6cc4c:	18801a26 	beq	r3,r2,6ccb8 <__muldf3+0x848>
   6cc50:	01001004 	movi	r4,64
   6cc54:	20c7c83a 	sub	r3,r4,r3
   6cc58:	88e2983a 	sll	r17,r17,r3
   6cc5c:	8ca4b03a 	or	r18,r17,r18
   6cc60:	9004c03a 	cmpne	r2,r18,zero
   6cc64:	2884b03a 	or	r2,r5,r2
   6cc68:	144001cc 	andi	r17,r2,7
   6cc6c:	88000d1e 	bne	r17,zero,6cca4 <__muldf3+0x834>
   6cc70:	0021883a 	mov	r16,zero
   6cc74:	102cd0fa 	srli	r22,r2,3
   6cc78:	3027883a 	mov	r19,r6
   6cc7c:	0005883a 	mov	r2,zero
   6cc80:	b46cb03a 	or	r22,r22,r17
   6cc84:	003e5906 	br	6c5ec <__alt_data_end+0xfffec5ec>
   6cc88:	1007883a 	mov	r3,r2
   6cc8c:	0023883a 	mov	r17,zero
   6cc90:	8820927a 	slli	r16,r17,9
   6cc94:	1805883a 	mov	r2,r3
   6cc98:	8822977a 	slli	r17,r17,29
   6cc9c:	8020d33a 	srli	r16,r16,12
   6cca0:	003ff406 	br	6cc74 <__alt_data_end+0xfffecc74>
   6cca4:	10c003cc 	andi	r3,r2,15
   6cca8:	01000104 	movi	r4,4
   6ccac:	193ff626 	beq	r3,r4,6cc88 <__alt_data_end+0xfffecc88>
   6ccb0:	0023883a 	mov	r17,zero
   6ccb4:	003fd506 	br	6cc0c <__alt_data_end+0xfffecc0c>
   6ccb8:	0023883a 	mov	r17,zero
   6ccbc:	003fe706 	br	6cc5c <__alt_data_end+0xfffecc5c>
   6ccc0:	00800434 	movhi	r2,16
   6ccc4:	8c000234 	orhi	r16,r17,8
   6ccc8:	10bfffc4 	addi	r2,r2,-1
   6cccc:	3027883a 	mov	r19,r6
   6ccd0:	80a0703a 	and	r16,r16,r2
   6ccd4:	902d883a 	mov	r22,r18
   6ccd8:	003eac06 	br	6c78c <__alt_data_end+0xfffec78c>

0006ccdc <__subdf3>:
   6ccdc:	02000434 	movhi	r8,16
   6cce0:	423fffc4 	addi	r8,r8,-1
   6cce4:	defffb04 	addi	sp,sp,-20
   6cce8:	2a14703a 	and	r10,r5,r8
   6ccec:	3812d53a 	srli	r9,r7,20
   6ccf0:	3a10703a 	and	r8,r7,r8
   6ccf4:	2006d77a 	srli	r3,r4,29
   6ccf8:	3004d77a 	srli	r2,r6,29
   6ccfc:	dc000015 	stw	r16,0(sp)
   6cd00:	501490fa 	slli	r10,r10,3
   6cd04:	2820d53a 	srli	r16,r5,20
   6cd08:	401090fa 	slli	r8,r8,3
   6cd0c:	dc800215 	stw	r18,8(sp)
   6cd10:	dc400115 	stw	r17,4(sp)
   6cd14:	dfc00415 	stw	ra,16(sp)
   6cd18:	202290fa 	slli	r17,r4,3
   6cd1c:	dcc00315 	stw	r19,12(sp)
   6cd20:	4a41ffcc 	andi	r9,r9,2047
   6cd24:	0101ffc4 	movi	r4,2047
   6cd28:	2824d7fa 	srli	r18,r5,31
   6cd2c:	8401ffcc 	andi	r16,r16,2047
   6cd30:	50c6b03a 	or	r3,r10,r3
   6cd34:	380ed7fa 	srli	r7,r7,31
   6cd38:	408ab03a 	or	r5,r8,r2
   6cd3c:	300c90fa 	slli	r6,r6,3
   6cd40:	49009626 	beq	r9,r4,6cf9c <__subdf3+0x2c0>
   6cd44:	39c0005c 	xori	r7,r7,1
   6cd48:	8245c83a 	sub	r2,r16,r9
   6cd4c:	3c807426 	beq	r7,r18,6cf20 <__subdf3+0x244>
   6cd50:	0080af0e 	bge	zero,r2,6d010 <__subdf3+0x334>
   6cd54:	48002a1e 	bne	r9,zero,6ce00 <__subdf3+0x124>
   6cd58:	2988b03a 	or	r4,r5,r6
   6cd5c:	20009a1e 	bne	r4,zero,6cfc8 <__subdf3+0x2ec>
   6cd60:	888001cc 	andi	r2,r17,7
   6cd64:	10000726 	beq	r2,zero,6cd84 <__subdf3+0xa8>
   6cd68:	888003cc 	andi	r2,r17,15
   6cd6c:	01000104 	movi	r4,4
   6cd70:	11000426 	beq	r2,r4,6cd84 <__subdf3+0xa8>
   6cd74:	890b883a 	add	r5,r17,r4
   6cd78:	2c63803a 	cmpltu	r17,r5,r17
   6cd7c:	1c47883a 	add	r3,r3,r17
   6cd80:	2823883a 	mov	r17,r5
   6cd84:	1880202c 	andhi	r2,r3,128
   6cd88:	10005926 	beq	r2,zero,6cef0 <__subdf3+0x214>
   6cd8c:	84000044 	addi	r16,r16,1
   6cd90:	0081ffc4 	movi	r2,2047
   6cd94:	8080be26 	beq	r16,r2,6d090 <__subdf3+0x3b4>
   6cd98:	017fe034 	movhi	r5,65408
   6cd9c:	297fffc4 	addi	r5,r5,-1
   6cda0:	1946703a 	and	r3,r3,r5
   6cda4:	1804977a 	slli	r2,r3,29
   6cda8:	1806927a 	slli	r3,r3,9
   6cdac:	8822d0fa 	srli	r17,r17,3
   6cdb0:	8401ffcc 	andi	r16,r16,2047
   6cdb4:	180ad33a 	srli	r5,r3,12
   6cdb8:	9100004c 	andi	r4,r18,1
   6cdbc:	1444b03a 	or	r2,r2,r17
   6cdc0:	80c1ffcc 	andi	r3,r16,2047
   6cdc4:	1820953a 	slli	r16,r3,20
   6cdc8:	20c03fcc 	andi	r3,r4,255
   6cdcc:	180897fa 	slli	r4,r3,31
   6cdd0:	00c00434 	movhi	r3,16
   6cdd4:	18ffffc4 	addi	r3,r3,-1
   6cdd8:	28c6703a 	and	r3,r5,r3
   6cddc:	1c06b03a 	or	r3,r3,r16
   6cde0:	1906b03a 	or	r3,r3,r4
   6cde4:	dfc00417 	ldw	ra,16(sp)
   6cde8:	dcc00317 	ldw	r19,12(sp)
   6cdec:	dc800217 	ldw	r18,8(sp)
   6cdf0:	dc400117 	ldw	r17,4(sp)
   6cdf4:	dc000017 	ldw	r16,0(sp)
   6cdf8:	dec00504 	addi	sp,sp,20
   6cdfc:	f800283a 	ret
   6ce00:	0101ffc4 	movi	r4,2047
   6ce04:	813fd626 	beq	r16,r4,6cd60 <__alt_data_end+0xfffecd60>
   6ce08:	29402034 	orhi	r5,r5,128
   6ce0c:	01000e04 	movi	r4,56
   6ce10:	2080a316 	blt	r4,r2,6d0a0 <__subdf3+0x3c4>
   6ce14:	010007c4 	movi	r4,31
   6ce18:	2080c616 	blt	r4,r2,6d134 <__subdf3+0x458>
   6ce1c:	01000804 	movi	r4,32
   6ce20:	2089c83a 	sub	r4,r4,r2
   6ce24:	2910983a 	sll	r8,r5,r4
   6ce28:	308ed83a 	srl	r7,r6,r2
   6ce2c:	3108983a 	sll	r4,r6,r4
   6ce30:	2884d83a 	srl	r2,r5,r2
   6ce34:	41ccb03a 	or	r6,r8,r7
   6ce38:	2008c03a 	cmpne	r4,r4,zero
   6ce3c:	310cb03a 	or	r6,r6,r4
   6ce40:	898dc83a 	sub	r6,r17,r6
   6ce44:	89a3803a 	cmpltu	r17,r17,r6
   6ce48:	1887c83a 	sub	r3,r3,r2
   6ce4c:	1c47c83a 	sub	r3,r3,r17
   6ce50:	3023883a 	mov	r17,r6
   6ce54:	1880202c 	andhi	r2,r3,128
   6ce58:	10002326 	beq	r2,zero,6cee8 <__subdf3+0x20c>
   6ce5c:	04c02034 	movhi	r19,128
   6ce60:	9cffffc4 	addi	r19,r19,-1
   6ce64:	1ce6703a 	and	r19,r3,r19
   6ce68:	98007a26 	beq	r19,zero,6d054 <__subdf3+0x378>
   6ce6c:	9809883a 	mov	r4,r19
   6ce70:	006d7dc0 	call	6d7dc <__clzsi2>
   6ce74:	113ffe04 	addi	r4,r2,-8
   6ce78:	00c007c4 	movi	r3,31
   6ce7c:	19007b16 	blt	r3,r4,6d06c <__subdf3+0x390>
   6ce80:	00800804 	movi	r2,32
   6ce84:	1105c83a 	sub	r2,r2,r4
   6ce88:	8884d83a 	srl	r2,r17,r2
   6ce8c:	9906983a 	sll	r3,r19,r4
   6ce90:	8922983a 	sll	r17,r17,r4
   6ce94:	10c4b03a 	or	r2,r2,r3
   6ce98:	24007816 	blt	r4,r16,6d07c <__subdf3+0x3a0>
   6ce9c:	2421c83a 	sub	r16,r4,r16
   6cea0:	80c00044 	addi	r3,r16,1
   6cea4:	010007c4 	movi	r4,31
   6cea8:	20c09516 	blt	r4,r3,6d100 <__subdf3+0x424>
   6ceac:	01400804 	movi	r5,32
   6ceb0:	28cbc83a 	sub	r5,r5,r3
   6ceb4:	88c8d83a 	srl	r4,r17,r3
   6ceb8:	8962983a 	sll	r17,r17,r5
   6cebc:	114a983a 	sll	r5,r2,r5
   6cec0:	10c6d83a 	srl	r3,r2,r3
   6cec4:	8804c03a 	cmpne	r2,r17,zero
   6cec8:	290ab03a 	or	r5,r5,r4
   6cecc:	28a2b03a 	or	r17,r5,r2
   6ced0:	0021883a 	mov	r16,zero
   6ced4:	003fa206 	br	6cd60 <__alt_data_end+0xfffecd60>
   6ced8:	2090b03a 	or	r8,r4,r2
   6cedc:	40018e26 	beq	r8,zero,6d518 <__subdf3+0x83c>
   6cee0:	1007883a 	mov	r3,r2
   6cee4:	2023883a 	mov	r17,r4
   6cee8:	888001cc 	andi	r2,r17,7
   6ceec:	103f9e1e 	bne	r2,zero,6cd68 <__alt_data_end+0xfffecd68>
   6cef0:	1804977a 	slli	r2,r3,29
   6cef4:	8822d0fa 	srli	r17,r17,3
   6cef8:	1810d0fa 	srli	r8,r3,3
   6cefc:	9100004c 	andi	r4,r18,1
   6cf00:	1444b03a 	or	r2,r2,r17
   6cf04:	00c1ffc4 	movi	r3,2047
   6cf08:	80c02826 	beq	r16,r3,6cfac <__subdf3+0x2d0>
   6cf0c:	01400434 	movhi	r5,16
   6cf10:	297fffc4 	addi	r5,r5,-1
   6cf14:	80e0703a 	and	r16,r16,r3
   6cf18:	414a703a 	and	r5,r8,r5
   6cf1c:	003fa806 	br	6cdc0 <__alt_data_end+0xfffecdc0>
   6cf20:	0080630e 	bge	zero,r2,6d0b0 <__subdf3+0x3d4>
   6cf24:	48003026 	beq	r9,zero,6cfe8 <__subdf3+0x30c>
   6cf28:	0101ffc4 	movi	r4,2047
   6cf2c:	813f8c26 	beq	r16,r4,6cd60 <__alt_data_end+0xfffecd60>
   6cf30:	29402034 	orhi	r5,r5,128
   6cf34:	01000e04 	movi	r4,56
   6cf38:	2080a90e 	bge	r4,r2,6d1e0 <__subdf3+0x504>
   6cf3c:	298cb03a 	or	r6,r5,r6
   6cf40:	3012c03a 	cmpne	r9,r6,zero
   6cf44:	0005883a 	mov	r2,zero
   6cf48:	4c53883a 	add	r9,r9,r17
   6cf4c:	4c63803a 	cmpltu	r17,r9,r17
   6cf50:	10c7883a 	add	r3,r2,r3
   6cf54:	88c7883a 	add	r3,r17,r3
   6cf58:	4823883a 	mov	r17,r9
   6cf5c:	1880202c 	andhi	r2,r3,128
   6cf60:	1000d026 	beq	r2,zero,6d2a4 <__subdf3+0x5c8>
   6cf64:	84000044 	addi	r16,r16,1
   6cf68:	0081ffc4 	movi	r2,2047
   6cf6c:	8080fe26 	beq	r16,r2,6d368 <__subdf3+0x68c>
   6cf70:	00bfe034 	movhi	r2,65408
   6cf74:	10bfffc4 	addi	r2,r2,-1
   6cf78:	1886703a 	and	r3,r3,r2
   6cf7c:	880ad07a 	srli	r5,r17,1
   6cf80:	180497fa 	slli	r2,r3,31
   6cf84:	8900004c 	andi	r4,r17,1
   6cf88:	2922b03a 	or	r17,r5,r4
   6cf8c:	1806d07a 	srli	r3,r3,1
   6cf90:	1462b03a 	or	r17,r2,r17
   6cf94:	3825883a 	mov	r18,r7
   6cf98:	003f7106 	br	6cd60 <__alt_data_end+0xfffecd60>
   6cf9c:	2984b03a 	or	r2,r5,r6
   6cfa0:	103f6826 	beq	r2,zero,6cd44 <__alt_data_end+0xfffecd44>
   6cfa4:	39c03fcc 	andi	r7,r7,255
   6cfa8:	003f6706 	br	6cd48 <__alt_data_end+0xfffecd48>
   6cfac:	4086b03a 	or	r3,r8,r2
   6cfb0:	18015226 	beq	r3,zero,6d4fc <__subdf3+0x820>
   6cfb4:	00c00434 	movhi	r3,16
   6cfb8:	41400234 	orhi	r5,r8,8
   6cfbc:	18ffffc4 	addi	r3,r3,-1
   6cfc0:	28ca703a 	and	r5,r5,r3
   6cfc4:	003f7e06 	br	6cdc0 <__alt_data_end+0xfffecdc0>
   6cfc8:	10bfffc4 	addi	r2,r2,-1
   6cfcc:	1000491e 	bne	r2,zero,6d0f4 <__subdf3+0x418>
   6cfd0:	898fc83a 	sub	r7,r17,r6
   6cfd4:	89e3803a 	cmpltu	r17,r17,r7
   6cfd8:	1947c83a 	sub	r3,r3,r5
   6cfdc:	1c47c83a 	sub	r3,r3,r17
   6cfe0:	3823883a 	mov	r17,r7
   6cfe4:	003f9b06 	br	6ce54 <__alt_data_end+0xfffece54>
   6cfe8:	2988b03a 	or	r4,r5,r6
   6cfec:	203f5c26 	beq	r4,zero,6cd60 <__alt_data_end+0xfffecd60>
   6cff0:	10bfffc4 	addi	r2,r2,-1
   6cff4:	1000931e 	bne	r2,zero,6d244 <__subdf3+0x568>
   6cff8:	898d883a 	add	r6,r17,r6
   6cffc:	3463803a 	cmpltu	r17,r6,r17
   6d000:	1947883a 	add	r3,r3,r5
   6d004:	88c7883a 	add	r3,r17,r3
   6d008:	3023883a 	mov	r17,r6
   6d00c:	003fd306 	br	6cf5c <__alt_data_end+0xfffecf5c>
   6d010:	1000541e 	bne	r2,zero,6d164 <__subdf3+0x488>
   6d014:	80800044 	addi	r2,r16,1
   6d018:	1081ffcc 	andi	r2,r2,2047
   6d01c:	01000044 	movi	r4,1
   6d020:	2080a20e 	bge	r4,r2,6d2ac <__subdf3+0x5d0>
   6d024:	8989c83a 	sub	r4,r17,r6
   6d028:	8905803a 	cmpltu	r2,r17,r4
   6d02c:	1967c83a 	sub	r19,r3,r5
   6d030:	98a7c83a 	sub	r19,r19,r2
   6d034:	9880202c 	andhi	r2,r19,128
   6d038:	10006326 	beq	r2,zero,6d1c8 <__subdf3+0x4ec>
   6d03c:	3463c83a 	sub	r17,r6,r17
   6d040:	28c7c83a 	sub	r3,r5,r3
   6d044:	344d803a 	cmpltu	r6,r6,r17
   6d048:	19a7c83a 	sub	r19,r3,r6
   6d04c:	3825883a 	mov	r18,r7
   6d050:	983f861e 	bne	r19,zero,6ce6c <__alt_data_end+0xfffece6c>
   6d054:	8809883a 	mov	r4,r17
   6d058:	006d7dc0 	call	6d7dc <__clzsi2>
   6d05c:	10800804 	addi	r2,r2,32
   6d060:	113ffe04 	addi	r4,r2,-8
   6d064:	00c007c4 	movi	r3,31
   6d068:	193f850e 	bge	r3,r4,6ce80 <__alt_data_end+0xfffece80>
   6d06c:	10bff604 	addi	r2,r2,-40
   6d070:	8884983a 	sll	r2,r17,r2
   6d074:	0023883a 	mov	r17,zero
   6d078:	243f880e 	bge	r4,r16,6ce9c <__alt_data_end+0xfffece9c>
   6d07c:	00ffe034 	movhi	r3,65408
   6d080:	18ffffc4 	addi	r3,r3,-1
   6d084:	8121c83a 	sub	r16,r16,r4
   6d088:	10c6703a 	and	r3,r2,r3
   6d08c:	003f3406 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d090:	9100004c 	andi	r4,r18,1
   6d094:	000b883a 	mov	r5,zero
   6d098:	0005883a 	mov	r2,zero
   6d09c:	003f4806 	br	6cdc0 <__alt_data_end+0xfffecdc0>
   6d0a0:	298cb03a 	or	r6,r5,r6
   6d0a4:	300cc03a 	cmpne	r6,r6,zero
   6d0a8:	0005883a 	mov	r2,zero
   6d0ac:	003f6406 	br	6ce40 <__alt_data_end+0xfffece40>
   6d0b0:	10009a1e 	bne	r2,zero,6d31c <__subdf3+0x640>
   6d0b4:	82400044 	addi	r9,r16,1
   6d0b8:	4881ffcc 	andi	r2,r9,2047
   6d0bc:	02800044 	movi	r10,1
   6d0c0:	5080670e 	bge	r10,r2,6d260 <__subdf3+0x584>
   6d0c4:	0081ffc4 	movi	r2,2047
   6d0c8:	4880af26 	beq	r9,r2,6d388 <__subdf3+0x6ac>
   6d0cc:	898d883a 	add	r6,r17,r6
   6d0d0:	1945883a 	add	r2,r3,r5
   6d0d4:	3447803a 	cmpltu	r3,r6,r17
   6d0d8:	1887883a 	add	r3,r3,r2
   6d0dc:	182297fa 	slli	r17,r3,31
   6d0e0:	300cd07a 	srli	r6,r6,1
   6d0e4:	1806d07a 	srli	r3,r3,1
   6d0e8:	4821883a 	mov	r16,r9
   6d0ec:	89a2b03a 	or	r17,r17,r6
   6d0f0:	003f1b06 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d0f4:	0101ffc4 	movi	r4,2047
   6d0f8:	813f441e 	bne	r16,r4,6ce0c <__alt_data_end+0xfffece0c>
   6d0fc:	003f1806 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d100:	843ff844 	addi	r16,r16,-31
   6d104:	01400804 	movi	r5,32
   6d108:	1408d83a 	srl	r4,r2,r16
   6d10c:	19405026 	beq	r3,r5,6d250 <__subdf3+0x574>
   6d110:	01401004 	movi	r5,64
   6d114:	28c7c83a 	sub	r3,r5,r3
   6d118:	10c4983a 	sll	r2,r2,r3
   6d11c:	88a2b03a 	or	r17,r17,r2
   6d120:	8822c03a 	cmpne	r17,r17,zero
   6d124:	2462b03a 	or	r17,r4,r17
   6d128:	0007883a 	mov	r3,zero
   6d12c:	0021883a 	mov	r16,zero
   6d130:	003f6d06 	br	6cee8 <__alt_data_end+0xfffecee8>
   6d134:	11fff804 	addi	r7,r2,-32
   6d138:	01000804 	movi	r4,32
   6d13c:	29ced83a 	srl	r7,r5,r7
   6d140:	11004526 	beq	r2,r4,6d258 <__subdf3+0x57c>
   6d144:	01001004 	movi	r4,64
   6d148:	2089c83a 	sub	r4,r4,r2
   6d14c:	2904983a 	sll	r2,r5,r4
   6d150:	118cb03a 	or	r6,r2,r6
   6d154:	300cc03a 	cmpne	r6,r6,zero
   6d158:	398cb03a 	or	r6,r7,r6
   6d15c:	0005883a 	mov	r2,zero
   6d160:	003f3706 	br	6ce40 <__alt_data_end+0xfffece40>
   6d164:	80002a26 	beq	r16,zero,6d210 <__subdf3+0x534>
   6d168:	0101ffc4 	movi	r4,2047
   6d16c:	49006626 	beq	r9,r4,6d308 <__subdf3+0x62c>
   6d170:	0085c83a 	sub	r2,zero,r2
   6d174:	18c02034 	orhi	r3,r3,128
   6d178:	01000e04 	movi	r4,56
   6d17c:	20807e16 	blt	r4,r2,6d378 <__subdf3+0x69c>
   6d180:	010007c4 	movi	r4,31
   6d184:	2080e716 	blt	r4,r2,6d524 <__subdf3+0x848>
   6d188:	01000804 	movi	r4,32
   6d18c:	2089c83a 	sub	r4,r4,r2
   6d190:	1914983a 	sll	r10,r3,r4
   6d194:	8890d83a 	srl	r8,r17,r2
   6d198:	8908983a 	sll	r4,r17,r4
   6d19c:	1884d83a 	srl	r2,r3,r2
   6d1a0:	5222b03a 	or	r17,r10,r8
   6d1a4:	2006c03a 	cmpne	r3,r4,zero
   6d1a8:	88e2b03a 	or	r17,r17,r3
   6d1ac:	3463c83a 	sub	r17,r6,r17
   6d1b0:	2885c83a 	sub	r2,r5,r2
   6d1b4:	344d803a 	cmpltu	r6,r6,r17
   6d1b8:	1187c83a 	sub	r3,r2,r6
   6d1bc:	4821883a 	mov	r16,r9
   6d1c0:	3825883a 	mov	r18,r7
   6d1c4:	003f2306 	br	6ce54 <__alt_data_end+0xfffece54>
   6d1c8:	24d0b03a 	or	r8,r4,r19
   6d1cc:	40001b1e 	bne	r8,zero,6d23c <__subdf3+0x560>
   6d1d0:	0005883a 	mov	r2,zero
   6d1d4:	0009883a 	mov	r4,zero
   6d1d8:	0021883a 	mov	r16,zero
   6d1dc:	003f4906 	br	6cf04 <__alt_data_end+0xfffecf04>
   6d1e0:	010007c4 	movi	r4,31
   6d1e4:	20803a16 	blt	r4,r2,6d2d0 <__subdf3+0x5f4>
   6d1e8:	01000804 	movi	r4,32
   6d1ec:	2089c83a 	sub	r4,r4,r2
   6d1f0:	2912983a 	sll	r9,r5,r4
   6d1f4:	3090d83a 	srl	r8,r6,r2
   6d1f8:	3108983a 	sll	r4,r6,r4
   6d1fc:	2884d83a 	srl	r2,r5,r2
   6d200:	4a12b03a 	or	r9,r9,r8
   6d204:	2008c03a 	cmpne	r4,r4,zero
   6d208:	4912b03a 	or	r9,r9,r4
   6d20c:	003f4e06 	br	6cf48 <__alt_data_end+0xfffecf48>
   6d210:	1c48b03a 	or	r4,r3,r17
   6d214:	20003c26 	beq	r4,zero,6d308 <__subdf3+0x62c>
   6d218:	0084303a 	nor	r2,zero,r2
   6d21c:	1000381e 	bne	r2,zero,6d300 <__subdf3+0x624>
   6d220:	3463c83a 	sub	r17,r6,r17
   6d224:	28c5c83a 	sub	r2,r5,r3
   6d228:	344d803a 	cmpltu	r6,r6,r17
   6d22c:	1187c83a 	sub	r3,r2,r6
   6d230:	4821883a 	mov	r16,r9
   6d234:	3825883a 	mov	r18,r7
   6d238:	003f0606 	br	6ce54 <__alt_data_end+0xfffece54>
   6d23c:	2023883a 	mov	r17,r4
   6d240:	003f0906 	br	6ce68 <__alt_data_end+0xfffece68>
   6d244:	0101ffc4 	movi	r4,2047
   6d248:	813f3a1e 	bne	r16,r4,6cf34 <__alt_data_end+0xfffecf34>
   6d24c:	003ec406 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d250:	0005883a 	mov	r2,zero
   6d254:	003fb106 	br	6d11c <__alt_data_end+0xfffed11c>
   6d258:	0005883a 	mov	r2,zero
   6d25c:	003fbc06 	br	6d150 <__alt_data_end+0xfffed150>
   6d260:	1c44b03a 	or	r2,r3,r17
   6d264:	80008e1e 	bne	r16,zero,6d4a0 <__subdf3+0x7c4>
   6d268:	1000c826 	beq	r2,zero,6d58c <__subdf3+0x8b0>
   6d26c:	2984b03a 	or	r2,r5,r6
   6d270:	103ebb26 	beq	r2,zero,6cd60 <__alt_data_end+0xfffecd60>
   6d274:	8989883a 	add	r4,r17,r6
   6d278:	1945883a 	add	r2,r3,r5
   6d27c:	2447803a 	cmpltu	r3,r4,r17
   6d280:	1887883a 	add	r3,r3,r2
   6d284:	1880202c 	andhi	r2,r3,128
   6d288:	2023883a 	mov	r17,r4
   6d28c:	103f1626 	beq	r2,zero,6cee8 <__alt_data_end+0xfffecee8>
   6d290:	00bfe034 	movhi	r2,65408
   6d294:	10bfffc4 	addi	r2,r2,-1
   6d298:	5021883a 	mov	r16,r10
   6d29c:	1886703a 	and	r3,r3,r2
   6d2a0:	003eaf06 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d2a4:	3825883a 	mov	r18,r7
   6d2a8:	003f0f06 	br	6cee8 <__alt_data_end+0xfffecee8>
   6d2ac:	1c44b03a 	or	r2,r3,r17
   6d2b0:	8000251e 	bne	r16,zero,6d348 <__subdf3+0x66c>
   6d2b4:	1000661e 	bne	r2,zero,6d450 <__subdf3+0x774>
   6d2b8:	2990b03a 	or	r8,r5,r6
   6d2bc:	40009626 	beq	r8,zero,6d518 <__subdf3+0x83c>
   6d2c0:	2807883a 	mov	r3,r5
   6d2c4:	3023883a 	mov	r17,r6
   6d2c8:	3825883a 	mov	r18,r7
   6d2cc:	003ea406 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d2d0:	127ff804 	addi	r9,r2,-32
   6d2d4:	01000804 	movi	r4,32
   6d2d8:	2a52d83a 	srl	r9,r5,r9
   6d2dc:	11008c26 	beq	r2,r4,6d510 <__subdf3+0x834>
   6d2e0:	01001004 	movi	r4,64
   6d2e4:	2085c83a 	sub	r2,r4,r2
   6d2e8:	2884983a 	sll	r2,r5,r2
   6d2ec:	118cb03a 	or	r6,r2,r6
   6d2f0:	300cc03a 	cmpne	r6,r6,zero
   6d2f4:	4992b03a 	or	r9,r9,r6
   6d2f8:	0005883a 	mov	r2,zero
   6d2fc:	003f1206 	br	6cf48 <__alt_data_end+0xfffecf48>
   6d300:	0101ffc4 	movi	r4,2047
   6d304:	493f9c1e 	bne	r9,r4,6d178 <__alt_data_end+0xfffed178>
   6d308:	2807883a 	mov	r3,r5
   6d30c:	3023883a 	mov	r17,r6
   6d310:	4821883a 	mov	r16,r9
   6d314:	3825883a 	mov	r18,r7
   6d318:	003e9106 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d31c:	80001f1e 	bne	r16,zero,6d39c <__subdf3+0x6c0>
   6d320:	1c48b03a 	or	r4,r3,r17
   6d324:	20005a26 	beq	r4,zero,6d490 <__subdf3+0x7b4>
   6d328:	0084303a 	nor	r2,zero,r2
   6d32c:	1000561e 	bne	r2,zero,6d488 <__subdf3+0x7ac>
   6d330:	89a3883a 	add	r17,r17,r6
   6d334:	1945883a 	add	r2,r3,r5
   6d338:	898d803a 	cmpltu	r6,r17,r6
   6d33c:	3087883a 	add	r3,r6,r2
   6d340:	4821883a 	mov	r16,r9
   6d344:	003f0506 	br	6cf5c <__alt_data_end+0xfffecf5c>
   6d348:	10002b1e 	bne	r2,zero,6d3f8 <__subdf3+0x71c>
   6d34c:	2984b03a 	or	r2,r5,r6
   6d350:	10008026 	beq	r2,zero,6d554 <__subdf3+0x878>
   6d354:	2807883a 	mov	r3,r5
   6d358:	3023883a 	mov	r17,r6
   6d35c:	3825883a 	mov	r18,r7
   6d360:	0401ffc4 	movi	r16,2047
   6d364:	003e7e06 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d368:	3809883a 	mov	r4,r7
   6d36c:	0011883a 	mov	r8,zero
   6d370:	0005883a 	mov	r2,zero
   6d374:	003ee306 	br	6cf04 <__alt_data_end+0xfffecf04>
   6d378:	1c62b03a 	or	r17,r3,r17
   6d37c:	8822c03a 	cmpne	r17,r17,zero
   6d380:	0005883a 	mov	r2,zero
   6d384:	003f8906 	br	6d1ac <__alt_data_end+0xfffed1ac>
   6d388:	3809883a 	mov	r4,r7
   6d38c:	4821883a 	mov	r16,r9
   6d390:	0011883a 	mov	r8,zero
   6d394:	0005883a 	mov	r2,zero
   6d398:	003eda06 	br	6cf04 <__alt_data_end+0xfffecf04>
   6d39c:	0101ffc4 	movi	r4,2047
   6d3a0:	49003b26 	beq	r9,r4,6d490 <__subdf3+0x7b4>
   6d3a4:	0085c83a 	sub	r2,zero,r2
   6d3a8:	18c02034 	orhi	r3,r3,128
   6d3ac:	01000e04 	movi	r4,56
   6d3b0:	20806e16 	blt	r4,r2,6d56c <__subdf3+0x890>
   6d3b4:	010007c4 	movi	r4,31
   6d3b8:	20807716 	blt	r4,r2,6d598 <__subdf3+0x8bc>
   6d3bc:	01000804 	movi	r4,32
   6d3c0:	2089c83a 	sub	r4,r4,r2
   6d3c4:	1914983a 	sll	r10,r3,r4
   6d3c8:	8890d83a 	srl	r8,r17,r2
   6d3cc:	8908983a 	sll	r4,r17,r4
   6d3d0:	1884d83a 	srl	r2,r3,r2
   6d3d4:	5222b03a 	or	r17,r10,r8
   6d3d8:	2006c03a 	cmpne	r3,r4,zero
   6d3dc:	88e2b03a 	or	r17,r17,r3
   6d3e0:	89a3883a 	add	r17,r17,r6
   6d3e4:	1145883a 	add	r2,r2,r5
   6d3e8:	898d803a 	cmpltu	r6,r17,r6
   6d3ec:	3087883a 	add	r3,r6,r2
   6d3f0:	4821883a 	mov	r16,r9
   6d3f4:	003ed906 	br	6cf5c <__alt_data_end+0xfffecf5c>
   6d3f8:	2984b03a 	or	r2,r5,r6
   6d3fc:	10004226 	beq	r2,zero,6d508 <__subdf3+0x82c>
   6d400:	1808d0fa 	srli	r4,r3,3
   6d404:	8822d0fa 	srli	r17,r17,3
   6d408:	1806977a 	slli	r3,r3,29
   6d40c:	2080022c 	andhi	r2,r4,8
   6d410:	1c62b03a 	or	r17,r3,r17
   6d414:	10000826 	beq	r2,zero,6d438 <__subdf3+0x75c>
   6d418:	2812d0fa 	srli	r9,r5,3
   6d41c:	4880022c 	andhi	r2,r9,8
   6d420:	1000051e 	bne	r2,zero,6d438 <__subdf3+0x75c>
   6d424:	300cd0fa 	srli	r6,r6,3
   6d428:	2804977a 	slli	r2,r5,29
   6d42c:	4809883a 	mov	r4,r9
   6d430:	3825883a 	mov	r18,r7
   6d434:	11a2b03a 	or	r17,r2,r6
   6d438:	8806d77a 	srli	r3,r17,29
   6d43c:	200890fa 	slli	r4,r4,3
   6d440:	882290fa 	slli	r17,r17,3
   6d444:	0401ffc4 	movi	r16,2047
   6d448:	1906b03a 	or	r3,r3,r4
   6d44c:	003e4406 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d450:	2984b03a 	or	r2,r5,r6
   6d454:	103e4226 	beq	r2,zero,6cd60 <__alt_data_end+0xfffecd60>
   6d458:	8989c83a 	sub	r4,r17,r6
   6d45c:	8911803a 	cmpltu	r8,r17,r4
   6d460:	1945c83a 	sub	r2,r3,r5
   6d464:	1205c83a 	sub	r2,r2,r8
   6d468:	1200202c 	andhi	r8,r2,128
   6d46c:	403e9a26 	beq	r8,zero,6ced8 <__alt_data_end+0xfffeced8>
   6d470:	3463c83a 	sub	r17,r6,r17
   6d474:	28c5c83a 	sub	r2,r5,r3
   6d478:	344d803a 	cmpltu	r6,r6,r17
   6d47c:	1187c83a 	sub	r3,r2,r6
   6d480:	3825883a 	mov	r18,r7
   6d484:	003e3606 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d488:	0101ffc4 	movi	r4,2047
   6d48c:	493fc71e 	bne	r9,r4,6d3ac <__alt_data_end+0xfffed3ac>
   6d490:	2807883a 	mov	r3,r5
   6d494:	3023883a 	mov	r17,r6
   6d498:	4821883a 	mov	r16,r9
   6d49c:	003e3006 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d4a0:	10003626 	beq	r2,zero,6d57c <__subdf3+0x8a0>
   6d4a4:	2984b03a 	or	r2,r5,r6
   6d4a8:	10001726 	beq	r2,zero,6d508 <__subdf3+0x82c>
   6d4ac:	1808d0fa 	srli	r4,r3,3
   6d4b0:	8822d0fa 	srli	r17,r17,3
   6d4b4:	1806977a 	slli	r3,r3,29
   6d4b8:	2080022c 	andhi	r2,r4,8
   6d4bc:	1c62b03a 	or	r17,r3,r17
   6d4c0:	10000726 	beq	r2,zero,6d4e0 <__subdf3+0x804>
   6d4c4:	2812d0fa 	srli	r9,r5,3
   6d4c8:	4880022c 	andhi	r2,r9,8
   6d4cc:	1000041e 	bne	r2,zero,6d4e0 <__subdf3+0x804>
   6d4d0:	300cd0fa 	srli	r6,r6,3
   6d4d4:	2804977a 	slli	r2,r5,29
   6d4d8:	4809883a 	mov	r4,r9
   6d4dc:	11a2b03a 	or	r17,r2,r6
   6d4e0:	8806d77a 	srli	r3,r17,29
   6d4e4:	200890fa 	slli	r4,r4,3
   6d4e8:	882290fa 	slli	r17,r17,3
   6d4ec:	3825883a 	mov	r18,r7
   6d4f0:	1906b03a 	or	r3,r3,r4
   6d4f4:	0401ffc4 	movi	r16,2047
   6d4f8:	003e1906 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d4fc:	000b883a 	mov	r5,zero
   6d500:	0005883a 	mov	r2,zero
   6d504:	003e2e06 	br	6cdc0 <__alt_data_end+0xfffecdc0>
   6d508:	0401ffc4 	movi	r16,2047
   6d50c:	003e1406 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d510:	0005883a 	mov	r2,zero
   6d514:	003f7506 	br	6d2ec <__alt_data_end+0xfffed2ec>
   6d518:	0005883a 	mov	r2,zero
   6d51c:	0009883a 	mov	r4,zero
   6d520:	003e7806 	br	6cf04 <__alt_data_end+0xfffecf04>
   6d524:	123ff804 	addi	r8,r2,-32
   6d528:	01000804 	movi	r4,32
   6d52c:	1a10d83a 	srl	r8,r3,r8
   6d530:	11002526 	beq	r2,r4,6d5c8 <__subdf3+0x8ec>
   6d534:	01001004 	movi	r4,64
   6d538:	2085c83a 	sub	r2,r4,r2
   6d53c:	1884983a 	sll	r2,r3,r2
   6d540:	1444b03a 	or	r2,r2,r17
   6d544:	1004c03a 	cmpne	r2,r2,zero
   6d548:	40a2b03a 	or	r17,r8,r2
   6d54c:	0005883a 	mov	r2,zero
   6d550:	003f1606 	br	6d1ac <__alt_data_end+0xfffed1ac>
   6d554:	02000434 	movhi	r8,16
   6d558:	0009883a 	mov	r4,zero
   6d55c:	423fffc4 	addi	r8,r8,-1
   6d560:	00bfffc4 	movi	r2,-1
   6d564:	0401ffc4 	movi	r16,2047
   6d568:	003e6606 	br	6cf04 <__alt_data_end+0xfffecf04>
   6d56c:	1c62b03a 	or	r17,r3,r17
   6d570:	8822c03a 	cmpne	r17,r17,zero
   6d574:	0005883a 	mov	r2,zero
   6d578:	003f9906 	br	6d3e0 <__alt_data_end+0xfffed3e0>
   6d57c:	2807883a 	mov	r3,r5
   6d580:	3023883a 	mov	r17,r6
   6d584:	0401ffc4 	movi	r16,2047
   6d588:	003df506 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d58c:	2807883a 	mov	r3,r5
   6d590:	3023883a 	mov	r17,r6
   6d594:	003df206 	br	6cd60 <__alt_data_end+0xfffecd60>
   6d598:	123ff804 	addi	r8,r2,-32
   6d59c:	01000804 	movi	r4,32
   6d5a0:	1a10d83a 	srl	r8,r3,r8
   6d5a4:	11000a26 	beq	r2,r4,6d5d0 <__subdf3+0x8f4>
   6d5a8:	01001004 	movi	r4,64
   6d5ac:	2085c83a 	sub	r2,r4,r2
   6d5b0:	1884983a 	sll	r2,r3,r2
   6d5b4:	1444b03a 	or	r2,r2,r17
   6d5b8:	1004c03a 	cmpne	r2,r2,zero
   6d5bc:	40a2b03a 	or	r17,r8,r2
   6d5c0:	0005883a 	mov	r2,zero
   6d5c4:	003f8606 	br	6d3e0 <__alt_data_end+0xfffed3e0>
   6d5c8:	0005883a 	mov	r2,zero
   6d5cc:	003fdc06 	br	6d540 <__alt_data_end+0xfffed540>
   6d5d0:	0005883a 	mov	r2,zero
   6d5d4:	003ff706 	br	6d5b4 <__alt_data_end+0xfffed5b4>

0006d5d8 <__fixdfsi>:
   6d5d8:	280cd53a 	srli	r6,r5,20
   6d5dc:	00c00434 	movhi	r3,16
   6d5e0:	18ffffc4 	addi	r3,r3,-1
   6d5e4:	3181ffcc 	andi	r6,r6,2047
   6d5e8:	01c0ff84 	movi	r7,1022
   6d5ec:	28c6703a 	and	r3,r5,r3
   6d5f0:	280ad7fa 	srli	r5,r5,31
   6d5f4:	3980120e 	bge	r7,r6,6d640 <__fixdfsi+0x68>
   6d5f8:	00810744 	movi	r2,1053
   6d5fc:	11800c16 	blt	r2,r6,6d630 <__fixdfsi+0x58>
   6d600:	00810cc4 	movi	r2,1075
   6d604:	1185c83a 	sub	r2,r2,r6
   6d608:	01c007c4 	movi	r7,31
   6d60c:	18c00434 	orhi	r3,r3,16
   6d610:	38800d16 	blt	r7,r2,6d648 <__fixdfsi+0x70>
   6d614:	31befb44 	addi	r6,r6,-1043
   6d618:	2084d83a 	srl	r2,r4,r2
   6d61c:	1986983a 	sll	r3,r3,r6
   6d620:	1884b03a 	or	r2,r3,r2
   6d624:	28000726 	beq	r5,zero,6d644 <__fixdfsi+0x6c>
   6d628:	0085c83a 	sub	r2,zero,r2
   6d62c:	f800283a 	ret
   6d630:	00a00034 	movhi	r2,32768
   6d634:	10bfffc4 	addi	r2,r2,-1
   6d638:	2885883a 	add	r2,r5,r2
   6d63c:	f800283a 	ret
   6d640:	0005883a 	mov	r2,zero
   6d644:	f800283a 	ret
   6d648:	008104c4 	movi	r2,1043
   6d64c:	1185c83a 	sub	r2,r2,r6
   6d650:	1884d83a 	srl	r2,r3,r2
   6d654:	003ff306 	br	6d624 <__alt_data_end+0xfffed624>

0006d658 <__floatsidf>:
   6d658:	defffd04 	addi	sp,sp,-12
   6d65c:	dfc00215 	stw	ra,8(sp)
   6d660:	dc400115 	stw	r17,4(sp)
   6d664:	dc000015 	stw	r16,0(sp)
   6d668:	20002b26 	beq	r4,zero,6d718 <__floatsidf+0xc0>
   6d66c:	2023883a 	mov	r17,r4
   6d670:	2020d7fa 	srli	r16,r4,31
   6d674:	20002d16 	blt	r4,zero,6d72c <__floatsidf+0xd4>
   6d678:	8809883a 	mov	r4,r17
   6d67c:	006d7dc0 	call	6d7dc <__clzsi2>
   6d680:	01410784 	movi	r5,1054
   6d684:	288bc83a 	sub	r5,r5,r2
   6d688:	01010cc4 	movi	r4,1075
   6d68c:	2149c83a 	sub	r4,r4,r5
   6d690:	00c007c4 	movi	r3,31
   6d694:	1900160e 	bge	r3,r4,6d6f0 <__floatsidf+0x98>
   6d698:	00c104c4 	movi	r3,1043
   6d69c:	1947c83a 	sub	r3,r3,r5
   6d6a0:	88c6983a 	sll	r3,r17,r3
   6d6a4:	00800434 	movhi	r2,16
   6d6a8:	10bfffc4 	addi	r2,r2,-1
   6d6ac:	1886703a 	and	r3,r3,r2
   6d6b0:	2941ffcc 	andi	r5,r5,2047
   6d6b4:	800d883a 	mov	r6,r16
   6d6b8:	0005883a 	mov	r2,zero
   6d6bc:	280a953a 	slli	r5,r5,20
   6d6c0:	31803fcc 	andi	r6,r6,255
   6d6c4:	01000434 	movhi	r4,16
   6d6c8:	300c97fa 	slli	r6,r6,31
   6d6cc:	213fffc4 	addi	r4,r4,-1
   6d6d0:	1906703a 	and	r3,r3,r4
   6d6d4:	1946b03a 	or	r3,r3,r5
   6d6d8:	1986b03a 	or	r3,r3,r6
   6d6dc:	dfc00217 	ldw	ra,8(sp)
   6d6e0:	dc400117 	ldw	r17,4(sp)
   6d6e4:	dc000017 	ldw	r16,0(sp)
   6d6e8:	dec00304 	addi	sp,sp,12
   6d6ec:	f800283a 	ret
   6d6f0:	00c002c4 	movi	r3,11
   6d6f4:	1887c83a 	sub	r3,r3,r2
   6d6f8:	88c6d83a 	srl	r3,r17,r3
   6d6fc:	8904983a 	sll	r2,r17,r4
   6d700:	01000434 	movhi	r4,16
   6d704:	213fffc4 	addi	r4,r4,-1
   6d708:	2941ffcc 	andi	r5,r5,2047
   6d70c:	1906703a 	and	r3,r3,r4
   6d710:	800d883a 	mov	r6,r16
   6d714:	003fe906 	br	6d6bc <__alt_data_end+0xfffed6bc>
   6d718:	000d883a 	mov	r6,zero
   6d71c:	000b883a 	mov	r5,zero
   6d720:	0007883a 	mov	r3,zero
   6d724:	0005883a 	mov	r2,zero
   6d728:	003fe406 	br	6d6bc <__alt_data_end+0xfffed6bc>
   6d72c:	0123c83a 	sub	r17,zero,r4
   6d730:	003fd106 	br	6d678 <__alt_data_end+0xfffed678>

0006d734 <__floatunsidf>:
   6d734:	defffe04 	addi	sp,sp,-8
   6d738:	dc000015 	stw	r16,0(sp)
   6d73c:	dfc00115 	stw	ra,4(sp)
   6d740:	2021883a 	mov	r16,r4
   6d744:	20002226 	beq	r4,zero,6d7d0 <__floatunsidf+0x9c>
   6d748:	006d7dc0 	call	6d7dc <__clzsi2>
   6d74c:	01010784 	movi	r4,1054
   6d750:	2089c83a 	sub	r4,r4,r2
   6d754:	01810cc4 	movi	r6,1075
   6d758:	310dc83a 	sub	r6,r6,r4
   6d75c:	00c007c4 	movi	r3,31
   6d760:	1980120e 	bge	r3,r6,6d7ac <__floatunsidf+0x78>
   6d764:	00c104c4 	movi	r3,1043
   6d768:	1907c83a 	sub	r3,r3,r4
   6d76c:	80ca983a 	sll	r5,r16,r3
   6d770:	00800434 	movhi	r2,16
   6d774:	10bfffc4 	addi	r2,r2,-1
   6d778:	2101ffcc 	andi	r4,r4,2047
   6d77c:	0021883a 	mov	r16,zero
   6d780:	288a703a 	and	r5,r5,r2
   6d784:	2008953a 	slli	r4,r4,20
   6d788:	00c00434 	movhi	r3,16
   6d78c:	18ffffc4 	addi	r3,r3,-1
   6d790:	28c6703a 	and	r3,r5,r3
   6d794:	8005883a 	mov	r2,r16
   6d798:	1906b03a 	or	r3,r3,r4
   6d79c:	dfc00117 	ldw	ra,4(sp)
   6d7a0:	dc000017 	ldw	r16,0(sp)
   6d7a4:	dec00204 	addi	sp,sp,8
   6d7a8:	f800283a 	ret
   6d7ac:	00c002c4 	movi	r3,11
   6d7b0:	188bc83a 	sub	r5,r3,r2
   6d7b4:	814ad83a 	srl	r5,r16,r5
   6d7b8:	00c00434 	movhi	r3,16
   6d7bc:	18ffffc4 	addi	r3,r3,-1
   6d7c0:	81a0983a 	sll	r16,r16,r6
   6d7c4:	2101ffcc 	andi	r4,r4,2047
   6d7c8:	28ca703a 	and	r5,r5,r3
   6d7cc:	003fed06 	br	6d784 <__alt_data_end+0xfffed784>
   6d7d0:	0009883a 	mov	r4,zero
   6d7d4:	000b883a 	mov	r5,zero
   6d7d8:	003fea06 	br	6d784 <__alt_data_end+0xfffed784>

0006d7dc <__clzsi2>:
   6d7dc:	00bfffd4 	movui	r2,65535
   6d7e0:	11000536 	bltu	r2,r4,6d7f8 <__clzsi2+0x1c>
   6d7e4:	00803fc4 	movi	r2,255
   6d7e8:	11000f36 	bltu	r2,r4,6d828 <__clzsi2+0x4c>
   6d7ec:	00800804 	movi	r2,32
   6d7f0:	0007883a 	mov	r3,zero
   6d7f4:	00000506 	br	6d80c <__clzsi2+0x30>
   6d7f8:	00804034 	movhi	r2,256
   6d7fc:	10bfffc4 	addi	r2,r2,-1
   6d800:	11000c2e 	bgeu	r2,r4,6d834 <__clzsi2+0x58>
   6d804:	00800204 	movi	r2,8
   6d808:	00c00604 	movi	r3,24
   6d80c:	20c8d83a 	srl	r4,r4,r3
   6d810:	00c001f4 	movhi	r3,7
   6d814:	18c1e804 	addi	r3,r3,1952
   6d818:	1909883a 	add	r4,r3,r4
   6d81c:	20c00003 	ldbu	r3,0(r4)
   6d820:	10c5c83a 	sub	r2,r2,r3
   6d824:	f800283a 	ret
   6d828:	00800604 	movi	r2,24
   6d82c:	00c00204 	movi	r3,8
   6d830:	003ff606 	br	6d80c <__alt_data_end+0xfffed80c>
   6d834:	00800404 	movi	r2,16
   6d838:	1007883a 	mov	r3,r2
   6d83c:	003ff306 	br	6d80c <__alt_data_end+0xfffed80c>

0006d840 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6d840:	defffe04 	addi	sp,sp,-8
   6d844:	dfc00115 	stw	ra,4(sp)
   6d848:	df000015 	stw	fp,0(sp)
   6d84c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6d850:	d0a00b17 	ldw	r2,-32724(gp)
   6d854:	10000326 	beq	r2,zero,6d864 <alt_get_errno+0x24>
   6d858:	d0a00b17 	ldw	r2,-32724(gp)
   6d85c:	103ee83a 	callr	r2
   6d860:	00000106 	br	6d868 <alt_get_errno+0x28>
   6d864:	d0a70104 	addi	r2,gp,-25596
}
   6d868:	e037883a 	mov	sp,fp
   6d86c:	dfc00117 	ldw	ra,4(sp)
   6d870:	df000017 	ldw	fp,0(sp)
   6d874:	dec00204 	addi	sp,sp,8
   6d878:	f800283a 	ret

0006d87c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   6d87c:	defffb04 	addi	sp,sp,-20
   6d880:	dfc00415 	stw	ra,16(sp)
   6d884:	df000315 	stw	fp,12(sp)
   6d888:	df000304 	addi	fp,sp,12
   6d88c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   6d890:	e0bfff17 	ldw	r2,-4(fp)
   6d894:	10000816 	blt	r2,zero,6d8b8 <close+0x3c>
   6d898:	01400304 	movi	r5,12
   6d89c:	e13fff17 	ldw	r4,-4(fp)
   6d8a0:	00609000 	call	60900 <__mulsi3>
   6d8a4:	1007883a 	mov	r3,r2
   6d8a8:	008001f4 	movhi	r2,7
   6d8ac:	10849604 	addi	r2,r2,4696
   6d8b0:	1885883a 	add	r2,r3,r2
   6d8b4:	00000106 	br	6d8bc <close+0x40>
   6d8b8:	0005883a 	mov	r2,zero
   6d8bc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   6d8c0:	e0bffd17 	ldw	r2,-12(fp)
   6d8c4:	10001926 	beq	r2,zero,6d92c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   6d8c8:	e0bffd17 	ldw	r2,-12(fp)
   6d8cc:	10800017 	ldw	r2,0(r2)
   6d8d0:	10800417 	ldw	r2,16(r2)
   6d8d4:	10000626 	beq	r2,zero,6d8f0 <close+0x74>
   6d8d8:	e0bffd17 	ldw	r2,-12(fp)
   6d8dc:	10800017 	ldw	r2,0(r2)
   6d8e0:	10800417 	ldw	r2,16(r2)
   6d8e4:	e13ffd17 	ldw	r4,-12(fp)
   6d8e8:	103ee83a 	callr	r2
   6d8ec:	00000106 	br	6d8f4 <close+0x78>
   6d8f0:	0005883a 	mov	r2,zero
   6d8f4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   6d8f8:	e13fff17 	ldw	r4,-4(fp)
   6d8fc:	006df640 	call	6df64 <alt_release_fd>
    if (rval < 0)
   6d900:	e0bffe17 	ldw	r2,-8(fp)
   6d904:	1000070e 	bge	r2,zero,6d924 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   6d908:	006d8400 	call	6d840 <alt_get_errno>
   6d90c:	1007883a 	mov	r3,r2
   6d910:	e0bffe17 	ldw	r2,-8(fp)
   6d914:	0085c83a 	sub	r2,zero,r2
   6d918:	18800015 	stw	r2,0(r3)
      return -1;
   6d91c:	00bfffc4 	movi	r2,-1
   6d920:	00000706 	br	6d940 <close+0xc4>
    }
    return 0;
   6d924:	0005883a 	mov	r2,zero
   6d928:	00000506 	br	6d940 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   6d92c:	006d8400 	call	6d840 <alt_get_errno>
   6d930:	1007883a 	mov	r3,r2
   6d934:	00801444 	movi	r2,81
   6d938:	18800015 	stw	r2,0(r3)
    return -1;
   6d93c:	00bfffc4 	movi	r2,-1
  }
}
   6d940:	e037883a 	mov	sp,fp
   6d944:	dfc00117 	ldw	ra,4(sp)
   6d948:	df000017 	ldw	fp,0(sp)
   6d94c:	dec00204 	addi	sp,sp,8
   6d950:	f800283a 	ret

0006d954 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   6d954:	defffc04 	addi	sp,sp,-16
   6d958:	df000315 	stw	fp,12(sp)
   6d95c:	df000304 	addi	fp,sp,12
   6d960:	e13ffd15 	stw	r4,-12(fp)
   6d964:	e17ffe15 	stw	r5,-8(fp)
   6d968:	e1bfff15 	stw	r6,-4(fp)
  return len;
   6d96c:	e0bfff17 	ldw	r2,-4(fp)
}
   6d970:	e037883a 	mov	sp,fp
   6d974:	df000017 	ldw	fp,0(sp)
   6d978:	dec00104 	addi	sp,sp,4
   6d97c:	f800283a 	ret

0006d980 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6d980:	defffe04 	addi	sp,sp,-8
   6d984:	dfc00115 	stw	ra,4(sp)
   6d988:	df000015 	stw	fp,0(sp)
   6d98c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6d990:	d0a00b17 	ldw	r2,-32724(gp)
   6d994:	10000326 	beq	r2,zero,6d9a4 <alt_get_errno+0x24>
   6d998:	d0a00b17 	ldw	r2,-32724(gp)
   6d99c:	103ee83a 	callr	r2
   6d9a0:	00000106 	br	6d9a8 <alt_get_errno+0x28>
   6d9a4:	d0a70104 	addi	r2,gp,-25596
}
   6d9a8:	e037883a 	mov	sp,fp
   6d9ac:	dfc00117 	ldw	ra,4(sp)
   6d9b0:	df000017 	ldw	fp,0(sp)
   6d9b4:	dec00204 	addi	sp,sp,8
   6d9b8:	f800283a 	ret

0006d9bc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   6d9bc:	defffb04 	addi	sp,sp,-20
   6d9c0:	dfc00415 	stw	ra,16(sp)
   6d9c4:	df000315 	stw	fp,12(sp)
   6d9c8:	df000304 	addi	fp,sp,12
   6d9cc:	e13ffe15 	stw	r4,-8(fp)
   6d9d0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   6d9d4:	e0bffe17 	ldw	r2,-8(fp)
   6d9d8:	10000816 	blt	r2,zero,6d9fc <fstat+0x40>
   6d9dc:	01400304 	movi	r5,12
   6d9e0:	e13ffe17 	ldw	r4,-8(fp)
   6d9e4:	00609000 	call	60900 <__mulsi3>
   6d9e8:	1007883a 	mov	r3,r2
   6d9ec:	008001f4 	movhi	r2,7
   6d9f0:	10849604 	addi	r2,r2,4696
   6d9f4:	1885883a 	add	r2,r3,r2
   6d9f8:	00000106 	br	6da00 <fstat+0x44>
   6d9fc:	0005883a 	mov	r2,zero
   6da00:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   6da04:	e0bffd17 	ldw	r2,-12(fp)
   6da08:	10001026 	beq	r2,zero,6da4c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   6da0c:	e0bffd17 	ldw	r2,-12(fp)
   6da10:	10800017 	ldw	r2,0(r2)
   6da14:	10800817 	ldw	r2,32(r2)
   6da18:	10000726 	beq	r2,zero,6da38 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   6da1c:	e0bffd17 	ldw	r2,-12(fp)
   6da20:	10800017 	ldw	r2,0(r2)
   6da24:	10800817 	ldw	r2,32(r2)
   6da28:	e17fff17 	ldw	r5,-4(fp)
   6da2c:	e13ffd17 	ldw	r4,-12(fp)
   6da30:	103ee83a 	callr	r2
   6da34:	00000a06 	br	6da60 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   6da38:	e0bfff17 	ldw	r2,-4(fp)
   6da3c:	00c80004 	movi	r3,8192
   6da40:	10c00115 	stw	r3,4(r2)
      return 0;
   6da44:	0005883a 	mov	r2,zero
   6da48:	00000506 	br	6da60 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   6da4c:	006d9800 	call	6d980 <alt_get_errno>
   6da50:	1007883a 	mov	r3,r2
   6da54:	00801444 	movi	r2,81
   6da58:	18800015 	stw	r2,0(r3)
    return -1;
   6da5c:	00bfffc4 	movi	r2,-1
  }
}
   6da60:	e037883a 	mov	sp,fp
   6da64:	dfc00117 	ldw	ra,4(sp)
   6da68:	df000017 	ldw	fp,0(sp)
   6da6c:	dec00204 	addi	sp,sp,8
   6da70:	f800283a 	ret

0006da74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6da74:	defffe04 	addi	sp,sp,-8
   6da78:	dfc00115 	stw	ra,4(sp)
   6da7c:	df000015 	stw	fp,0(sp)
   6da80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6da84:	d0a00b17 	ldw	r2,-32724(gp)
   6da88:	10000326 	beq	r2,zero,6da98 <alt_get_errno+0x24>
   6da8c:	d0a00b17 	ldw	r2,-32724(gp)
   6da90:	103ee83a 	callr	r2
   6da94:	00000106 	br	6da9c <alt_get_errno+0x28>
   6da98:	d0a70104 	addi	r2,gp,-25596
}
   6da9c:	e037883a 	mov	sp,fp
   6daa0:	dfc00117 	ldw	ra,4(sp)
   6daa4:	df000017 	ldw	fp,0(sp)
   6daa8:	dec00204 	addi	sp,sp,8
   6daac:	f800283a 	ret

0006dab0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   6dab0:	deffed04 	addi	sp,sp,-76
   6dab4:	dfc01215 	stw	ra,72(sp)
   6dab8:	df001115 	stw	fp,68(sp)
   6dabc:	df001104 	addi	fp,sp,68
   6dac0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   6dac4:	e0bfff17 	ldw	r2,-4(fp)
   6dac8:	10000816 	blt	r2,zero,6daec <isatty+0x3c>
   6dacc:	01400304 	movi	r5,12
   6dad0:	e13fff17 	ldw	r4,-4(fp)
   6dad4:	00609000 	call	60900 <__mulsi3>
   6dad8:	1007883a 	mov	r3,r2
   6dadc:	008001f4 	movhi	r2,7
   6dae0:	10849604 	addi	r2,r2,4696
   6dae4:	1885883a 	add	r2,r3,r2
   6dae8:	00000106 	br	6daf0 <isatty+0x40>
   6daec:	0005883a 	mov	r2,zero
   6daf0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   6daf4:	e0bfef17 	ldw	r2,-68(fp)
   6daf8:	10000e26 	beq	r2,zero,6db34 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   6dafc:	e0bfef17 	ldw	r2,-68(fp)
   6db00:	10800017 	ldw	r2,0(r2)
   6db04:	10800817 	ldw	r2,32(r2)
   6db08:	1000021e 	bne	r2,zero,6db14 <isatty+0x64>
    {
      return 1;
   6db0c:	00800044 	movi	r2,1
   6db10:	00000d06 	br	6db48 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   6db14:	e0bff004 	addi	r2,fp,-64
   6db18:	100b883a 	mov	r5,r2
   6db1c:	e13fff17 	ldw	r4,-4(fp)
   6db20:	006d9bc0 	call	6d9bc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   6db24:	e0bff117 	ldw	r2,-60(fp)
   6db28:	10880020 	cmpeqi	r2,r2,8192
   6db2c:	10803fcc 	andi	r2,r2,255
   6db30:	00000506 	br	6db48 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   6db34:	006da740 	call	6da74 <alt_get_errno>
   6db38:	1007883a 	mov	r3,r2
   6db3c:	00801444 	movi	r2,81
   6db40:	18800015 	stw	r2,0(r3)
    return 0;
   6db44:	0005883a 	mov	r2,zero
  }
}
   6db48:	e037883a 	mov	sp,fp
   6db4c:	dfc00117 	ldw	ra,4(sp)
   6db50:	df000017 	ldw	fp,0(sp)
   6db54:	dec00204 	addi	sp,sp,8
   6db58:	f800283a 	ret

0006db5c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   6db5c:	defffc04 	addi	sp,sp,-16
   6db60:	df000315 	stw	fp,12(sp)
   6db64:	df000304 	addi	fp,sp,12
   6db68:	e13ffd15 	stw	r4,-12(fp)
   6db6c:	e17ffe15 	stw	r5,-8(fp)
   6db70:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   6db74:	e0fffe17 	ldw	r3,-8(fp)
   6db78:	e0bffd17 	ldw	r2,-12(fp)
   6db7c:	18800c26 	beq	r3,r2,6dbb0 <alt_load_section+0x54>
  {
    while( to != end )
   6db80:	00000806 	br	6dba4 <alt_load_section+0x48>
    {
      *to++ = *from++;
   6db84:	e0bffe17 	ldw	r2,-8(fp)
   6db88:	10c00104 	addi	r3,r2,4
   6db8c:	e0fffe15 	stw	r3,-8(fp)
   6db90:	e0fffd17 	ldw	r3,-12(fp)
   6db94:	19000104 	addi	r4,r3,4
   6db98:	e13ffd15 	stw	r4,-12(fp)
   6db9c:	18c00017 	ldw	r3,0(r3)
   6dba0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   6dba4:	e0fffe17 	ldw	r3,-8(fp)
   6dba8:	e0bfff17 	ldw	r2,-4(fp)
   6dbac:	18bff51e 	bne	r3,r2,6db84 <__alt_data_end+0xfffedb84>
    {
      *to++ = *from++;
    }
  }
}
   6dbb0:	0001883a 	nop
   6dbb4:	e037883a 	mov	sp,fp
   6dbb8:	df000017 	ldw	fp,0(sp)
   6dbbc:	dec00104 	addi	sp,sp,4
   6dbc0:	f800283a 	ret

0006dbc4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   6dbc4:	defffe04 	addi	sp,sp,-8
   6dbc8:	dfc00115 	stw	ra,4(sp)
   6dbcc:	df000015 	stw	fp,0(sp)
   6dbd0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   6dbd4:	018001f4 	movhi	r6,7
   6dbd8:	31891e04 	addi	r6,r6,9336
   6dbdc:	014001f4 	movhi	r5,7
   6dbe0:	29423504 	addi	r5,r5,2260
   6dbe4:	010001f4 	movhi	r4,7
   6dbe8:	21091e04 	addi	r4,r4,9336
   6dbec:	006db5c0 	call	6db5c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   6dbf0:	018001b4 	movhi	r6,6
   6dbf4:	31808c04 	addi	r6,r6,560
   6dbf8:	014001b4 	movhi	r5,6
   6dbfc:	29400804 	addi	r5,r5,32
   6dc00:	010001b4 	movhi	r4,6
   6dc04:	21000804 	addi	r4,r4,32
   6dc08:	006db5c0 	call	6db5c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   6dc0c:	018001f4 	movhi	r6,7
   6dc10:	31823504 	addi	r6,r6,2260
   6dc14:	014001f4 	movhi	r5,7
   6dc18:	29413d04 	addi	r5,r5,1268
   6dc1c:	010001f4 	movhi	r4,7
   6dc20:	21013d04 	addi	r4,r4,1268
   6dc24:	006db5c0 	call	6db5c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   6dc28:	006f43c0 	call	6f43c <alt_dcache_flush_all>
  alt_icache_flush_all();
   6dc2c:	006f5fc0 	call	6f5fc <alt_icache_flush_all>
}
   6dc30:	0001883a 	nop
   6dc34:	e037883a 	mov	sp,fp
   6dc38:	dfc00117 	ldw	ra,4(sp)
   6dc3c:	df000017 	ldw	fp,0(sp)
   6dc40:	dec00204 	addi	sp,sp,8
   6dc44:	f800283a 	ret

0006dc48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6dc48:	defffe04 	addi	sp,sp,-8
   6dc4c:	dfc00115 	stw	ra,4(sp)
   6dc50:	df000015 	stw	fp,0(sp)
   6dc54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6dc58:	d0a00b17 	ldw	r2,-32724(gp)
   6dc5c:	10000326 	beq	r2,zero,6dc6c <alt_get_errno+0x24>
   6dc60:	d0a00b17 	ldw	r2,-32724(gp)
   6dc64:	103ee83a 	callr	r2
   6dc68:	00000106 	br	6dc70 <alt_get_errno+0x28>
   6dc6c:	d0a70104 	addi	r2,gp,-25596
}
   6dc70:	e037883a 	mov	sp,fp
   6dc74:	dfc00117 	ldw	ra,4(sp)
   6dc78:	df000017 	ldw	fp,0(sp)
   6dc7c:	dec00204 	addi	sp,sp,8
   6dc80:	f800283a 	ret

0006dc84 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   6dc84:	defff904 	addi	sp,sp,-28
   6dc88:	dfc00615 	stw	ra,24(sp)
   6dc8c:	df000515 	stw	fp,20(sp)
   6dc90:	df000504 	addi	fp,sp,20
   6dc94:	e13ffd15 	stw	r4,-12(fp)
   6dc98:	e17ffe15 	stw	r5,-8(fp)
   6dc9c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   6dca0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   6dca4:	e0bffd17 	ldw	r2,-12(fp)
   6dca8:	10000816 	blt	r2,zero,6dccc <lseek+0x48>
   6dcac:	01400304 	movi	r5,12
   6dcb0:	e13ffd17 	ldw	r4,-12(fp)
   6dcb4:	00609000 	call	60900 <__mulsi3>
   6dcb8:	1007883a 	mov	r3,r2
   6dcbc:	008001f4 	movhi	r2,7
   6dcc0:	10849604 	addi	r2,r2,4696
   6dcc4:	1885883a 	add	r2,r3,r2
   6dcc8:	00000106 	br	6dcd0 <lseek+0x4c>
   6dccc:	0005883a 	mov	r2,zero
   6dcd0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   6dcd4:	e0bffc17 	ldw	r2,-16(fp)
   6dcd8:	10001026 	beq	r2,zero,6dd1c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   6dcdc:	e0bffc17 	ldw	r2,-16(fp)
   6dce0:	10800017 	ldw	r2,0(r2)
   6dce4:	10800717 	ldw	r2,28(r2)
   6dce8:	10000926 	beq	r2,zero,6dd10 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   6dcec:	e0bffc17 	ldw	r2,-16(fp)
   6dcf0:	10800017 	ldw	r2,0(r2)
   6dcf4:	10800717 	ldw	r2,28(r2)
   6dcf8:	e1bfff17 	ldw	r6,-4(fp)
   6dcfc:	e17ffe17 	ldw	r5,-8(fp)
   6dd00:	e13ffc17 	ldw	r4,-16(fp)
   6dd04:	103ee83a 	callr	r2
   6dd08:	e0bffb15 	stw	r2,-20(fp)
   6dd0c:	00000506 	br	6dd24 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   6dd10:	00bfde84 	movi	r2,-134
   6dd14:	e0bffb15 	stw	r2,-20(fp)
   6dd18:	00000206 	br	6dd24 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   6dd1c:	00bfebc4 	movi	r2,-81
   6dd20:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   6dd24:	e0bffb17 	ldw	r2,-20(fp)
   6dd28:	1000070e 	bge	r2,zero,6dd48 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   6dd2c:	006dc480 	call	6dc48 <alt_get_errno>
   6dd30:	1007883a 	mov	r3,r2
   6dd34:	e0bffb17 	ldw	r2,-20(fp)
   6dd38:	0085c83a 	sub	r2,zero,r2
   6dd3c:	18800015 	stw	r2,0(r3)
    rc = -1;
   6dd40:	00bfffc4 	movi	r2,-1
   6dd44:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   6dd48:	e0bffb17 	ldw	r2,-20(fp)
}
   6dd4c:	e037883a 	mov	sp,fp
   6dd50:	dfc00117 	ldw	ra,4(sp)
   6dd54:	df000017 	ldw	fp,0(sp)
   6dd58:	dec00204 	addi	sp,sp,8
   6dd5c:	f800283a 	ret

0006dd60 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   6dd60:	defffd04 	addi	sp,sp,-12
   6dd64:	dfc00215 	stw	ra,8(sp)
   6dd68:	df000115 	stw	fp,4(sp)
   6dd6c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   6dd70:	0009883a 	mov	r4,zero
   6dd74:	006e2080 	call	6e208 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   6dd78:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   6dd7c:	006e2400 	call	6e240 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   6dd80:	018001f4 	movhi	r6,7
   6dd84:	31822b04 	addi	r6,r6,2220
   6dd88:	014001f4 	movhi	r5,7
   6dd8c:	29422b04 	addi	r5,r5,2220
   6dd90:	010001f4 	movhi	r4,7
   6dd94:	21022b04 	addi	r4,r4,2220
   6dd98:	006f9a00 	call	6f9a0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   6dd9c:	006f53c0 	call	6f53c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   6dda0:	010001f4 	movhi	r4,7
   6dda4:	213d6704 	addi	r4,r4,-2660
   6dda8:	00701600 	call	70160 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   6ddac:	d0a70217 	ldw	r2,-25592(gp)
   6ddb0:	d0e70317 	ldw	r3,-25588(gp)
   6ddb4:	d1270417 	ldw	r4,-25584(gp)
   6ddb8:	200d883a 	mov	r6,r4
   6ddbc:	180b883a 	mov	r5,r3
   6ddc0:	1009883a 	mov	r4,r2
   6ddc4:	00606980 	call	60698 <main>
   6ddc8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   6ddcc:	01000044 	movi	r4,1
   6ddd0:	006d87c0 	call	6d87c <close>
  exit (result);
   6ddd4:	e13fff17 	ldw	r4,-4(fp)
   6ddd8:	00701740 	call	70174 <exit>

0006dddc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   6dddc:	defffe04 	addi	sp,sp,-8
   6dde0:	df000115 	stw	fp,4(sp)
   6dde4:	df000104 	addi	fp,sp,4
   6dde8:	e13fff15 	stw	r4,-4(fp)
}
   6ddec:	0001883a 	nop
   6ddf0:	e037883a 	mov	sp,fp
   6ddf4:	df000017 	ldw	fp,0(sp)
   6ddf8:	dec00104 	addi	sp,sp,4
   6ddfc:	f800283a 	ret

0006de00 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   6de00:	defffe04 	addi	sp,sp,-8
   6de04:	df000115 	stw	fp,4(sp)
   6de08:	df000104 	addi	fp,sp,4
   6de0c:	e13fff15 	stw	r4,-4(fp)
}
   6de10:	0001883a 	nop
   6de14:	e037883a 	mov	sp,fp
   6de18:	df000017 	ldw	fp,0(sp)
   6de1c:	dec00104 	addi	sp,sp,4
   6de20:	f800283a 	ret

0006de24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6de24:	defffe04 	addi	sp,sp,-8
   6de28:	dfc00115 	stw	ra,4(sp)
   6de2c:	df000015 	stw	fp,0(sp)
   6de30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6de34:	d0a00b17 	ldw	r2,-32724(gp)
   6de38:	10000326 	beq	r2,zero,6de48 <alt_get_errno+0x24>
   6de3c:	d0a00b17 	ldw	r2,-32724(gp)
   6de40:	103ee83a 	callr	r2
   6de44:	00000106 	br	6de4c <alt_get_errno+0x28>
   6de48:	d0a70104 	addi	r2,gp,-25596
}
   6de4c:	e037883a 	mov	sp,fp
   6de50:	dfc00117 	ldw	ra,4(sp)
   6de54:	df000017 	ldw	fp,0(sp)
   6de58:	dec00204 	addi	sp,sp,8
   6de5c:	f800283a 	ret

0006de60 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   6de60:	defff904 	addi	sp,sp,-28
   6de64:	dfc00615 	stw	ra,24(sp)
   6de68:	df000515 	stw	fp,20(sp)
   6de6c:	df000504 	addi	fp,sp,20
   6de70:	e13ffd15 	stw	r4,-12(fp)
   6de74:	e17ffe15 	stw	r5,-8(fp)
   6de78:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   6de7c:	e0bffd17 	ldw	r2,-12(fp)
   6de80:	10000816 	blt	r2,zero,6dea4 <read+0x44>
   6de84:	01400304 	movi	r5,12
   6de88:	e13ffd17 	ldw	r4,-12(fp)
   6de8c:	00609000 	call	60900 <__mulsi3>
   6de90:	1007883a 	mov	r3,r2
   6de94:	008001f4 	movhi	r2,7
   6de98:	10849604 	addi	r2,r2,4696
   6de9c:	1885883a 	add	r2,r3,r2
   6dea0:	00000106 	br	6dea8 <read+0x48>
   6dea4:	0005883a 	mov	r2,zero
   6dea8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   6deac:	e0bffb17 	ldw	r2,-20(fp)
   6deb0:	10002226 	beq	r2,zero,6df3c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   6deb4:	e0bffb17 	ldw	r2,-20(fp)
   6deb8:	10800217 	ldw	r2,8(r2)
   6debc:	108000cc 	andi	r2,r2,3
   6dec0:	10800060 	cmpeqi	r2,r2,1
   6dec4:	1000181e 	bne	r2,zero,6df28 <read+0xc8>
        (fd->dev->read))
   6dec8:	e0bffb17 	ldw	r2,-20(fp)
   6decc:	10800017 	ldw	r2,0(r2)
   6ded0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   6ded4:	10001426 	beq	r2,zero,6df28 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   6ded8:	e0bffb17 	ldw	r2,-20(fp)
   6dedc:	10800017 	ldw	r2,0(r2)
   6dee0:	10800517 	ldw	r2,20(r2)
   6dee4:	e0ffff17 	ldw	r3,-4(fp)
   6dee8:	180d883a 	mov	r6,r3
   6deec:	e17ffe17 	ldw	r5,-8(fp)
   6def0:	e13ffb17 	ldw	r4,-20(fp)
   6def4:	103ee83a 	callr	r2
   6def8:	e0bffc15 	stw	r2,-16(fp)
   6defc:	e0bffc17 	ldw	r2,-16(fp)
   6df00:	1000070e 	bge	r2,zero,6df20 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   6df04:	006de240 	call	6de24 <alt_get_errno>
   6df08:	1007883a 	mov	r3,r2
   6df0c:	e0bffc17 	ldw	r2,-16(fp)
   6df10:	0085c83a 	sub	r2,zero,r2
   6df14:	18800015 	stw	r2,0(r3)
          return -1;
   6df18:	00bfffc4 	movi	r2,-1
   6df1c:	00000c06 	br	6df50 <read+0xf0>
        }
        return rval;
   6df20:	e0bffc17 	ldw	r2,-16(fp)
   6df24:	00000a06 	br	6df50 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   6df28:	006de240 	call	6de24 <alt_get_errno>
   6df2c:	1007883a 	mov	r3,r2
   6df30:	00800344 	movi	r2,13
   6df34:	18800015 	stw	r2,0(r3)
   6df38:	00000406 	br	6df4c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   6df3c:	006de240 	call	6de24 <alt_get_errno>
   6df40:	1007883a 	mov	r3,r2
   6df44:	00801444 	movi	r2,81
   6df48:	18800015 	stw	r2,0(r3)
  }
  return -1;
   6df4c:	00bfffc4 	movi	r2,-1
}
   6df50:	e037883a 	mov	sp,fp
   6df54:	dfc00117 	ldw	ra,4(sp)
   6df58:	df000017 	ldw	fp,0(sp)
   6df5c:	dec00204 	addi	sp,sp,8
   6df60:	f800283a 	ret

0006df64 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   6df64:	defffc04 	addi	sp,sp,-16
   6df68:	dfc00315 	stw	ra,12(sp)
   6df6c:	df000215 	stw	fp,8(sp)
   6df70:	dc000115 	stw	r16,4(sp)
   6df74:	df000204 	addi	fp,sp,8
   6df78:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   6df7c:	e0bffe17 	ldw	r2,-8(fp)
   6df80:	108000d0 	cmplti	r2,r2,3
   6df84:	1000111e 	bne	r2,zero,6dfcc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   6df88:	040001f4 	movhi	r16,7
   6df8c:	84049604 	addi	r16,r16,4696
   6df90:	e0bffe17 	ldw	r2,-8(fp)
   6df94:	01400304 	movi	r5,12
   6df98:	1009883a 	mov	r4,r2
   6df9c:	00609000 	call	60900 <__mulsi3>
   6dfa0:	8085883a 	add	r2,r16,r2
   6dfa4:	10800204 	addi	r2,r2,8
   6dfa8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   6dfac:	040001f4 	movhi	r16,7
   6dfb0:	84049604 	addi	r16,r16,4696
   6dfb4:	e0bffe17 	ldw	r2,-8(fp)
   6dfb8:	01400304 	movi	r5,12
   6dfbc:	1009883a 	mov	r4,r2
   6dfc0:	00609000 	call	60900 <__mulsi3>
   6dfc4:	8085883a 	add	r2,r16,r2
   6dfc8:	10000015 	stw	zero,0(r2)
  }
}
   6dfcc:	0001883a 	nop
   6dfd0:	e6ffff04 	addi	sp,fp,-4
   6dfd4:	dfc00217 	ldw	ra,8(sp)
   6dfd8:	df000117 	ldw	fp,4(sp)
   6dfdc:	dc000017 	ldw	r16,0(sp)
   6dfe0:	dec00304 	addi	sp,sp,12
   6dfe4:	f800283a 	ret

0006dfe8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   6dfe8:	defff904 	addi	sp,sp,-28
   6dfec:	df000615 	stw	fp,24(sp)
   6dff0:	df000604 	addi	fp,sp,24
   6dff4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6dff8:	0005303a 	rdctl	r2,status
   6dffc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6e000:	e0fffe17 	ldw	r3,-8(fp)
   6e004:	00bfff84 	movi	r2,-2
   6e008:	1884703a 	and	r2,r3,r2
   6e00c:	1001703a 	wrctl	status,r2
  
  return context;
   6e010:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   6e014:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   6e018:	d0a00c17 	ldw	r2,-32720(gp)
   6e01c:	10c000c4 	addi	r3,r2,3
   6e020:	00bfff04 	movi	r2,-4
   6e024:	1884703a 	and	r2,r3,r2
   6e028:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   6e02c:	d0e00c17 	ldw	r3,-32720(gp)
   6e030:	e0bfff17 	ldw	r2,-4(fp)
   6e034:	1887883a 	add	r3,r3,r2
   6e038:	00800234 	movhi	r2,8
   6e03c:	10800004 	addi	r2,r2,0
   6e040:	10c0062e 	bgeu	r2,r3,6e05c <sbrk+0x74>
   6e044:	e0bffb17 	ldw	r2,-20(fp)
   6e048:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6e04c:	e0bffa17 	ldw	r2,-24(fp)
   6e050:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   6e054:	00bfffc4 	movi	r2,-1
   6e058:	00000b06 	br	6e088 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   6e05c:	d0a00c17 	ldw	r2,-32720(gp)
   6e060:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   6e064:	d0e00c17 	ldw	r3,-32720(gp)
   6e068:	e0bfff17 	ldw	r2,-4(fp)
   6e06c:	1885883a 	add	r2,r3,r2
   6e070:	d0a00c15 	stw	r2,-32720(gp)
   6e074:	e0bffb17 	ldw	r2,-20(fp)
   6e078:	e0bffc15 	stw	r2,-16(fp)
   6e07c:	e0bffc17 	ldw	r2,-16(fp)
   6e080:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   6e084:	e0bffd17 	ldw	r2,-12(fp)
} 
   6e088:	e037883a 	mov	sp,fp
   6e08c:	df000017 	ldw	fp,0(sp)
   6e090:	dec00104 	addi	sp,sp,4
   6e094:	f800283a 	ret

0006e098 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6e098:	defffe04 	addi	sp,sp,-8
   6e09c:	dfc00115 	stw	ra,4(sp)
   6e0a0:	df000015 	stw	fp,0(sp)
   6e0a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6e0a8:	d0a00b17 	ldw	r2,-32724(gp)
   6e0ac:	10000326 	beq	r2,zero,6e0bc <alt_get_errno+0x24>
   6e0b0:	d0a00b17 	ldw	r2,-32724(gp)
   6e0b4:	103ee83a 	callr	r2
   6e0b8:	00000106 	br	6e0c0 <alt_get_errno+0x28>
   6e0bc:	d0a70104 	addi	r2,gp,-25596
}
   6e0c0:	e037883a 	mov	sp,fp
   6e0c4:	dfc00117 	ldw	ra,4(sp)
   6e0c8:	df000017 	ldw	fp,0(sp)
   6e0cc:	dec00204 	addi	sp,sp,8
   6e0d0:	f800283a 	ret

0006e0d4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   6e0d4:	defff904 	addi	sp,sp,-28
   6e0d8:	dfc00615 	stw	ra,24(sp)
   6e0dc:	df000515 	stw	fp,20(sp)
   6e0e0:	df000504 	addi	fp,sp,20
   6e0e4:	e13ffd15 	stw	r4,-12(fp)
   6e0e8:	e17ffe15 	stw	r5,-8(fp)
   6e0ec:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   6e0f0:	e0bffd17 	ldw	r2,-12(fp)
   6e0f4:	10000816 	blt	r2,zero,6e118 <write+0x44>
   6e0f8:	01400304 	movi	r5,12
   6e0fc:	e13ffd17 	ldw	r4,-12(fp)
   6e100:	00609000 	call	60900 <__mulsi3>
   6e104:	1007883a 	mov	r3,r2
   6e108:	008001f4 	movhi	r2,7
   6e10c:	10849604 	addi	r2,r2,4696
   6e110:	1885883a 	add	r2,r3,r2
   6e114:	00000106 	br	6e11c <write+0x48>
   6e118:	0005883a 	mov	r2,zero
   6e11c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   6e120:	e0bffb17 	ldw	r2,-20(fp)
   6e124:	10002126 	beq	r2,zero,6e1ac <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   6e128:	e0bffb17 	ldw	r2,-20(fp)
   6e12c:	10800217 	ldw	r2,8(r2)
   6e130:	108000cc 	andi	r2,r2,3
   6e134:	10001826 	beq	r2,zero,6e198 <write+0xc4>
   6e138:	e0bffb17 	ldw	r2,-20(fp)
   6e13c:	10800017 	ldw	r2,0(r2)
   6e140:	10800617 	ldw	r2,24(r2)
   6e144:	10001426 	beq	r2,zero,6e198 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   6e148:	e0bffb17 	ldw	r2,-20(fp)
   6e14c:	10800017 	ldw	r2,0(r2)
   6e150:	10800617 	ldw	r2,24(r2)
   6e154:	e0ffff17 	ldw	r3,-4(fp)
   6e158:	180d883a 	mov	r6,r3
   6e15c:	e17ffe17 	ldw	r5,-8(fp)
   6e160:	e13ffb17 	ldw	r4,-20(fp)
   6e164:	103ee83a 	callr	r2
   6e168:	e0bffc15 	stw	r2,-16(fp)
   6e16c:	e0bffc17 	ldw	r2,-16(fp)
   6e170:	1000070e 	bge	r2,zero,6e190 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   6e174:	006e0980 	call	6e098 <alt_get_errno>
   6e178:	1007883a 	mov	r3,r2
   6e17c:	e0bffc17 	ldw	r2,-16(fp)
   6e180:	0085c83a 	sub	r2,zero,r2
   6e184:	18800015 	stw	r2,0(r3)
        return -1;
   6e188:	00bfffc4 	movi	r2,-1
   6e18c:	00000c06 	br	6e1c0 <write+0xec>
      }
      return rval;
   6e190:	e0bffc17 	ldw	r2,-16(fp)
   6e194:	00000a06 	br	6e1c0 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   6e198:	006e0980 	call	6e098 <alt_get_errno>
   6e19c:	1007883a 	mov	r3,r2
   6e1a0:	00800344 	movi	r2,13
   6e1a4:	18800015 	stw	r2,0(r3)
   6e1a8:	00000406 	br	6e1bc <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   6e1ac:	006e0980 	call	6e098 <alt_get_errno>
   6e1b0:	1007883a 	mov	r3,r2
   6e1b4:	00801444 	movi	r2,81
   6e1b8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   6e1bc:	00bfffc4 	movi	r2,-1
}
   6e1c0:	e037883a 	mov	sp,fp
   6e1c4:	dfc00117 	ldw	ra,4(sp)
   6e1c8:	df000017 	ldw	fp,0(sp)
   6e1cc:	dec00204 	addi	sp,sp,8
   6e1d0:	f800283a 	ret

0006e1d4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   6e1d4:	defffd04 	addi	sp,sp,-12
   6e1d8:	dfc00215 	stw	ra,8(sp)
   6e1dc:	df000115 	stw	fp,4(sp)
   6e1e0:	df000104 	addi	fp,sp,4
   6e1e4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   6e1e8:	d1600804 	addi	r5,gp,-32736
   6e1ec:	e13fff17 	ldw	r4,-4(fp)
   6e1f0:	006f4980 	call	6f498 <alt_dev_llist_insert>
}
   6e1f4:	e037883a 	mov	sp,fp
   6e1f8:	dfc00117 	ldw	ra,4(sp)
   6e1fc:	df000017 	ldw	fp,0(sp)
   6e200:	dec00204 	addi	sp,sp,8
   6e204:	f800283a 	ret

0006e208 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   6e208:	defffd04 	addi	sp,sp,-12
   6e20c:	dfc00215 	stw	ra,8(sp)
   6e210:	df000115 	stw	fp,4(sp)
   6e214:	df000104 	addi	fp,sp,4
   6e218:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU_1D, cpu_1d);
   6e21c:	006fe440 	call	6fe44 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   6e220:	00800044 	movi	r2,1
   6e224:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   6e228:	0001883a 	nop
   6e22c:	e037883a 	mov	sp,fp
   6e230:	dfc00117 	ldw	ra,4(sp)
   6e234:	df000017 	ldw	fp,0(sp)
   6e238:	dec00204 	addi	sp,sp,8
   6e23c:	f800283a 	ret

0006e240 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   6e240:	defffe04 	addi	sp,sp,-8
   6e244:	dfc00115 	stw	ra,4(sp)
   6e248:	df000015 	stw	fp,0(sp)
   6e24c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_1D, timer_1d);
   6e250:	01c0fa04 	movi	r7,1000
   6e254:	01800044 	movi	r6,1
   6e258:	000b883a 	mov	r5,zero
   6e25c:	01020034 	movhi	r4,2048
   6e260:	21041804 	addi	r4,r4,4192
   6e264:	006f2940 	call	6f294 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_FIFO_INIT ( FIFO_1C, fifo_1c);
   6e268:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO_1D, fifo_1d);
   6e26c:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO_Q_4, fifo_q_4);
   6e270:	0001883a 	nop
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_1D, jtag_uart_1d);
   6e274:	01800404 	movi	r6,16
   6e278:	000b883a 	mov	r5,zero
   6e27c:	010001f4 	movhi	r4,7
   6e280:	21050004 	addi	r4,r4,5120
   6e284:	006e9180 	call	6e918 <altera_avalon_jtag_uart_init>
   6e288:	010001f4 	movhi	r4,7
   6e28c:	2104f604 	addi	r4,r4,5080
   6e290:	006e1d40 	call	6e1d4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_1D, sysid_1d);
   6e294:	0001883a 	nop
}
   6e298:	0001883a 	nop
   6e29c:	e037883a 	mov	sp,fp
   6e2a0:	dfc00117 	ldw	ra,4(sp)
   6e2a4:	df000017 	ldw	fp,0(sp)
   6e2a8:	dec00204 	addi	sp,sp,8
   6e2ac:	f800283a 	ret

0006e2b0 <altera_avalon_fifo_init>:



int altera_avalon_fifo_init(alt_u32 address, alt_u32 ienable,
                            alt_u32 emptymark, alt_u32 fullmark)
{
   6e2b0:	defffa04 	addi	sp,sp,-24
   6e2b4:	dfc00515 	stw	ra,20(sp)
   6e2b8:	df000415 	stw	fp,16(sp)
   6e2bc:	df000404 	addi	fp,sp,16
   6e2c0:	e13ffc15 	stw	r4,-16(fp)
   6e2c4:	e17ffd15 	stw	r5,-12(fp)
   6e2c8:	e1bffe15 	stw	r6,-8(fp)
   6e2cc:	e1ffff15 	stw	r7,-4(fp)
    if(altera_avalon_fifo_clear_event(address, ALTERA_AVALON_FIFO_EVENT_ALL) != ALTERA_AVALON_FIFO_OK)
   6e2d0:	01400fc4 	movi	r5,63
   6e2d4:	e13ffc17 	ldw	r4,-16(fp)
   6e2d8:	006e47c0 	call	6e47c <altera_avalon_fifo_clear_event>
   6e2dc:	10000226 	beq	r2,zero,6e2e8 <altera_avalon_fifo_init+0x38>
    {
        return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
   6e2e0:	00bfffc4 	movi	r2,-1
   6e2e4:	00001306 	br	6e334 <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_ienable(address, ienable) != ALTERA_AVALON_FIFO_OK)
   6e2e8:	e17ffd17 	ldw	r5,-12(fp)
   6e2ec:	e13ffc17 	ldw	r4,-16(fp)
   6e2f0:	006e4dc0 	call	6e4dc <altera_avalon_fifo_write_ienable>
   6e2f4:	10000226 	beq	r2,zero,6e300 <altera_avalon_fifo_init+0x50>
    {
         return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
   6e2f8:	00bfff84 	movi	r2,-2
   6e2fc:	00000d06 	br	6e334 <altera_avalon_fifo_init+0x84>
    }

    if( altera_avalon_fifo_write_almostfull(address, fullmark) != ALTERA_AVALON_FIFO_OK)
   6e300:	e17fff17 	ldw	r5,-4(fp)
   6e304:	e13ffc17 	ldw	r4,-16(fp)
   6e308:	006e5380 	call	6e538 <altera_avalon_fifo_write_almostfull>
   6e30c:	10000226 	beq	r2,zero,6e318 <altera_avalon_fifo_init+0x68>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   6e310:	00bfff44 	movi	r2,-3
   6e314:	00000706 	br	6e334 <altera_avalon_fifo_init+0x84>
    }
  
    if( altera_avalon_fifo_write_almostempty(address, emptymark) != ALTERA_AVALON_FIFO_OK)
   6e318:	e17ffe17 	ldw	r5,-8(fp)
   6e31c:	e13ffc17 	ldw	r4,-16(fp)
   6e320:	006e5940 	call	6e594 <altera_avalon_fifo_write_almostempty>
   6e324:	10000226 	beq	r2,zero,6e330 <altera_avalon_fifo_init+0x80>
    {
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   6e328:	00bfff44 	movi	r2,-3
   6e32c:	00000106 	br	6e334 <altera_avalon_fifo_init+0x84>
    }

    return ALTERA_AVALON_FIFO_OK;
   6e330:	0005883a 	mov	r2,zero
}
   6e334:	e037883a 	mov	sp,fp
   6e338:	dfc00117 	ldw	ra,4(sp)
   6e33c:	df000017 	ldw	fp,0(sp)
   6e340:	dec00204 	addi	sp,sp,8
   6e344:	f800283a 	ret

0006e348 <altera_avalon_fifo_read_status>:

int altera_avalon_fifo_read_status(alt_u32 address, alt_u32 mask)
{
   6e348:	defffd04 	addi	sp,sp,-12
   6e34c:	df000215 	stw	fp,8(sp)
   6e350:	df000204 	addi	fp,sp,8
   6e354:	e13ffe15 	stw	r4,-8(fp)
   6e358:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_STATUS(address) & mask);
   6e35c:	e0bffe17 	ldw	r2,-8(fp)
   6e360:	10800104 	addi	r2,r2,4
   6e364:	10800037 	ldwio	r2,0(r2)
   6e368:	1007883a 	mov	r3,r2
   6e36c:	e0bfff17 	ldw	r2,-4(fp)
   6e370:	1884703a 	and	r2,r3,r2
}
   6e374:	e037883a 	mov	sp,fp
   6e378:	df000017 	ldw	fp,0(sp)
   6e37c:	dec00104 	addi	sp,sp,4
   6e380:	f800283a 	ret

0006e384 <altera_avalon_fifo_read_ienable>:

int altera_avalon_fifo_read_ienable(alt_u32 address, alt_u32 mask)
{
   6e384:	defffd04 	addi	sp,sp,-12
   6e388:	df000215 	stw	fp,8(sp)
   6e38c:	df000204 	addi	fp,sp,8
   6e390:	e13ffe15 	stw	r4,-8(fp)
   6e394:	e17fff15 	stw	r5,-4(fp)
	
    return (IORD_ALTERA_AVALON_FIFO_IENABLE(address) & mask);
   6e398:	e0bffe17 	ldw	r2,-8(fp)
   6e39c:	10800304 	addi	r2,r2,12
   6e3a0:	10800037 	ldwio	r2,0(r2)
   6e3a4:	1007883a 	mov	r3,r2
   6e3a8:	e0bfff17 	ldw	r2,-4(fp)
   6e3ac:	1884703a 	and	r2,r3,r2
}
   6e3b0:	e037883a 	mov	sp,fp
   6e3b4:	df000017 	ldw	fp,0(sp)
   6e3b8:	dec00104 	addi	sp,sp,4
   6e3bc:	f800283a 	ret

0006e3c0 <altera_avalon_fifo_read_almostfull>:

int altera_avalon_fifo_read_almostfull(alt_u32 address)
{
   6e3c0:	defffe04 	addi	sp,sp,-8
   6e3c4:	df000115 	stw	fp,4(sp)
   6e3c8:	df000104 	addi	fp,sp,4
   6e3cc:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address);
   6e3d0:	e0bfff17 	ldw	r2,-4(fp)
   6e3d4:	10800404 	addi	r2,r2,16
   6e3d8:	10800037 	ldwio	r2,0(r2)
}
   6e3dc:	e037883a 	mov	sp,fp
   6e3e0:	df000017 	ldw	fp,0(sp)
   6e3e4:	dec00104 	addi	sp,sp,4
   6e3e8:	f800283a 	ret

0006e3ec <altera_avalon_fifo_read_almostempty>:

int altera_avalon_fifo_read_almostempty(alt_u32 address)
{
   6e3ec:	defffe04 	addi	sp,sp,-8
   6e3f0:	df000115 	stw	fp,4(sp)
   6e3f4:	df000104 	addi	fp,sp,4
   6e3f8:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address);
   6e3fc:	e0bfff17 	ldw	r2,-4(fp)
   6e400:	10800504 	addi	r2,r2,20
   6e404:	10800037 	ldwio	r2,0(r2)
}
   6e408:	e037883a 	mov	sp,fp
   6e40c:	df000017 	ldw	fp,0(sp)
   6e410:	dec00104 	addi	sp,sp,4
   6e414:	f800283a 	ret

0006e418 <altera_avalon_fifo_read_event>:

int altera_avalon_fifo_read_event(alt_u32 address, alt_u32 mask)
{
   6e418:	defffd04 	addi	sp,sp,-12
   6e41c:	df000215 	stw	fp,8(sp)
   6e420:	df000204 	addi	fp,sp,8
   6e424:	e13ffe15 	stw	r4,-8(fp)
   6e428:	e17fff15 	stw	r5,-4(fp)
    return (IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask);
   6e42c:	e0bffe17 	ldw	r2,-8(fp)
   6e430:	10800204 	addi	r2,r2,8
   6e434:	10800037 	ldwio	r2,0(r2)
   6e438:	1007883a 	mov	r3,r2
   6e43c:	e0bfff17 	ldw	r2,-4(fp)
   6e440:	1884703a 	and	r2,r3,r2
}
   6e444:	e037883a 	mov	sp,fp
   6e448:	df000017 	ldw	fp,0(sp)
   6e44c:	dec00104 	addi	sp,sp,4
   6e450:	f800283a 	ret

0006e454 <altera_avalon_fifo_read_level>:

int altera_avalon_fifo_read_level(alt_u32 address)
{
   6e454:	defffe04 	addi	sp,sp,-8
   6e458:	df000115 	stw	fp,4(sp)
   6e45c:	df000104 	addi	fp,sp,4
   6e460:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_LEVEL(address);
   6e464:	e0bfff17 	ldw	r2,-4(fp)
   6e468:	10800037 	ldwio	r2,0(r2)
}
   6e46c:	e037883a 	mov	sp,fp
   6e470:	df000017 	ldw	fp,0(sp)
   6e474:	dec00104 	addi	sp,sp,4
   6e478:	f800283a 	ret

0006e47c <altera_avalon_fifo_clear_event>:

int altera_avalon_fifo_clear_event(alt_u32 address, alt_u32 mask)
{
   6e47c:	defffd04 	addi	sp,sp,-12
   6e480:	df000215 	stw	fp,8(sp)
   6e484:	df000204 	addi	fp,sp,8
   6e488:	e13ffe15 	stw	r4,-8(fp)
   6e48c:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_EVENT(address, mask);
   6e490:	e0bffe17 	ldw	r2,-8(fp)
   6e494:	10800204 	addi	r2,r2,8
   6e498:	1007883a 	mov	r3,r2
   6e49c:	e0bfff17 	ldw	r2,-4(fp)
   6e4a0:	18800035 	stwio	r2,0(r3)
    if((IORD_ALTERA_AVALON_FIFO_EVENT(address) & mask) == 0)
   6e4a4:	e0bffe17 	ldw	r2,-8(fp)
   6e4a8:	10800204 	addi	r2,r2,8
   6e4ac:	10800037 	ldwio	r2,0(r2)
   6e4b0:	1007883a 	mov	r3,r2
   6e4b4:	e0bfff17 	ldw	r2,-4(fp)
   6e4b8:	1884703a 	and	r2,r3,r2
   6e4bc:	1000021e 	bne	r2,zero,6e4c8 <altera_avalon_fifo_clear_event+0x4c>
        return ALTERA_AVALON_FIFO_OK;
   6e4c0:	0005883a 	mov	r2,zero
   6e4c4:	00000106 	br	6e4cc <altera_avalon_fifo_clear_event+0x50>
    else
    return ALTERA_AVALON_FIFO_EVENT_CLEAR_ERROR;
   6e4c8:	00bfffc4 	movi	r2,-1
}
   6e4cc:	e037883a 	mov	sp,fp
   6e4d0:	df000017 	ldw	fp,0(sp)
   6e4d4:	dec00104 	addi	sp,sp,4
   6e4d8:	f800283a 	ret

0006e4dc <altera_avalon_fifo_write_ienable>:

int altera_avalon_fifo_write_ienable(alt_u32 address, alt_u32 mask)
{
   6e4dc:	defffd04 	addi	sp,sp,-12
   6e4e0:	df000215 	stw	fp,8(sp)
   6e4e4:	df000204 	addi	fp,sp,8
   6e4e8:	e13ffe15 	stw	r4,-8(fp)
   6e4ec:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_IENABLE(address, mask);
   6e4f0:	e0bffe17 	ldw	r2,-8(fp)
   6e4f4:	10800304 	addi	r2,r2,12
   6e4f8:	1007883a 	mov	r3,r2
   6e4fc:	e0bfff17 	ldw	r2,-4(fp)
   6e500:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_IENABLE(address) == mask)
   6e504:	e0bffe17 	ldw	r2,-8(fp)
   6e508:	10800304 	addi	r2,r2,12
   6e50c:	10800037 	ldwio	r2,0(r2)
   6e510:	1007883a 	mov	r3,r2
   6e514:	e0bfff17 	ldw	r2,-4(fp)
   6e518:	1880021e 	bne	r3,r2,6e524 <altera_avalon_fifo_write_ienable+0x48>
        return ALTERA_AVALON_FIFO_OK;
   6e51c:	0005883a 	mov	r2,zero
   6e520:	00000106 	br	6e528 <altera_avalon_fifo_write_ienable+0x4c>
    else
        return ALTERA_AVALON_FIFO_IENABLE_WRITE_ERROR;
   6e524:	00bfff84 	movi	r2,-2
}
   6e528:	e037883a 	mov	sp,fp
   6e52c:	df000017 	ldw	fp,0(sp)
   6e530:	dec00104 	addi	sp,sp,4
   6e534:	f800283a 	ret

0006e538 <altera_avalon_fifo_write_almostfull>:

int altera_avalon_fifo_write_almostfull(alt_u32 address, alt_u32 data)
{
   6e538:	defffd04 	addi	sp,sp,-12
   6e53c:	df000215 	stw	fp,8(sp)
   6e540:	df000204 	addi	fp,sp,8
   6e544:	e13ffe15 	stw	r4,-8(fp)
   6e548:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTFULL(address, data);
   6e54c:	e0bffe17 	ldw	r2,-8(fp)
   6e550:	10800404 	addi	r2,r2,16
   6e554:	1007883a 	mov	r3,r2
   6e558:	e0bfff17 	ldw	r2,-4(fp)
   6e55c:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTFULL(address) == data)
   6e560:	e0bffe17 	ldw	r2,-8(fp)
   6e564:	10800404 	addi	r2,r2,16
   6e568:	10800037 	ldwio	r2,0(r2)
   6e56c:	1007883a 	mov	r3,r2
   6e570:	e0bfff17 	ldw	r2,-4(fp)
   6e574:	1880021e 	bne	r3,r2,6e580 <altera_avalon_fifo_write_almostfull+0x48>
        return ALTERA_AVALON_FIFO_OK;
   6e578:	0005883a 	mov	r2,zero
   6e57c:	00000106 	br	6e584 <altera_avalon_fifo_write_almostfull+0x4c>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   6e580:	00bfff44 	movi	r2,-3
}
   6e584:	e037883a 	mov	sp,fp
   6e588:	df000017 	ldw	fp,0(sp)
   6e58c:	dec00104 	addi	sp,sp,4
   6e590:	f800283a 	ret

0006e594 <altera_avalon_fifo_write_almostempty>:

int altera_avalon_fifo_write_almostempty(alt_u32 address, alt_u32 data)
{
   6e594:	defffd04 	addi	sp,sp,-12
   6e598:	df000215 	stw	fp,8(sp)
   6e59c:	df000204 	addi	fp,sp,8
   6e5a0:	e13ffe15 	stw	r4,-8(fp)
   6e5a4:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address, data);
   6e5a8:	e0bffe17 	ldw	r2,-8(fp)
   6e5ac:	10800504 	addi	r2,r2,20
   6e5b0:	1007883a 	mov	r3,r2
   6e5b4:	e0bfff17 	ldw	r2,-4(fp)
   6e5b8:	18800035 	stwio	r2,0(r3)
    if(IORD_ALTERA_AVALON_FIFO_ALMOSTEMPTY(address) == data)
   6e5bc:	e0bffe17 	ldw	r2,-8(fp)
   6e5c0:	10800504 	addi	r2,r2,20
   6e5c4:	10800037 	ldwio	r2,0(r2)
   6e5c8:	1007883a 	mov	r3,r2
   6e5cc:	e0bfff17 	ldw	r2,-4(fp)
   6e5d0:	1880021e 	bne	r3,r2,6e5dc <altera_avalon_fifo_write_almostempty+0x48>
        return ALTERA_AVALON_FIFO_OK;
   6e5d4:	0005883a 	mov	r2,zero
   6e5d8:	00000106 	br	6e5e0 <altera_avalon_fifo_write_almostempty+0x4c>
    else
        return ALTERA_AVALON_FIFO_THRESHOLD_WRITE_ERROR;
   6e5dc:	00bfff44 	movi	r2,-3
}
   6e5e0:	e037883a 	mov	sp,fp
   6e5e4:	df000017 	ldw	fp,0(sp)
   6e5e8:	dec00104 	addi	sp,sp,4
   6e5ec:	f800283a 	ret

0006e5f0 <altera_avalon_fifo_write_fifo>:

int altera_avalon_fifo_write_fifo(alt_u32 write_address,
                                  alt_u32 ctrl_address,
                                  alt_u32 data)
{
   6e5f0:	defffb04 	addi	sp,sp,-20
   6e5f4:	dfc00415 	stw	ra,16(sp)
   6e5f8:	df000315 	stw	fp,12(sp)
   6e5fc:	df000304 	addi	fp,sp,12
   6e600:	e13ffd15 	stw	r4,-12(fp)
   6e604:	e17ffe15 	stw	r5,-8(fp)
   6e608:	e1bfff15 	stw	r6,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
   6e60c:	01400044 	movi	r5,1
   6e610:	e13ffe17 	ldw	r4,-8(fp)
   6e614:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   6e618:	1000051e 	bne	r2,zero,6e630 <altera_avalon_fifo_write_fifo+0x40>
    {
        IOWR_ALTERA_AVALON_FIFO_DATA(write_address, data);
   6e61c:	e0bffd17 	ldw	r2,-12(fp)
   6e620:	e0ffff17 	ldw	r3,-4(fp)
   6e624:	10c00035 	stwio	r3,0(r2)
        return ALTERA_AVALON_FIFO_OK;
   6e628:	0005883a 	mov	r2,zero
   6e62c:	00000106 	br	6e634 <altera_avalon_fifo_write_fifo+0x44>
    }
    else
    {
        return ALTERA_AVALON_FIFO_FULL;
   6e630:	00bfff04 	movi	r2,-4
    }
}
   6e634:	e037883a 	mov	sp,fp
   6e638:	dfc00117 	ldw	ra,4(sp)
   6e63c:	df000017 	ldw	fp,0(sp)
   6e640:	dec00204 	addi	sp,sp,8
   6e644:	f800283a 	ret

0006e648 <altera_avalon_read_fifo>:

int altera_avalon_read_fifo(alt_u32 read_address, alt_u32 ctrl_address, int *data)
{
   6e648:	defffa04 	addi	sp,sp,-24
   6e64c:	dfc00515 	stw	ra,20(sp)
   6e650:	df000415 	stw	fp,16(sp)
   6e654:	df000404 	addi	fp,sp,16
   6e658:	e13ffd15 	stw	r4,-12(fp)
   6e65c:	e17ffe15 	stw	r5,-8(fp)
   6e660:	e1bfff15 	stw	r6,-4(fp)
    int return_val = 0;
   6e664:	e03ffc15 	stw	zero,-16(fp)
    *data = 0;
   6e668:	e0bfff17 	ldw	r2,-4(fp)
   6e66c:	10000015 	stw	zero,0(r2)
    
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
   6e670:	01400084 	movi	r5,2
   6e674:	e13ffe17 	ldw	r4,-8(fp)
   6e678:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   6e67c:	1000071e 	bne	r2,zero,6e69c <altera_avalon_read_fifo+0x54>
    {
        return_val = altera_avalon_fifo_read_level(ctrl_address);
   6e680:	e13ffe17 	ldw	r4,-8(fp)
   6e684:	006e4540 	call	6e454 <altera_avalon_fifo_read_level>
   6e688:	e0bffc15 	stw	r2,-16(fp)
        *data = IORD_ALTERA_AVALON_FIFO_DATA(read_address);
   6e68c:	e0bffd17 	ldw	r2,-12(fp)
   6e690:	10c00037 	ldwio	r3,0(r2)
   6e694:	e0bfff17 	ldw	r2,-4(fp)
   6e698:	10c00015 	stw	r3,0(r2)
    
    }
    return return_val;
   6e69c:	e0bffc17 	ldw	r2,-16(fp)
}
   6e6a0:	e037883a 	mov	sp,fp
   6e6a4:	dfc00117 	ldw	ra,4(sp)
   6e6a8:	df000017 	ldw	fp,0(sp)
   6e6ac:	dec00204 	addi	sp,sp,8
   6e6b0:	f800283a 	ret

0006e6b4 <altera_avalon_fifo_read_fifo>:

int altera_avalon_fifo_read_fifo(alt_u32 read_address, alt_u32 ctrl_address)
{
   6e6b4:	defffc04 	addi	sp,sp,-16
   6e6b8:	dfc00315 	stw	ra,12(sp)
   6e6bc:	df000215 	stw	fp,8(sp)
   6e6c0:	df000204 	addi	fp,sp,8
   6e6c4:	e13ffe15 	stw	r4,-8(fp)
   6e6c8:	e17fff15 	stw	r5,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_E_MSK))
   6e6cc:	01400084 	movi	r5,2
   6e6d0:	e13fff17 	ldw	r4,-4(fp)
   6e6d4:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   6e6d8:	1000031e 	bne	r2,zero,6e6e8 <altera_avalon_fifo_read_fifo+0x34>
    {
        return IORD_ALTERA_AVALON_FIFO_DATA(read_address);
   6e6dc:	e0bffe17 	ldw	r2,-8(fp)
   6e6e0:	10800037 	ldwio	r2,0(r2)
   6e6e4:	00000106 	br	6e6ec <altera_avalon_fifo_read_fifo+0x38>
    }
    return 0;
   6e6e8:	0005883a 	mov	r2,zero
}
   6e6ec:	e037883a 	mov	sp,fp
   6e6f0:	dfc00117 	ldw	ra,4(sp)
   6e6f4:	df000017 	ldw	fp,0(sp)
   6e6f8:	dec00204 	addi	sp,sp,8
   6e6fc:	f800283a 	ret

0006e700 <altera_avalon_fifo_write_other_info>:

int altera_avalon_fifo_write_other_info(alt_u32 write_address,
					alt_u32 ctrl_address,
					alt_u32 data)
{
   6e700:	defffb04 	addi	sp,sp,-20
   6e704:	dfc00415 	stw	ra,16(sp)
   6e708:	df000315 	stw	fp,12(sp)
   6e70c:	df000304 	addi	fp,sp,12
   6e710:	e13ffd15 	stw	r4,-12(fp)
   6e714:	e17ffe15 	stw	r5,-8(fp)
   6e718:	e1bfff15 	stw	r6,-4(fp)
    if(!altera_avalon_fifo_read_status(ctrl_address, ALTERA_AVALON_FIFO_STATUS_F_MSK))
   6e71c:	01400044 	movi	r5,1
   6e720:	e13ffe17 	ldw	r4,-8(fp)
   6e724:	006e3480 	call	6e348 <altera_avalon_fifo_read_status>
   6e728:	1000071e 	bne	r2,zero,6e748 <altera_avalon_fifo_write_other_info+0x48>
    {
	IOWR_ALTERA_AVALON_FIFO_OTHER_INFO(write_address, data);
   6e72c:	e0bffd17 	ldw	r2,-12(fp)
   6e730:	10800104 	addi	r2,r2,4
   6e734:	1007883a 	mov	r3,r2
   6e738:	e0bfff17 	ldw	r2,-4(fp)
   6e73c:	18800035 	stwio	r2,0(r3)
	return ALTERA_AVALON_FIFO_OK;
   6e740:	0005883a 	mov	r2,zero
   6e744:	00000106 	br	6e74c <altera_avalon_fifo_write_other_info+0x4c>
    }
    else
    {
	return ALTERA_AVALON_FIFO_FULL;
   6e748:	00bfff04 	movi	r2,-4
    }
}
   6e74c:	e037883a 	mov	sp,fp
   6e750:	dfc00117 	ldw	ra,4(sp)
   6e754:	df000017 	ldw	fp,0(sp)
   6e758:	dec00204 	addi	sp,sp,8
   6e75c:	f800283a 	ret

0006e760 <altera_avalon_fifo_read_other_info>:

int altera_avalon_fifo_read_other_info(alt_u32 read_address)
{
   6e760:	defffe04 	addi	sp,sp,-8
   6e764:	df000115 	stw	fp,4(sp)
   6e768:	df000104 	addi	fp,sp,4
   6e76c:	e13fff15 	stw	r4,-4(fp)
    return IORD_ALTERA_AVALON_FIFO_OTHER_INFO(read_address);
   6e770:	e0bfff17 	ldw	r2,-4(fp)
   6e774:	10800104 	addi	r2,r2,4
   6e778:	10800037 	ldwio	r2,0(r2)
}
   6e77c:	e037883a 	mov	sp,fp
   6e780:	df000017 	ldw	fp,0(sp)
   6e784:	dec00104 	addi	sp,sp,4
   6e788:	f800283a 	ret

0006e78c <altera_avalon_fifo_read_backpressure>:

int altera_avalon_fifo_read_backpressure (alt_u32 read_address){
   6e78c:	defffe04 	addi	sp,sp,-8
   6e790:	df000115 	stw	fp,4(sp)
   6e794:	df000104 	addi	fp,sp,4
   6e798:	e13fff15 	stw	r4,-4(fp)
    // Read data from FIFO directly. If FIFO is empty and backpressure is supported, this call is backpressure.
    return IORD_ALTERA_AVALON_FIFO_DATA(read_address);  
   6e79c:	e0bfff17 	ldw	r2,-4(fp)
   6e7a0:	10800037 	ldwio	r2,0(r2)
}
   6e7a4:	e037883a 	mov	sp,fp
   6e7a8:	df000017 	ldw	fp,0(sp)
   6e7ac:	dec00104 	addi	sp,sp,4
   6e7b0:	f800283a 	ret

0006e7b4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   6e7b4:	defffa04 	addi	sp,sp,-24
   6e7b8:	dfc00515 	stw	ra,20(sp)
   6e7bc:	df000415 	stw	fp,16(sp)
   6e7c0:	df000404 	addi	fp,sp,16
   6e7c4:	e13ffd15 	stw	r4,-12(fp)
   6e7c8:	e17ffe15 	stw	r5,-8(fp)
   6e7cc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   6e7d0:	e0bffd17 	ldw	r2,-12(fp)
   6e7d4:	10800017 	ldw	r2,0(r2)
   6e7d8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   6e7dc:	e0bffc17 	ldw	r2,-16(fp)
   6e7e0:	10c00a04 	addi	r3,r2,40
   6e7e4:	e0bffd17 	ldw	r2,-12(fp)
   6e7e8:	10800217 	ldw	r2,8(r2)
   6e7ec:	100f883a 	mov	r7,r2
   6e7f0:	e1bfff17 	ldw	r6,-4(fp)
   6e7f4:	e17ffe17 	ldw	r5,-8(fp)
   6e7f8:	1809883a 	mov	r4,r3
   6e7fc:	006eddc0 	call	6eddc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   6e800:	e037883a 	mov	sp,fp
   6e804:	dfc00117 	ldw	ra,4(sp)
   6e808:	df000017 	ldw	fp,0(sp)
   6e80c:	dec00204 	addi	sp,sp,8
   6e810:	f800283a 	ret

0006e814 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   6e814:	defffa04 	addi	sp,sp,-24
   6e818:	dfc00515 	stw	ra,20(sp)
   6e81c:	df000415 	stw	fp,16(sp)
   6e820:	df000404 	addi	fp,sp,16
   6e824:	e13ffd15 	stw	r4,-12(fp)
   6e828:	e17ffe15 	stw	r5,-8(fp)
   6e82c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   6e830:	e0bffd17 	ldw	r2,-12(fp)
   6e834:	10800017 	ldw	r2,0(r2)
   6e838:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   6e83c:	e0bffc17 	ldw	r2,-16(fp)
   6e840:	10c00a04 	addi	r3,r2,40
   6e844:	e0bffd17 	ldw	r2,-12(fp)
   6e848:	10800217 	ldw	r2,8(r2)
   6e84c:	100f883a 	mov	r7,r2
   6e850:	e1bfff17 	ldw	r6,-4(fp)
   6e854:	e17ffe17 	ldw	r5,-8(fp)
   6e858:	1809883a 	mov	r4,r3
   6e85c:	006eff80 	call	6eff8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   6e860:	e037883a 	mov	sp,fp
   6e864:	dfc00117 	ldw	ra,4(sp)
   6e868:	df000017 	ldw	fp,0(sp)
   6e86c:	dec00204 	addi	sp,sp,8
   6e870:	f800283a 	ret

0006e874 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   6e874:	defffc04 	addi	sp,sp,-16
   6e878:	dfc00315 	stw	ra,12(sp)
   6e87c:	df000215 	stw	fp,8(sp)
   6e880:	df000204 	addi	fp,sp,8
   6e884:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   6e888:	e0bfff17 	ldw	r2,-4(fp)
   6e88c:	10800017 	ldw	r2,0(r2)
   6e890:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   6e894:	e0bffe17 	ldw	r2,-8(fp)
   6e898:	10c00a04 	addi	r3,r2,40
   6e89c:	e0bfff17 	ldw	r2,-4(fp)
   6e8a0:	10800217 	ldw	r2,8(r2)
   6e8a4:	100b883a 	mov	r5,r2
   6e8a8:	1809883a 	mov	r4,r3
   6e8ac:	006ec840 	call	6ec84 <altera_avalon_jtag_uart_close>
}
   6e8b0:	e037883a 	mov	sp,fp
   6e8b4:	dfc00117 	ldw	ra,4(sp)
   6e8b8:	df000017 	ldw	fp,0(sp)
   6e8bc:	dec00204 	addi	sp,sp,8
   6e8c0:	f800283a 	ret

0006e8c4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   6e8c4:	defffa04 	addi	sp,sp,-24
   6e8c8:	dfc00515 	stw	ra,20(sp)
   6e8cc:	df000415 	stw	fp,16(sp)
   6e8d0:	df000404 	addi	fp,sp,16
   6e8d4:	e13ffd15 	stw	r4,-12(fp)
   6e8d8:	e17ffe15 	stw	r5,-8(fp)
   6e8dc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   6e8e0:	e0bffd17 	ldw	r2,-12(fp)
   6e8e4:	10800017 	ldw	r2,0(r2)
   6e8e8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   6e8ec:	e0bffc17 	ldw	r2,-16(fp)
   6e8f0:	10800a04 	addi	r2,r2,40
   6e8f4:	e1bfff17 	ldw	r6,-4(fp)
   6e8f8:	e17ffe17 	ldw	r5,-8(fp)
   6e8fc:	1009883a 	mov	r4,r2
   6e900:	006ecec0 	call	6ecec <altera_avalon_jtag_uart_ioctl>
}
   6e904:	e037883a 	mov	sp,fp
   6e908:	dfc00117 	ldw	ra,4(sp)
   6e90c:	df000017 	ldw	fp,0(sp)
   6e910:	dec00204 	addi	sp,sp,8
   6e914:	f800283a 	ret

0006e918 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   6e918:	defffa04 	addi	sp,sp,-24
   6e91c:	dfc00515 	stw	ra,20(sp)
   6e920:	df000415 	stw	fp,16(sp)
   6e924:	df000404 	addi	fp,sp,16
   6e928:	e13ffd15 	stw	r4,-12(fp)
   6e92c:	e17ffe15 	stw	r5,-8(fp)
   6e930:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   6e934:	e0bffd17 	ldw	r2,-12(fp)
   6e938:	00c00044 	movi	r3,1
   6e93c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   6e940:	e0bffd17 	ldw	r2,-12(fp)
   6e944:	10800017 	ldw	r2,0(r2)
   6e948:	10800104 	addi	r2,r2,4
   6e94c:	1007883a 	mov	r3,r2
   6e950:	e0bffd17 	ldw	r2,-12(fp)
   6e954:	10800817 	ldw	r2,32(r2)
   6e958:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   6e95c:	e0bffe17 	ldw	r2,-8(fp)
   6e960:	e0ffff17 	ldw	r3,-4(fp)
   6e964:	d8000015 	stw	zero,0(sp)
   6e968:	e1fffd17 	ldw	r7,-12(fp)
   6e96c:	018001f4 	movhi	r6,7
   6e970:	31ba7604 	addi	r6,r6,-5672
   6e974:	180b883a 	mov	r5,r3
   6e978:	1009883a 	mov	r4,r2
   6e97c:	006f61c0 	call	6f61c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   6e980:	e0bffd17 	ldw	r2,-12(fp)
   6e984:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   6e988:	e0bffd17 	ldw	r2,-12(fp)
   6e98c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   6e990:	d0e70617 	ldw	r3,-25576(gp)
   6e994:	e1fffd17 	ldw	r7,-12(fp)
   6e998:	018001f4 	movhi	r6,7
   6e99c:	31baf904 	addi	r6,r6,-5148
   6e9a0:	180b883a 	mov	r5,r3
   6e9a4:	1009883a 	mov	r4,r2
   6e9a8:	006f3100 	call	6f310 <alt_alarm_start>
   6e9ac:	1000040e 	bge	r2,zero,6e9c0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   6e9b0:	e0fffd17 	ldw	r3,-12(fp)
   6e9b4:	00a00034 	movhi	r2,32768
   6e9b8:	10bfffc4 	addi	r2,r2,-1
   6e9bc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   6e9c0:	0001883a 	nop
   6e9c4:	e037883a 	mov	sp,fp
   6e9c8:	dfc00117 	ldw	ra,4(sp)
   6e9cc:	df000017 	ldw	fp,0(sp)
   6e9d0:	dec00204 	addi	sp,sp,8
   6e9d4:	f800283a 	ret

0006e9d8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   6e9d8:	defff804 	addi	sp,sp,-32
   6e9dc:	df000715 	stw	fp,28(sp)
   6e9e0:	df000704 	addi	fp,sp,28
   6e9e4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   6e9e8:	e0bfff17 	ldw	r2,-4(fp)
   6e9ec:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   6e9f0:	e0bffb17 	ldw	r2,-20(fp)
   6e9f4:	10800017 	ldw	r2,0(r2)
   6e9f8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   6e9fc:	e0bffc17 	ldw	r2,-16(fp)
   6ea00:	10800104 	addi	r2,r2,4
   6ea04:	10800037 	ldwio	r2,0(r2)
   6ea08:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   6ea0c:	e0bffd17 	ldw	r2,-12(fp)
   6ea10:	1080c00c 	andi	r2,r2,768
   6ea14:	10006d26 	beq	r2,zero,6ebcc <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   6ea18:	e0bffd17 	ldw	r2,-12(fp)
   6ea1c:	1080400c 	andi	r2,r2,256
   6ea20:	10003526 	beq	r2,zero,6eaf8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   6ea24:	00800074 	movhi	r2,1
   6ea28:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   6ea2c:	e0bffb17 	ldw	r2,-20(fp)
   6ea30:	10800a17 	ldw	r2,40(r2)
   6ea34:	10800044 	addi	r2,r2,1
   6ea38:	1081ffcc 	andi	r2,r2,2047
   6ea3c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   6ea40:	e0bffb17 	ldw	r2,-20(fp)
   6ea44:	10c00b17 	ldw	r3,44(r2)
   6ea48:	e0bffe17 	ldw	r2,-8(fp)
   6ea4c:	18801526 	beq	r3,r2,6eaa4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   6ea50:	e0bffc17 	ldw	r2,-16(fp)
   6ea54:	10800037 	ldwio	r2,0(r2)
   6ea58:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   6ea5c:	e0bff917 	ldw	r2,-28(fp)
   6ea60:	10a0000c 	andi	r2,r2,32768
   6ea64:	10001126 	beq	r2,zero,6eaac <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   6ea68:	e0bffb17 	ldw	r2,-20(fp)
   6ea6c:	10800a17 	ldw	r2,40(r2)
   6ea70:	e0fff917 	ldw	r3,-28(fp)
   6ea74:	1809883a 	mov	r4,r3
   6ea78:	e0fffb17 	ldw	r3,-20(fp)
   6ea7c:	1885883a 	add	r2,r3,r2
   6ea80:	10800e04 	addi	r2,r2,56
   6ea84:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   6ea88:	e0bffb17 	ldw	r2,-20(fp)
   6ea8c:	10800a17 	ldw	r2,40(r2)
   6ea90:	10800044 	addi	r2,r2,1
   6ea94:	10c1ffcc 	andi	r3,r2,2047
   6ea98:	e0bffb17 	ldw	r2,-20(fp)
   6ea9c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   6eaa0:	003fe206 	br	6ea2c <__alt_data_end+0xfffeea2c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   6eaa4:	0001883a 	nop
   6eaa8:	00000106 	br	6eab0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   6eaac:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   6eab0:	e0bff917 	ldw	r2,-28(fp)
   6eab4:	10bfffec 	andhi	r2,r2,65535
   6eab8:	10000f26 	beq	r2,zero,6eaf8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   6eabc:	e0bffb17 	ldw	r2,-20(fp)
   6eac0:	10c00817 	ldw	r3,32(r2)
   6eac4:	00bfff84 	movi	r2,-2
   6eac8:	1886703a 	and	r3,r3,r2
   6eacc:	e0bffb17 	ldw	r2,-20(fp)
   6ead0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   6ead4:	e0bffc17 	ldw	r2,-16(fp)
   6ead8:	10800104 	addi	r2,r2,4
   6eadc:	1007883a 	mov	r3,r2
   6eae0:	e0bffb17 	ldw	r2,-20(fp)
   6eae4:	10800817 	ldw	r2,32(r2)
   6eae8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   6eaec:	e0bffc17 	ldw	r2,-16(fp)
   6eaf0:	10800104 	addi	r2,r2,4
   6eaf4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   6eaf8:	e0bffd17 	ldw	r2,-12(fp)
   6eafc:	1080800c 	andi	r2,r2,512
   6eb00:	103fbe26 	beq	r2,zero,6e9fc <__alt_data_end+0xfffee9fc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   6eb04:	e0bffd17 	ldw	r2,-12(fp)
   6eb08:	1004d43a 	srli	r2,r2,16
   6eb0c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   6eb10:	00001406 	br	6eb64 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   6eb14:	e0bffc17 	ldw	r2,-16(fp)
   6eb18:	e0fffb17 	ldw	r3,-20(fp)
   6eb1c:	18c00d17 	ldw	r3,52(r3)
   6eb20:	e13ffb17 	ldw	r4,-20(fp)
   6eb24:	20c7883a 	add	r3,r4,r3
   6eb28:	18c20e04 	addi	r3,r3,2104
   6eb2c:	18c00003 	ldbu	r3,0(r3)
   6eb30:	18c03fcc 	andi	r3,r3,255
   6eb34:	18c0201c 	xori	r3,r3,128
   6eb38:	18ffe004 	addi	r3,r3,-128
   6eb3c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   6eb40:	e0bffb17 	ldw	r2,-20(fp)
   6eb44:	10800d17 	ldw	r2,52(r2)
   6eb48:	10800044 	addi	r2,r2,1
   6eb4c:	10c1ffcc 	andi	r3,r2,2047
   6eb50:	e0bffb17 	ldw	r2,-20(fp)
   6eb54:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   6eb58:	e0bffa17 	ldw	r2,-24(fp)
   6eb5c:	10bfffc4 	addi	r2,r2,-1
   6eb60:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   6eb64:	e0bffa17 	ldw	r2,-24(fp)
   6eb68:	10000526 	beq	r2,zero,6eb80 <altera_avalon_jtag_uart_irq+0x1a8>
   6eb6c:	e0bffb17 	ldw	r2,-20(fp)
   6eb70:	10c00d17 	ldw	r3,52(r2)
   6eb74:	e0bffb17 	ldw	r2,-20(fp)
   6eb78:	10800c17 	ldw	r2,48(r2)
   6eb7c:	18bfe51e 	bne	r3,r2,6eb14 <__alt_data_end+0xfffeeb14>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   6eb80:	e0bffa17 	ldw	r2,-24(fp)
   6eb84:	103f9d26 	beq	r2,zero,6e9fc <__alt_data_end+0xfffee9fc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   6eb88:	e0bffb17 	ldw	r2,-20(fp)
   6eb8c:	10c00817 	ldw	r3,32(r2)
   6eb90:	00bfff44 	movi	r2,-3
   6eb94:	1886703a 	and	r3,r3,r2
   6eb98:	e0bffb17 	ldw	r2,-20(fp)
   6eb9c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   6eba0:	e0bffb17 	ldw	r2,-20(fp)
   6eba4:	10800017 	ldw	r2,0(r2)
   6eba8:	10800104 	addi	r2,r2,4
   6ebac:	1007883a 	mov	r3,r2
   6ebb0:	e0bffb17 	ldw	r2,-20(fp)
   6ebb4:	10800817 	ldw	r2,32(r2)
   6ebb8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   6ebbc:	e0bffc17 	ldw	r2,-16(fp)
   6ebc0:	10800104 	addi	r2,r2,4
   6ebc4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   6ebc8:	003f8c06 	br	6e9fc <__alt_data_end+0xfffee9fc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   6ebcc:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   6ebd0:	0001883a 	nop
   6ebd4:	e037883a 	mov	sp,fp
   6ebd8:	df000017 	ldw	fp,0(sp)
   6ebdc:	dec00104 	addi	sp,sp,4
   6ebe0:	f800283a 	ret

0006ebe4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   6ebe4:	defff804 	addi	sp,sp,-32
   6ebe8:	df000715 	stw	fp,28(sp)
   6ebec:	df000704 	addi	fp,sp,28
   6ebf0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   6ebf4:	e0bffb17 	ldw	r2,-20(fp)
   6ebf8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   6ebfc:	e0bff917 	ldw	r2,-28(fp)
   6ec00:	10800017 	ldw	r2,0(r2)
   6ec04:	10800104 	addi	r2,r2,4
   6ec08:	10800037 	ldwio	r2,0(r2)
   6ec0c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   6ec10:	e0bffa17 	ldw	r2,-24(fp)
   6ec14:	1081000c 	andi	r2,r2,1024
   6ec18:	10000b26 	beq	r2,zero,6ec48 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   6ec1c:	e0bff917 	ldw	r2,-28(fp)
   6ec20:	10800017 	ldw	r2,0(r2)
   6ec24:	10800104 	addi	r2,r2,4
   6ec28:	1007883a 	mov	r3,r2
   6ec2c:	e0bff917 	ldw	r2,-28(fp)
   6ec30:	10800817 	ldw	r2,32(r2)
   6ec34:	10810014 	ori	r2,r2,1024
   6ec38:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   6ec3c:	e0bff917 	ldw	r2,-28(fp)
   6ec40:	10000915 	stw	zero,36(r2)
   6ec44:	00000a06 	br	6ec70 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   6ec48:	e0bff917 	ldw	r2,-28(fp)
   6ec4c:	10c00917 	ldw	r3,36(r2)
   6ec50:	00a00034 	movhi	r2,32768
   6ec54:	10bfff04 	addi	r2,r2,-4
   6ec58:	10c00536 	bltu	r2,r3,6ec70 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   6ec5c:	e0bff917 	ldw	r2,-28(fp)
   6ec60:	10800917 	ldw	r2,36(r2)
   6ec64:	10c00044 	addi	r3,r2,1
   6ec68:	e0bff917 	ldw	r2,-28(fp)
   6ec6c:	10c00915 	stw	r3,36(r2)
   6ec70:	d0a70617 	ldw	r2,-25576(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   6ec74:	e037883a 	mov	sp,fp
   6ec78:	df000017 	ldw	fp,0(sp)
   6ec7c:	dec00104 	addi	sp,sp,4
   6ec80:	f800283a 	ret

0006ec84 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   6ec84:	defffd04 	addi	sp,sp,-12
   6ec88:	df000215 	stw	fp,8(sp)
   6ec8c:	df000204 	addi	fp,sp,8
   6ec90:	e13ffe15 	stw	r4,-8(fp)
   6ec94:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   6ec98:	00000506 	br	6ecb0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   6ec9c:	e0bfff17 	ldw	r2,-4(fp)
   6eca0:	1090000c 	andi	r2,r2,16384
   6eca4:	10000226 	beq	r2,zero,6ecb0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   6eca8:	00bffd44 	movi	r2,-11
   6ecac:	00000b06 	br	6ecdc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   6ecb0:	e0bffe17 	ldw	r2,-8(fp)
   6ecb4:	10c00d17 	ldw	r3,52(r2)
   6ecb8:	e0bffe17 	ldw	r2,-8(fp)
   6ecbc:	10800c17 	ldw	r2,48(r2)
   6ecc0:	18800526 	beq	r3,r2,6ecd8 <altera_avalon_jtag_uart_close+0x54>
   6ecc4:	e0bffe17 	ldw	r2,-8(fp)
   6ecc8:	10c00917 	ldw	r3,36(r2)
   6eccc:	e0bffe17 	ldw	r2,-8(fp)
   6ecd0:	10800117 	ldw	r2,4(r2)
   6ecd4:	18bff136 	bltu	r3,r2,6ec9c <__alt_data_end+0xfffeec9c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   6ecd8:	0005883a 	mov	r2,zero
}
   6ecdc:	e037883a 	mov	sp,fp
   6ece0:	df000017 	ldw	fp,0(sp)
   6ece4:	dec00104 	addi	sp,sp,4
   6ece8:	f800283a 	ret

0006ecec <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   6ecec:	defffa04 	addi	sp,sp,-24
   6ecf0:	df000515 	stw	fp,20(sp)
   6ecf4:	df000504 	addi	fp,sp,20
   6ecf8:	e13ffd15 	stw	r4,-12(fp)
   6ecfc:	e17ffe15 	stw	r5,-8(fp)
   6ed00:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   6ed04:	00bff9c4 	movi	r2,-25
   6ed08:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   6ed0c:	e0bffe17 	ldw	r2,-8(fp)
   6ed10:	10da8060 	cmpeqi	r3,r2,27137
   6ed14:	1800031e 	bne	r3,zero,6ed24 <altera_avalon_jtag_uart_ioctl+0x38>
   6ed18:	109a80a0 	cmpeqi	r2,r2,27138
   6ed1c:	1000181e 	bne	r2,zero,6ed80 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   6ed20:	00002906 	br	6edc8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   6ed24:	e0bffd17 	ldw	r2,-12(fp)
   6ed28:	10c00117 	ldw	r3,4(r2)
   6ed2c:	00a00034 	movhi	r2,32768
   6ed30:	10bfffc4 	addi	r2,r2,-1
   6ed34:	18802126 	beq	r3,r2,6edbc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   6ed38:	e0bfff17 	ldw	r2,-4(fp)
   6ed3c:	10800017 	ldw	r2,0(r2)
   6ed40:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   6ed44:	e0bffc17 	ldw	r2,-16(fp)
   6ed48:	10800090 	cmplti	r2,r2,2
   6ed4c:	1000061e 	bne	r2,zero,6ed68 <altera_avalon_jtag_uart_ioctl+0x7c>
   6ed50:	e0fffc17 	ldw	r3,-16(fp)
   6ed54:	00a00034 	movhi	r2,32768
   6ed58:	10bfffc4 	addi	r2,r2,-1
   6ed5c:	18800226 	beq	r3,r2,6ed68 <altera_avalon_jtag_uart_ioctl+0x7c>
   6ed60:	e0bffc17 	ldw	r2,-16(fp)
   6ed64:	00000206 	br	6ed70 <altera_avalon_jtag_uart_ioctl+0x84>
   6ed68:	00a00034 	movhi	r2,32768
   6ed6c:	10bfff84 	addi	r2,r2,-2
   6ed70:	e0fffd17 	ldw	r3,-12(fp)
   6ed74:	18800115 	stw	r2,4(r3)
      rc = 0;
   6ed78:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   6ed7c:	00000f06 	br	6edbc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   6ed80:	e0bffd17 	ldw	r2,-12(fp)
   6ed84:	10c00117 	ldw	r3,4(r2)
   6ed88:	00a00034 	movhi	r2,32768
   6ed8c:	10bfffc4 	addi	r2,r2,-1
   6ed90:	18800c26 	beq	r3,r2,6edc4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   6ed94:	e0bffd17 	ldw	r2,-12(fp)
   6ed98:	10c00917 	ldw	r3,36(r2)
   6ed9c:	e0bffd17 	ldw	r2,-12(fp)
   6eda0:	10800117 	ldw	r2,4(r2)
   6eda4:	1885803a 	cmpltu	r2,r3,r2
   6eda8:	10c03fcc 	andi	r3,r2,255
   6edac:	e0bfff17 	ldw	r2,-4(fp)
   6edb0:	10c00015 	stw	r3,0(r2)
      rc = 0;
   6edb4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   6edb8:	00000206 	br	6edc4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   6edbc:	0001883a 	nop
   6edc0:	00000106 	br	6edc8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   6edc4:	0001883a 	nop

  default:
    break;
  }

  return rc;
   6edc8:	e0bffb17 	ldw	r2,-20(fp)
}
   6edcc:	e037883a 	mov	sp,fp
   6edd0:	df000017 	ldw	fp,0(sp)
   6edd4:	dec00104 	addi	sp,sp,4
   6edd8:	f800283a 	ret

0006eddc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   6eddc:	defff304 	addi	sp,sp,-52
   6ede0:	dfc00c15 	stw	ra,48(sp)
   6ede4:	df000b15 	stw	fp,44(sp)
   6ede8:	df000b04 	addi	fp,sp,44
   6edec:	e13ffc15 	stw	r4,-16(fp)
   6edf0:	e17ffd15 	stw	r5,-12(fp)
   6edf4:	e1bffe15 	stw	r6,-8(fp)
   6edf8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   6edfc:	e0bffd17 	ldw	r2,-12(fp)
   6ee00:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   6ee04:	00004706 	br	6ef24 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   6ee08:	e0bffc17 	ldw	r2,-16(fp)
   6ee0c:	10800a17 	ldw	r2,40(r2)
   6ee10:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   6ee14:	e0bffc17 	ldw	r2,-16(fp)
   6ee18:	10800b17 	ldw	r2,44(r2)
   6ee1c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   6ee20:	e0fff717 	ldw	r3,-36(fp)
   6ee24:	e0bff817 	ldw	r2,-32(fp)
   6ee28:	18800536 	bltu	r3,r2,6ee40 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   6ee2c:	e0fff717 	ldw	r3,-36(fp)
   6ee30:	e0bff817 	ldw	r2,-32(fp)
   6ee34:	1885c83a 	sub	r2,r3,r2
   6ee38:	e0bff615 	stw	r2,-40(fp)
   6ee3c:	00000406 	br	6ee50 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   6ee40:	00c20004 	movi	r3,2048
   6ee44:	e0bff817 	ldw	r2,-32(fp)
   6ee48:	1885c83a 	sub	r2,r3,r2
   6ee4c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   6ee50:	e0bff617 	ldw	r2,-40(fp)
   6ee54:	10001e26 	beq	r2,zero,6eed0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   6ee58:	e0fffe17 	ldw	r3,-8(fp)
   6ee5c:	e0bff617 	ldw	r2,-40(fp)
   6ee60:	1880022e 	bgeu	r3,r2,6ee6c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   6ee64:	e0bffe17 	ldw	r2,-8(fp)
   6ee68:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   6ee6c:	e0bffc17 	ldw	r2,-16(fp)
   6ee70:	10c00e04 	addi	r3,r2,56
   6ee74:	e0bff817 	ldw	r2,-32(fp)
   6ee78:	1885883a 	add	r2,r3,r2
   6ee7c:	e1bff617 	ldw	r6,-40(fp)
   6ee80:	100b883a 	mov	r5,r2
   6ee84:	e13ff517 	ldw	r4,-44(fp)
   6ee88:	00609280 	call	60928 <memcpy>
      ptr   += n;
   6ee8c:	e0fff517 	ldw	r3,-44(fp)
   6ee90:	e0bff617 	ldw	r2,-40(fp)
   6ee94:	1885883a 	add	r2,r3,r2
   6ee98:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   6ee9c:	e0fffe17 	ldw	r3,-8(fp)
   6eea0:	e0bff617 	ldw	r2,-40(fp)
   6eea4:	1885c83a 	sub	r2,r3,r2
   6eea8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   6eeac:	e0fff817 	ldw	r3,-32(fp)
   6eeb0:	e0bff617 	ldw	r2,-40(fp)
   6eeb4:	1885883a 	add	r2,r3,r2
   6eeb8:	10c1ffcc 	andi	r3,r2,2047
   6eebc:	e0bffc17 	ldw	r2,-16(fp)
   6eec0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   6eec4:	e0bffe17 	ldw	r2,-8(fp)
   6eec8:	00bfcf16 	blt	zero,r2,6ee08 <__alt_data_end+0xfffeee08>
   6eecc:	00000106 	br	6eed4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   6eed0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   6eed4:	e0fff517 	ldw	r3,-44(fp)
   6eed8:	e0bffd17 	ldw	r2,-12(fp)
   6eedc:	1880141e 	bne	r3,r2,6ef30 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   6eee0:	e0bfff17 	ldw	r2,-4(fp)
   6eee4:	1090000c 	andi	r2,r2,16384
   6eee8:	1000131e 	bne	r2,zero,6ef38 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   6eeec:	0001883a 	nop
   6eef0:	e0bffc17 	ldw	r2,-16(fp)
   6eef4:	10c00a17 	ldw	r3,40(r2)
   6eef8:	e0bff717 	ldw	r2,-36(fp)
   6eefc:	1880051e 	bne	r3,r2,6ef14 <altera_avalon_jtag_uart_read+0x138>
   6ef00:	e0bffc17 	ldw	r2,-16(fp)
   6ef04:	10c00917 	ldw	r3,36(r2)
   6ef08:	e0bffc17 	ldw	r2,-16(fp)
   6ef0c:	10800117 	ldw	r2,4(r2)
   6ef10:	18bff736 	bltu	r3,r2,6eef0 <__alt_data_end+0xfffeeef0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   6ef14:	e0bffc17 	ldw	r2,-16(fp)
   6ef18:	10c00a17 	ldw	r3,40(r2)
   6ef1c:	e0bff717 	ldw	r2,-36(fp)
   6ef20:	18800726 	beq	r3,r2,6ef40 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   6ef24:	e0bffe17 	ldw	r2,-8(fp)
   6ef28:	00bfb716 	blt	zero,r2,6ee08 <__alt_data_end+0xfffeee08>
   6ef2c:	00000506 	br	6ef44 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   6ef30:	0001883a 	nop
   6ef34:	00000306 	br	6ef44 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   6ef38:	0001883a 	nop
   6ef3c:	00000106 	br	6ef44 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   6ef40:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   6ef44:	e0fff517 	ldw	r3,-44(fp)
   6ef48:	e0bffd17 	ldw	r2,-12(fp)
   6ef4c:	18801826 	beq	r3,r2,6efb0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6ef50:	0005303a 	rdctl	r2,status
   6ef54:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6ef58:	e0fffb17 	ldw	r3,-20(fp)
   6ef5c:	00bfff84 	movi	r2,-2
   6ef60:	1884703a 	and	r2,r3,r2
   6ef64:	1001703a 	wrctl	status,r2
  
  return context;
   6ef68:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   6ef6c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   6ef70:	e0bffc17 	ldw	r2,-16(fp)
   6ef74:	10800817 	ldw	r2,32(r2)
   6ef78:	10c00054 	ori	r3,r2,1
   6ef7c:	e0bffc17 	ldw	r2,-16(fp)
   6ef80:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   6ef84:	e0bffc17 	ldw	r2,-16(fp)
   6ef88:	10800017 	ldw	r2,0(r2)
   6ef8c:	10800104 	addi	r2,r2,4
   6ef90:	1007883a 	mov	r3,r2
   6ef94:	e0bffc17 	ldw	r2,-16(fp)
   6ef98:	10800817 	ldw	r2,32(r2)
   6ef9c:	18800035 	stwio	r2,0(r3)
   6efa0:	e0bffa17 	ldw	r2,-24(fp)
   6efa4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6efa8:	e0bff917 	ldw	r2,-28(fp)
   6efac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   6efb0:	e0fff517 	ldw	r3,-44(fp)
   6efb4:	e0bffd17 	ldw	r2,-12(fp)
   6efb8:	18800426 	beq	r3,r2,6efcc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   6efbc:	e0fff517 	ldw	r3,-44(fp)
   6efc0:	e0bffd17 	ldw	r2,-12(fp)
   6efc4:	1885c83a 	sub	r2,r3,r2
   6efc8:	00000606 	br	6efe4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   6efcc:	e0bfff17 	ldw	r2,-4(fp)
   6efd0:	1090000c 	andi	r2,r2,16384
   6efd4:	10000226 	beq	r2,zero,6efe0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   6efd8:	00bffd44 	movi	r2,-11
   6efdc:	00000106 	br	6efe4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   6efe0:	00bffec4 	movi	r2,-5
}
   6efe4:	e037883a 	mov	sp,fp
   6efe8:	dfc00117 	ldw	ra,4(sp)
   6efec:	df000017 	ldw	fp,0(sp)
   6eff0:	dec00204 	addi	sp,sp,8
   6eff4:	f800283a 	ret

0006eff8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   6eff8:	defff304 	addi	sp,sp,-52
   6effc:	dfc00c15 	stw	ra,48(sp)
   6f000:	df000b15 	stw	fp,44(sp)
   6f004:	df000b04 	addi	fp,sp,44
   6f008:	e13ffc15 	stw	r4,-16(fp)
   6f00c:	e17ffd15 	stw	r5,-12(fp)
   6f010:	e1bffe15 	stw	r6,-8(fp)
   6f014:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   6f018:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   6f01c:	e0bffd17 	ldw	r2,-12(fp)
   6f020:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   6f024:	00003706 	br	6f104 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   6f028:	e0bffc17 	ldw	r2,-16(fp)
   6f02c:	10800c17 	ldw	r2,48(r2)
   6f030:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   6f034:	e0bffc17 	ldw	r2,-16(fp)
   6f038:	10800d17 	ldw	r2,52(r2)
   6f03c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   6f040:	e0fff917 	ldw	r3,-28(fp)
   6f044:	e0bff517 	ldw	r2,-44(fp)
   6f048:	1880062e 	bgeu	r3,r2,6f064 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   6f04c:	e0fff517 	ldw	r3,-44(fp)
   6f050:	e0bff917 	ldw	r2,-28(fp)
   6f054:	1885c83a 	sub	r2,r3,r2
   6f058:	10bfffc4 	addi	r2,r2,-1
   6f05c:	e0bff615 	stw	r2,-40(fp)
   6f060:	00000b06 	br	6f090 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   6f064:	e0bff517 	ldw	r2,-44(fp)
   6f068:	10000526 	beq	r2,zero,6f080 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   6f06c:	00c20004 	movi	r3,2048
   6f070:	e0bff917 	ldw	r2,-28(fp)
   6f074:	1885c83a 	sub	r2,r3,r2
   6f078:	e0bff615 	stw	r2,-40(fp)
   6f07c:	00000406 	br	6f090 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   6f080:	00c1ffc4 	movi	r3,2047
   6f084:	e0bff917 	ldw	r2,-28(fp)
   6f088:	1885c83a 	sub	r2,r3,r2
   6f08c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   6f090:	e0bff617 	ldw	r2,-40(fp)
   6f094:	10001e26 	beq	r2,zero,6f110 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   6f098:	e0fffe17 	ldw	r3,-8(fp)
   6f09c:	e0bff617 	ldw	r2,-40(fp)
   6f0a0:	1880022e 	bgeu	r3,r2,6f0ac <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   6f0a4:	e0bffe17 	ldw	r2,-8(fp)
   6f0a8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   6f0ac:	e0bffc17 	ldw	r2,-16(fp)
   6f0b0:	10c20e04 	addi	r3,r2,2104
   6f0b4:	e0bff917 	ldw	r2,-28(fp)
   6f0b8:	1885883a 	add	r2,r3,r2
   6f0bc:	e1bff617 	ldw	r6,-40(fp)
   6f0c0:	e17ffd17 	ldw	r5,-12(fp)
   6f0c4:	1009883a 	mov	r4,r2
   6f0c8:	00609280 	call	60928 <memcpy>
      ptr   += n;
   6f0cc:	e0fffd17 	ldw	r3,-12(fp)
   6f0d0:	e0bff617 	ldw	r2,-40(fp)
   6f0d4:	1885883a 	add	r2,r3,r2
   6f0d8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   6f0dc:	e0fffe17 	ldw	r3,-8(fp)
   6f0e0:	e0bff617 	ldw	r2,-40(fp)
   6f0e4:	1885c83a 	sub	r2,r3,r2
   6f0e8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   6f0ec:	e0fff917 	ldw	r3,-28(fp)
   6f0f0:	e0bff617 	ldw	r2,-40(fp)
   6f0f4:	1885883a 	add	r2,r3,r2
   6f0f8:	10c1ffcc 	andi	r3,r2,2047
   6f0fc:	e0bffc17 	ldw	r2,-16(fp)
   6f100:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   6f104:	e0bffe17 	ldw	r2,-8(fp)
   6f108:	00bfc716 	blt	zero,r2,6f028 <__alt_data_end+0xfffef028>
   6f10c:	00000106 	br	6f114 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   6f110:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f114:	0005303a 	rdctl	r2,status
   6f118:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f11c:	e0fffb17 	ldw	r3,-20(fp)
   6f120:	00bfff84 	movi	r2,-2
   6f124:	1884703a 	and	r2,r3,r2
   6f128:	1001703a 	wrctl	status,r2
  
  return context;
   6f12c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   6f130:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   6f134:	e0bffc17 	ldw	r2,-16(fp)
   6f138:	10800817 	ldw	r2,32(r2)
   6f13c:	10c00094 	ori	r3,r2,2
   6f140:	e0bffc17 	ldw	r2,-16(fp)
   6f144:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   6f148:	e0bffc17 	ldw	r2,-16(fp)
   6f14c:	10800017 	ldw	r2,0(r2)
   6f150:	10800104 	addi	r2,r2,4
   6f154:	1007883a 	mov	r3,r2
   6f158:	e0bffc17 	ldw	r2,-16(fp)
   6f15c:	10800817 	ldw	r2,32(r2)
   6f160:	18800035 	stwio	r2,0(r3)
   6f164:	e0bffa17 	ldw	r2,-24(fp)
   6f168:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f16c:	e0bff817 	ldw	r2,-32(fp)
   6f170:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   6f174:	e0bffe17 	ldw	r2,-8(fp)
   6f178:	0080100e 	bge	zero,r2,6f1bc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   6f17c:	e0bfff17 	ldw	r2,-4(fp)
   6f180:	1090000c 	andi	r2,r2,16384
   6f184:	1000101e 	bne	r2,zero,6f1c8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   6f188:	0001883a 	nop
   6f18c:	e0bffc17 	ldw	r2,-16(fp)
   6f190:	10c00d17 	ldw	r3,52(r2)
   6f194:	e0bff517 	ldw	r2,-44(fp)
   6f198:	1880051e 	bne	r3,r2,6f1b0 <altera_avalon_jtag_uart_write+0x1b8>
   6f19c:	e0bffc17 	ldw	r2,-16(fp)
   6f1a0:	10c00917 	ldw	r3,36(r2)
   6f1a4:	e0bffc17 	ldw	r2,-16(fp)
   6f1a8:	10800117 	ldw	r2,4(r2)
   6f1ac:	18bff736 	bltu	r3,r2,6f18c <__alt_data_end+0xfffef18c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   6f1b0:	e0bffc17 	ldw	r2,-16(fp)
   6f1b4:	10800917 	ldw	r2,36(r2)
   6f1b8:	1000051e 	bne	r2,zero,6f1d0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   6f1bc:	e0bffe17 	ldw	r2,-8(fp)
   6f1c0:	00bfd016 	blt	zero,r2,6f104 <__alt_data_end+0xfffef104>
   6f1c4:	00000306 	br	6f1d4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   6f1c8:	0001883a 	nop
   6f1cc:	00000106 	br	6f1d4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   6f1d0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   6f1d4:	e0fffd17 	ldw	r3,-12(fp)
   6f1d8:	e0bff717 	ldw	r2,-36(fp)
   6f1dc:	18800426 	beq	r3,r2,6f1f0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   6f1e0:	e0fffd17 	ldw	r3,-12(fp)
   6f1e4:	e0bff717 	ldw	r2,-36(fp)
   6f1e8:	1885c83a 	sub	r2,r3,r2
   6f1ec:	00000606 	br	6f208 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   6f1f0:	e0bfff17 	ldw	r2,-4(fp)
   6f1f4:	1090000c 	andi	r2,r2,16384
   6f1f8:	10000226 	beq	r2,zero,6f204 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   6f1fc:	00bffd44 	movi	r2,-11
   6f200:	00000106 	br	6f208 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   6f204:	00bffec4 	movi	r2,-5
}
   6f208:	e037883a 	mov	sp,fp
   6f20c:	dfc00117 	ldw	ra,4(sp)
   6f210:	df000017 	ldw	fp,0(sp)
   6f214:	dec00204 	addi	sp,sp,8
   6f218:	f800283a 	ret

0006f21c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   6f21c:	defffa04 	addi	sp,sp,-24
   6f220:	dfc00515 	stw	ra,20(sp)
   6f224:	df000415 	stw	fp,16(sp)
   6f228:	df000404 	addi	fp,sp,16
   6f22c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   6f230:	0007883a 	mov	r3,zero
   6f234:	e0bfff17 	ldw	r2,-4(fp)
   6f238:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   6f23c:	e0bfff17 	ldw	r2,-4(fp)
   6f240:	10800104 	addi	r2,r2,4
   6f244:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f248:	0005303a 	rdctl	r2,status
   6f24c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f250:	e0fffd17 	ldw	r3,-12(fp)
   6f254:	00bfff84 	movi	r2,-2
   6f258:	1884703a 	and	r2,r3,r2
   6f25c:	1001703a 	wrctl	status,r2
  
  return context;
   6f260:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   6f264:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   6f268:	006fd3c0 	call	6fd3c <alt_tick>
   6f26c:	e0bffc17 	ldw	r2,-16(fp)
   6f270:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f274:	e0bffe17 	ldw	r2,-8(fp)
   6f278:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   6f27c:	0001883a 	nop
   6f280:	e037883a 	mov	sp,fp
   6f284:	dfc00117 	ldw	ra,4(sp)
   6f288:	df000017 	ldw	fp,0(sp)
   6f28c:	dec00204 	addi	sp,sp,8
   6f290:	f800283a 	ret

0006f294 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   6f294:	defff804 	addi	sp,sp,-32
   6f298:	dfc00715 	stw	ra,28(sp)
   6f29c:	df000615 	stw	fp,24(sp)
   6f2a0:	df000604 	addi	fp,sp,24
   6f2a4:	e13ffc15 	stw	r4,-16(fp)
   6f2a8:	e17ffd15 	stw	r5,-12(fp)
   6f2ac:	e1bffe15 	stw	r6,-8(fp)
   6f2b0:	e1ffff15 	stw	r7,-4(fp)
   6f2b4:	e0bfff17 	ldw	r2,-4(fp)
   6f2b8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   6f2bc:	d0a70617 	ldw	r2,-25576(gp)
   6f2c0:	1000021e 	bne	r2,zero,6f2cc <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   6f2c4:	e0bffb17 	ldw	r2,-20(fp)
   6f2c8:	d0a70615 	stw	r2,-25576(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   6f2cc:	e0bffc17 	ldw	r2,-16(fp)
   6f2d0:	10800104 	addi	r2,r2,4
   6f2d4:	00c001c4 	movi	r3,7
   6f2d8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   6f2dc:	d8000015 	stw	zero,0(sp)
   6f2e0:	e1fffc17 	ldw	r7,-16(fp)
   6f2e4:	018001f4 	movhi	r6,7
   6f2e8:	31bc8704 	addi	r6,r6,-3556
   6f2ec:	e17ffe17 	ldw	r5,-8(fp)
   6f2f0:	e13ffd17 	ldw	r4,-12(fp)
   6f2f4:	006f61c0 	call	6f61c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   6f2f8:	0001883a 	nop
   6f2fc:	e037883a 	mov	sp,fp
   6f300:	dfc00117 	ldw	ra,4(sp)
   6f304:	df000017 	ldw	fp,0(sp)
   6f308:	dec00204 	addi	sp,sp,8
   6f30c:	f800283a 	ret

0006f310 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   6f310:	defff504 	addi	sp,sp,-44
   6f314:	df000a15 	stw	fp,40(sp)
   6f318:	df000a04 	addi	fp,sp,40
   6f31c:	e13ffc15 	stw	r4,-16(fp)
   6f320:	e17ffd15 	stw	r5,-12(fp)
   6f324:	e1bffe15 	stw	r6,-8(fp)
   6f328:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   6f32c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   6f330:	d0a70617 	ldw	r2,-25576(gp)
  
  if (alt_ticks_per_second ())
   6f334:	10003c26 	beq	r2,zero,6f428 <alt_alarm_start+0x118>
  {
    if (alarm)
   6f338:	e0bffc17 	ldw	r2,-16(fp)
   6f33c:	10003826 	beq	r2,zero,6f420 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   6f340:	e0bffc17 	ldw	r2,-16(fp)
   6f344:	e0fffe17 	ldw	r3,-8(fp)
   6f348:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   6f34c:	e0bffc17 	ldw	r2,-16(fp)
   6f350:	e0ffff17 	ldw	r3,-4(fp)
   6f354:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f358:	0005303a 	rdctl	r2,status
   6f35c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f360:	e0fff917 	ldw	r3,-28(fp)
   6f364:	00bfff84 	movi	r2,-2
   6f368:	1884703a 	and	r2,r3,r2
   6f36c:	1001703a 	wrctl	status,r2
  
  return context;
   6f370:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   6f374:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   6f378:	d0a70717 	ldw	r2,-25572(gp)
      
      current_nticks = alt_nticks();
   6f37c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   6f380:	e0fffd17 	ldw	r3,-12(fp)
   6f384:	e0bff617 	ldw	r2,-40(fp)
   6f388:	1885883a 	add	r2,r3,r2
   6f38c:	10c00044 	addi	r3,r2,1
   6f390:	e0bffc17 	ldw	r2,-16(fp)
   6f394:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   6f398:	e0bffc17 	ldw	r2,-16(fp)
   6f39c:	10c00217 	ldw	r3,8(r2)
   6f3a0:	e0bff617 	ldw	r2,-40(fp)
   6f3a4:	1880042e 	bgeu	r3,r2,6f3b8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   6f3a8:	e0bffc17 	ldw	r2,-16(fp)
   6f3ac:	00c00044 	movi	r3,1
   6f3b0:	10c00405 	stb	r3,16(r2)
   6f3b4:	00000206 	br	6f3c0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   6f3b8:	e0bffc17 	ldw	r2,-16(fp)
   6f3bc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   6f3c0:	e0bffc17 	ldw	r2,-16(fp)
   6f3c4:	d0e00e04 	addi	r3,gp,-32712
   6f3c8:	e0fffa15 	stw	r3,-24(fp)
   6f3cc:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   6f3d0:	e0bffb17 	ldw	r2,-20(fp)
   6f3d4:	e0fffa17 	ldw	r3,-24(fp)
   6f3d8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   6f3dc:	e0bffa17 	ldw	r2,-24(fp)
   6f3e0:	10c00017 	ldw	r3,0(r2)
   6f3e4:	e0bffb17 	ldw	r2,-20(fp)
   6f3e8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   6f3ec:	e0bffa17 	ldw	r2,-24(fp)
   6f3f0:	10800017 	ldw	r2,0(r2)
   6f3f4:	e0fffb17 	ldw	r3,-20(fp)
   6f3f8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   6f3fc:	e0bffa17 	ldw	r2,-24(fp)
   6f400:	e0fffb17 	ldw	r3,-20(fp)
   6f404:	10c00015 	stw	r3,0(r2)
   6f408:	e0bff817 	ldw	r2,-32(fp)
   6f40c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f410:	e0bff717 	ldw	r2,-36(fp)
   6f414:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   6f418:	0005883a 	mov	r2,zero
   6f41c:	00000306 	br	6f42c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   6f420:	00bffa84 	movi	r2,-22
   6f424:	00000106 	br	6f42c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   6f428:	00bfde84 	movi	r2,-134
  }
}
   6f42c:	e037883a 	mov	sp,fp
   6f430:	df000017 	ldw	fp,0(sp)
   6f434:	dec00104 	addi	sp,sp,4
   6f438:	f800283a 	ret

0006f43c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   6f43c:	deffff04 	addi	sp,sp,-4
   6f440:	df000015 	stw	fp,0(sp)
   6f444:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   6f448:	0001883a 	nop
   6f44c:	e037883a 	mov	sp,fp
   6f450:	df000017 	ldw	fp,0(sp)
   6f454:	dec00104 	addi	sp,sp,4
   6f458:	f800283a 	ret

0006f45c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6f45c:	defffe04 	addi	sp,sp,-8
   6f460:	dfc00115 	stw	ra,4(sp)
   6f464:	df000015 	stw	fp,0(sp)
   6f468:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6f46c:	d0a00b17 	ldw	r2,-32724(gp)
   6f470:	10000326 	beq	r2,zero,6f480 <alt_get_errno+0x24>
   6f474:	d0a00b17 	ldw	r2,-32724(gp)
   6f478:	103ee83a 	callr	r2
   6f47c:	00000106 	br	6f484 <alt_get_errno+0x28>
   6f480:	d0a70104 	addi	r2,gp,-25596
}
   6f484:	e037883a 	mov	sp,fp
   6f488:	dfc00117 	ldw	ra,4(sp)
   6f48c:	df000017 	ldw	fp,0(sp)
   6f490:	dec00204 	addi	sp,sp,8
   6f494:	f800283a 	ret

0006f498 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   6f498:	defffa04 	addi	sp,sp,-24
   6f49c:	dfc00515 	stw	ra,20(sp)
   6f4a0:	df000415 	stw	fp,16(sp)
   6f4a4:	df000404 	addi	fp,sp,16
   6f4a8:	e13ffe15 	stw	r4,-8(fp)
   6f4ac:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   6f4b0:	e0bffe17 	ldw	r2,-8(fp)
   6f4b4:	10000326 	beq	r2,zero,6f4c4 <alt_dev_llist_insert+0x2c>
   6f4b8:	e0bffe17 	ldw	r2,-8(fp)
   6f4bc:	10800217 	ldw	r2,8(r2)
   6f4c0:	1000061e 	bne	r2,zero,6f4dc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   6f4c4:	006f45c0 	call	6f45c <alt_get_errno>
   6f4c8:	1007883a 	mov	r3,r2
   6f4cc:	00800584 	movi	r2,22
   6f4d0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   6f4d4:	00bffa84 	movi	r2,-22
   6f4d8:	00001306 	br	6f528 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   6f4dc:	e0bffe17 	ldw	r2,-8(fp)
   6f4e0:	e0ffff17 	ldw	r3,-4(fp)
   6f4e4:	e0fffc15 	stw	r3,-16(fp)
   6f4e8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   6f4ec:	e0bffd17 	ldw	r2,-12(fp)
   6f4f0:	e0fffc17 	ldw	r3,-16(fp)
   6f4f4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   6f4f8:	e0bffc17 	ldw	r2,-16(fp)
   6f4fc:	10c00017 	ldw	r3,0(r2)
   6f500:	e0bffd17 	ldw	r2,-12(fp)
   6f504:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   6f508:	e0bffc17 	ldw	r2,-16(fp)
   6f50c:	10800017 	ldw	r2,0(r2)
   6f510:	e0fffd17 	ldw	r3,-12(fp)
   6f514:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   6f518:	e0bffc17 	ldw	r2,-16(fp)
   6f51c:	e0fffd17 	ldw	r3,-12(fp)
   6f520:	10c00015 	stw	r3,0(r2)

  return 0;  
   6f524:	0005883a 	mov	r2,zero
}
   6f528:	e037883a 	mov	sp,fp
   6f52c:	dfc00117 	ldw	ra,4(sp)
   6f530:	df000017 	ldw	fp,0(sp)
   6f534:	dec00204 	addi	sp,sp,8
   6f538:	f800283a 	ret

0006f53c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   6f53c:	defffd04 	addi	sp,sp,-12
   6f540:	dfc00215 	stw	ra,8(sp)
   6f544:	df000115 	stw	fp,4(sp)
   6f548:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   6f54c:	008001f4 	movhi	r2,7
   6f550:	10813c04 	addi	r2,r2,1264
   6f554:	e0bfff15 	stw	r2,-4(fp)
   6f558:	00000606 	br	6f574 <_do_ctors+0x38>
        (*ctor) (); 
   6f55c:	e0bfff17 	ldw	r2,-4(fp)
   6f560:	10800017 	ldw	r2,0(r2)
   6f564:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   6f568:	e0bfff17 	ldw	r2,-4(fp)
   6f56c:	10bfff04 	addi	r2,r2,-4
   6f570:	e0bfff15 	stw	r2,-4(fp)
   6f574:	e0ffff17 	ldw	r3,-4(fp)
   6f578:	008001f4 	movhi	r2,7
   6f57c:	10813d04 	addi	r2,r2,1268
   6f580:	18bff62e 	bgeu	r3,r2,6f55c <__alt_data_end+0xfffef55c>
        (*ctor) (); 
}
   6f584:	0001883a 	nop
   6f588:	e037883a 	mov	sp,fp
   6f58c:	dfc00117 	ldw	ra,4(sp)
   6f590:	df000017 	ldw	fp,0(sp)
   6f594:	dec00204 	addi	sp,sp,8
   6f598:	f800283a 	ret

0006f59c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   6f59c:	defffd04 	addi	sp,sp,-12
   6f5a0:	dfc00215 	stw	ra,8(sp)
   6f5a4:	df000115 	stw	fp,4(sp)
   6f5a8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   6f5ac:	008001f4 	movhi	r2,7
   6f5b0:	10813c04 	addi	r2,r2,1264
   6f5b4:	e0bfff15 	stw	r2,-4(fp)
   6f5b8:	00000606 	br	6f5d4 <_do_dtors+0x38>
        (*dtor) (); 
   6f5bc:	e0bfff17 	ldw	r2,-4(fp)
   6f5c0:	10800017 	ldw	r2,0(r2)
   6f5c4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   6f5c8:	e0bfff17 	ldw	r2,-4(fp)
   6f5cc:	10bfff04 	addi	r2,r2,-4
   6f5d0:	e0bfff15 	stw	r2,-4(fp)
   6f5d4:	e0ffff17 	ldw	r3,-4(fp)
   6f5d8:	008001f4 	movhi	r2,7
   6f5dc:	10813d04 	addi	r2,r2,1268
   6f5e0:	18bff62e 	bgeu	r3,r2,6f5bc <__alt_data_end+0xfffef5bc>
        (*dtor) (); 
}
   6f5e4:	0001883a 	nop
   6f5e8:	e037883a 	mov	sp,fp
   6f5ec:	dfc00117 	ldw	ra,4(sp)
   6f5f0:	df000017 	ldw	fp,0(sp)
   6f5f4:	dec00204 	addi	sp,sp,8
   6f5f8:	f800283a 	ret

0006f5fc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   6f5fc:	deffff04 	addi	sp,sp,-4
   6f600:	df000015 	stw	fp,0(sp)
   6f604:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   6f608:	0001883a 	nop
   6f60c:	e037883a 	mov	sp,fp
   6f610:	df000017 	ldw	fp,0(sp)
   6f614:	dec00104 	addi	sp,sp,4
   6f618:	f800283a 	ret

0006f61c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   6f61c:	defff904 	addi	sp,sp,-28
   6f620:	dfc00615 	stw	ra,24(sp)
   6f624:	df000515 	stw	fp,20(sp)
   6f628:	df000504 	addi	fp,sp,20
   6f62c:	e13ffc15 	stw	r4,-16(fp)
   6f630:	e17ffd15 	stw	r5,-12(fp)
   6f634:	e1bffe15 	stw	r6,-8(fp)
   6f638:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   6f63c:	e0800217 	ldw	r2,8(fp)
   6f640:	d8800015 	stw	r2,0(sp)
   6f644:	e1ffff17 	ldw	r7,-4(fp)
   6f648:	e1bffe17 	ldw	r6,-8(fp)
   6f64c:	e17ffd17 	ldw	r5,-12(fp)
   6f650:	e13ffc17 	ldw	r4,-16(fp)
   6f654:	006f7cc0 	call	6f7cc <alt_iic_isr_register>
}  
   6f658:	e037883a 	mov	sp,fp
   6f65c:	dfc00117 	ldw	ra,4(sp)
   6f660:	df000017 	ldw	fp,0(sp)
   6f664:	dec00204 	addi	sp,sp,8
   6f668:	f800283a 	ret

0006f66c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   6f66c:	defff904 	addi	sp,sp,-28
   6f670:	df000615 	stw	fp,24(sp)
   6f674:	df000604 	addi	fp,sp,24
   6f678:	e13ffe15 	stw	r4,-8(fp)
   6f67c:	e17fff15 	stw	r5,-4(fp)
   6f680:	e0bfff17 	ldw	r2,-4(fp)
   6f684:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f688:	0005303a 	rdctl	r2,status
   6f68c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f690:	e0fffb17 	ldw	r3,-20(fp)
   6f694:	00bfff84 	movi	r2,-2
   6f698:	1884703a 	and	r2,r3,r2
   6f69c:	1001703a 	wrctl	status,r2
  
  return context;
   6f6a0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   6f6a4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   6f6a8:	00c00044 	movi	r3,1
   6f6ac:	e0bffa17 	ldw	r2,-24(fp)
   6f6b0:	1884983a 	sll	r2,r3,r2
   6f6b4:	1007883a 	mov	r3,r2
   6f6b8:	d0a70517 	ldw	r2,-25580(gp)
   6f6bc:	1884b03a 	or	r2,r3,r2
   6f6c0:	d0a70515 	stw	r2,-25580(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   6f6c4:	d0a70517 	ldw	r2,-25580(gp)
   6f6c8:	100170fa 	wrctl	ienable,r2
   6f6cc:	e0bffc17 	ldw	r2,-16(fp)
   6f6d0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f6d4:	e0bffd17 	ldw	r2,-12(fp)
   6f6d8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   6f6dc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   6f6e0:	0001883a 	nop
}
   6f6e4:	e037883a 	mov	sp,fp
   6f6e8:	df000017 	ldw	fp,0(sp)
   6f6ec:	dec00104 	addi	sp,sp,4
   6f6f0:	f800283a 	ret

0006f6f4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   6f6f4:	defff904 	addi	sp,sp,-28
   6f6f8:	df000615 	stw	fp,24(sp)
   6f6fc:	df000604 	addi	fp,sp,24
   6f700:	e13ffe15 	stw	r4,-8(fp)
   6f704:	e17fff15 	stw	r5,-4(fp)
   6f708:	e0bfff17 	ldw	r2,-4(fp)
   6f70c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f710:	0005303a 	rdctl	r2,status
   6f714:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f718:	e0fffb17 	ldw	r3,-20(fp)
   6f71c:	00bfff84 	movi	r2,-2
   6f720:	1884703a 	and	r2,r3,r2
   6f724:	1001703a 	wrctl	status,r2
  
  return context;
   6f728:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   6f72c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   6f730:	00c00044 	movi	r3,1
   6f734:	e0bffa17 	ldw	r2,-24(fp)
   6f738:	1884983a 	sll	r2,r3,r2
   6f73c:	0084303a 	nor	r2,zero,r2
   6f740:	1007883a 	mov	r3,r2
   6f744:	d0a70517 	ldw	r2,-25580(gp)
   6f748:	1884703a 	and	r2,r3,r2
   6f74c:	d0a70515 	stw	r2,-25580(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   6f750:	d0a70517 	ldw	r2,-25580(gp)
   6f754:	100170fa 	wrctl	ienable,r2
   6f758:	e0bffc17 	ldw	r2,-16(fp)
   6f75c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f760:	e0bffd17 	ldw	r2,-12(fp)
   6f764:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   6f768:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   6f76c:	0001883a 	nop
}
   6f770:	e037883a 	mov	sp,fp
   6f774:	df000017 	ldw	fp,0(sp)
   6f778:	dec00104 	addi	sp,sp,4
   6f77c:	f800283a 	ret

0006f780 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   6f780:	defffc04 	addi	sp,sp,-16
   6f784:	df000315 	stw	fp,12(sp)
   6f788:	df000304 	addi	fp,sp,12
   6f78c:	e13ffe15 	stw	r4,-8(fp)
   6f790:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   6f794:	000530fa 	rdctl	r2,ienable
   6f798:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   6f79c:	00c00044 	movi	r3,1
   6f7a0:	e0bfff17 	ldw	r2,-4(fp)
   6f7a4:	1884983a 	sll	r2,r3,r2
   6f7a8:	1007883a 	mov	r3,r2
   6f7ac:	e0bffd17 	ldw	r2,-12(fp)
   6f7b0:	1884703a 	and	r2,r3,r2
   6f7b4:	1004c03a 	cmpne	r2,r2,zero
   6f7b8:	10803fcc 	andi	r2,r2,255
}
   6f7bc:	e037883a 	mov	sp,fp
   6f7c0:	df000017 	ldw	fp,0(sp)
   6f7c4:	dec00104 	addi	sp,sp,4
   6f7c8:	f800283a 	ret

0006f7cc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   6f7cc:	defff504 	addi	sp,sp,-44
   6f7d0:	dfc00a15 	stw	ra,40(sp)
   6f7d4:	df000915 	stw	fp,36(sp)
   6f7d8:	df000904 	addi	fp,sp,36
   6f7dc:	e13ffc15 	stw	r4,-16(fp)
   6f7e0:	e17ffd15 	stw	r5,-12(fp)
   6f7e4:	e1bffe15 	stw	r6,-8(fp)
   6f7e8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   6f7ec:	00bffa84 	movi	r2,-22
   6f7f0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   6f7f4:	e0bffd17 	ldw	r2,-12(fp)
   6f7f8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   6f7fc:	e0bff817 	ldw	r2,-32(fp)
   6f800:	10800808 	cmpgei	r2,r2,32
   6f804:	1000271e 	bne	r2,zero,6f8a4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6f808:	0005303a 	rdctl	r2,status
   6f80c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6f810:	e0fffb17 	ldw	r3,-20(fp)
   6f814:	00bfff84 	movi	r2,-2
   6f818:	1884703a 	and	r2,r3,r2
   6f81c:	1001703a 	wrctl	status,r2
  
  return context;
   6f820:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   6f824:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   6f828:	008001f4 	movhi	r2,7
   6f82c:	1090a104 	addi	r2,r2,17028
   6f830:	e0fff817 	ldw	r3,-32(fp)
   6f834:	180690fa 	slli	r3,r3,3
   6f838:	10c5883a 	add	r2,r2,r3
   6f83c:	e0fffe17 	ldw	r3,-8(fp)
   6f840:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   6f844:	008001f4 	movhi	r2,7
   6f848:	1090a104 	addi	r2,r2,17028
   6f84c:	e0fff817 	ldw	r3,-32(fp)
   6f850:	180690fa 	slli	r3,r3,3
   6f854:	10c5883a 	add	r2,r2,r3
   6f858:	10800104 	addi	r2,r2,4
   6f85c:	e0ffff17 	ldw	r3,-4(fp)
   6f860:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   6f864:	e0bffe17 	ldw	r2,-8(fp)
   6f868:	10000526 	beq	r2,zero,6f880 <alt_iic_isr_register+0xb4>
   6f86c:	e0bff817 	ldw	r2,-32(fp)
   6f870:	100b883a 	mov	r5,r2
   6f874:	e13ffc17 	ldw	r4,-16(fp)
   6f878:	006f66c0 	call	6f66c <alt_ic_irq_enable>
   6f87c:	00000406 	br	6f890 <alt_iic_isr_register+0xc4>
   6f880:	e0bff817 	ldw	r2,-32(fp)
   6f884:	100b883a 	mov	r5,r2
   6f888:	e13ffc17 	ldw	r4,-16(fp)
   6f88c:	006f6f40 	call	6f6f4 <alt_ic_irq_disable>
   6f890:	e0bff715 	stw	r2,-36(fp)
   6f894:	e0bffa17 	ldw	r2,-24(fp)
   6f898:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6f89c:	e0bff917 	ldw	r2,-28(fp)
   6f8a0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   6f8a4:	e0bff717 	ldw	r2,-36(fp)
}
   6f8a8:	e037883a 	mov	sp,fp
   6f8ac:	dfc00117 	ldw	ra,4(sp)
   6f8b0:	df000017 	ldw	fp,0(sp)
   6f8b4:	dec00204 	addi	sp,sp,8
   6f8b8:	f800283a 	ret

0006f8bc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   6f8bc:	defff804 	addi	sp,sp,-32
   6f8c0:	dfc00715 	stw	ra,28(sp)
   6f8c4:	df000615 	stw	fp,24(sp)
   6f8c8:	dc000515 	stw	r16,20(sp)
   6f8cc:	df000604 	addi	fp,sp,24
   6f8d0:	e13ffb15 	stw	r4,-20(fp)
   6f8d4:	e17ffc15 	stw	r5,-16(fp)
   6f8d8:	e1bffd15 	stw	r6,-12(fp)
   6f8dc:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   6f8e0:	e1bffe17 	ldw	r6,-8(fp)
   6f8e4:	e17ffd17 	ldw	r5,-12(fp)
   6f8e8:	e13ffc17 	ldw	r4,-16(fp)
   6f8ec:	006fb440 	call	6fb44 <open>
   6f8f0:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   6f8f4:	e0bffa17 	ldw	r2,-24(fp)
   6f8f8:	10002216 	blt	r2,zero,6f984 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   6f8fc:	040001f4 	movhi	r16,7
   6f900:	84049604 	addi	r16,r16,4696
   6f904:	e0bffa17 	ldw	r2,-24(fp)
   6f908:	01400304 	movi	r5,12
   6f90c:	1009883a 	mov	r4,r2
   6f910:	00609000 	call	60900 <__mulsi3>
   6f914:	8085883a 	add	r2,r16,r2
   6f918:	10c00017 	ldw	r3,0(r2)
   6f91c:	e0bffb17 	ldw	r2,-20(fp)
   6f920:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   6f924:	040001f4 	movhi	r16,7
   6f928:	84049604 	addi	r16,r16,4696
   6f92c:	e0bffa17 	ldw	r2,-24(fp)
   6f930:	01400304 	movi	r5,12
   6f934:	1009883a 	mov	r4,r2
   6f938:	00609000 	call	60900 <__mulsi3>
   6f93c:	8085883a 	add	r2,r16,r2
   6f940:	10800104 	addi	r2,r2,4
   6f944:	10c00017 	ldw	r3,0(r2)
   6f948:	e0bffb17 	ldw	r2,-20(fp)
   6f94c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   6f950:	040001f4 	movhi	r16,7
   6f954:	84049604 	addi	r16,r16,4696
   6f958:	e0bffa17 	ldw	r2,-24(fp)
   6f95c:	01400304 	movi	r5,12
   6f960:	1009883a 	mov	r4,r2
   6f964:	00609000 	call	60900 <__mulsi3>
   6f968:	8085883a 	add	r2,r16,r2
   6f96c:	10800204 	addi	r2,r2,8
   6f970:	10c00017 	ldw	r3,0(r2)
   6f974:	e0bffb17 	ldw	r2,-20(fp)
   6f978:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   6f97c:	e13ffa17 	ldw	r4,-24(fp)
   6f980:	006df640 	call	6df64 <alt_release_fd>
  }
} 
   6f984:	0001883a 	nop
   6f988:	e6ffff04 	addi	sp,fp,-4
   6f98c:	dfc00217 	ldw	ra,8(sp)
   6f990:	df000117 	ldw	fp,4(sp)
   6f994:	dc000017 	ldw	r16,0(sp)
   6f998:	dec00304 	addi	sp,sp,12
   6f99c:	f800283a 	ret

0006f9a0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   6f9a0:	defffb04 	addi	sp,sp,-20
   6f9a4:	dfc00415 	stw	ra,16(sp)
   6f9a8:	df000315 	stw	fp,12(sp)
   6f9ac:	df000304 	addi	fp,sp,12
   6f9b0:	e13ffd15 	stw	r4,-12(fp)
   6f9b4:	e17ffe15 	stw	r5,-8(fp)
   6f9b8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   6f9bc:	01c07fc4 	movi	r7,511
   6f9c0:	01800044 	movi	r6,1
   6f9c4:	e17ffd17 	ldw	r5,-12(fp)
   6f9c8:	010001f4 	movhi	r4,7
   6f9cc:	21049904 	addi	r4,r4,4708
   6f9d0:	006f8bc0 	call	6f8bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   6f9d4:	01c07fc4 	movi	r7,511
   6f9d8:	000d883a 	mov	r6,zero
   6f9dc:	e17ffe17 	ldw	r5,-8(fp)
   6f9e0:	010001f4 	movhi	r4,7
   6f9e4:	21049604 	addi	r4,r4,4696
   6f9e8:	006f8bc0 	call	6f8bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   6f9ec:	01c07fc4 	movi	r7,511
   6f9f0:	01800044 	movi	r6,1
   6f9f4:	e17fff17 	ldw	r5,-4(fp)
   6f9f8:	010001f4 	movhi	r4,7
   6f9fc:	21049c04 	addi	r4,r4,4720
   6fa00:	006f8bc0 	call	6f8bc <alt_open_fd>
}  
   6fa04:	0001883a 	nop
   6fa08:	e037883a 	mov	sp,fp
   6fa0c:	dfc00117 	ldw	ra,4(sp)
   6fa10:	df000017 	ldw	fp,0(sp)
   6fa14:	dec00204 	addi	sp,sp,8
   6fa18:	f800283a 	ret

0006fa1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   6fa1c:	defffe04 	addi	sp,sp,-8
   6fa20:	dfc00115 	stw	ra,4(sp)
   6fa24:	df000015 	stw	fp,0(sp)
   6fa28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   6fa2c:	d0a00b17 	ldw	r2,-32724(gp)
   6fa30:	10000326 	beq	r2,zero,6fa40 <alt_get_errno+0x24>
   6fa34:	d0a00b17 	ldw	r2,-32724(gp)
   6fa38:	103ee83a 	callr	r2
   6fa3c:	00000106 	br	6fa44 <alt_get_errno+0x28>
   6fa40:	d0a70104 	addi	r2,gp,-25596
}
   6fa44:	e037883a 	mov	sp,fp
   6fa48:	dfc00117 	ldw	ra,4(sp)
   6fa4c:	df000017 	ldw	fp,0(sp)
   6fa50:	dec00204 	addi	sp,sp,8
   6fa54:	f800283a 	ret

0006fa58 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   6fa58:	defffb04 	addi	sp,sp,-20
   6fa5c:	dfc00415 	stw	ra,16(sp)
   6fa60:	df000315 	stw	fp,12(sp)
   6fa64:	dc000215 	stw	r16,8(sp)
   6fa68:	df000304 	addi	fp,sp,12
   6fa6c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   6fa70:	e0bffe17 	ldw	r2,-8(fp)
   6fa74:	10800217 	ldw	r2,8(r2)
   6fa78:	10d00034 	orhi	r3,r2,16384
   6fa7c:	e0bffe17 	ldw	r2,-8(fp)
   6fa80:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   6fa84:	e03ffd15 	stw	zero,-12(fp)
   6fa88:	00002306 	br	6fb18 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   6fa8c:	040001f4 	movhi	r16,7
   6fa90:	84049604 	addi	r16,r16,4696
   6fa94:	e0bffd17 	ldw	r2,-12(fp)
   6fa98:	01400304 	movi	r5,12
   6fa9c:	1009883a 	mov	r4,r2
   6faa0:	00609000 	call	60900 <__mulsi3>
   6faa4:	8085883a 	add	r2,r16,r2
   6faa8:	10c00017 	ldw	r3,0(r2)
   6faac:	e0bffe17 	ldw	r2,-8(fp)
   6fab0:	10800017 	ldw	r2,0(r2)
   6fab4:	1880151e 	bne	r3,r2,6fb0c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   6fab8:	040001f4 	movhi	r16,7
   6fabc:	84049604 	addi	r16,r16,4696
   6fac0:	e0bffd17 	ldw	r2,-12(fp)
   6fac4:	01400304 	movi	r5,12
   6fac8:	1009883a 	mov	r4,r2
   6facc:	00609000 	call	60900 <__mulsi3>
   6fad0:	8085883a 	add	r2,r16,r2
   6fad4:	10800204 	addi	r2,r2,8
   6fad8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   6fadc:	10000b0e 	bge	r2,zero,6fb0c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   6fae0:	01400304 	movi	r5,12
   6fae4:	e13ffd17 	ldw	r4,-12(fp)
   6fae8:	00609000 	call	60900 <__mulsi3>
   6faec:	1007883a 	mov	r3,r2
   6faf0:	008001f4 	movhi	r2,7
   6faf4:	10849604 	addi	r2,r2,4696
   6faf8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   6fafc:	e0bffe17 	ldw	r2,-8(fp)
   6fb00:	18800226 	beq	r3,r2,6fb0c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   6fb04:	00bffcc4 	movi	r2,-13
   6fb08:	00000806 	br	6fb2c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   6fb0c:	e0bffd17 	ldw	r2,-12(fp)
   6fb10:	10800044 	addi	r2,r2,1
   6fb14:	e0bffd15 	stw	r2,-12(fp)
   6fb18:	d0a00a17 	ldw	r2,-32728(gp)
   6fb1c:	1007883a 	mov	r3,r2
   6fb20:	e0bffd17 	ldw	r2,-12(fp)
   6fb24:	18bfd92e 	bgeu	r3,r2,6fa8c <__alt_data_end+0xfffefa8c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   6fb28:	0005883a 	mov	r2,zero
}
   6fb2c:	e6ffff04 	addi	sp,fp,-4
   6fb30:	dfc00217 	ldw	ra,8(sp)
   6fb34:	df000117 	ldw	fp,4(sp)
   6fb38:	dc000017 	ldw	r16,0(sp)
   6fb3c:	dec00304 	addi	sp,sp,12
   6fb40:	f800283a 	ret

0006fb44 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   6fb44:	defff604 	addi	sp,sp,-40
   6fb48:	dfc00915 	stw	ra,36(sp)
   6fb4c:	df000815 	stw	fp,32(sp)
   6fb50:	df000804 	addi	fp,sp,32
   6fb54:	e13ffd15 	stw	r4,-12(fp)
   6fb58:	e17ffe15 	stw	r5,-8(fp)
   6fb5c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   6fb60:	00bfffc4 	movi	r2,-1
   6fb64:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   6fb68:	00bffb44 	movi	r2,-19
   6fb6c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   6fb70:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   6fb74:	d1600804 	addi	r5,gp,-32736
   6fb78:	e13ffd17 	ldw	r4,-12(fp)
   6fb7c:	006fe680 	call	6fe68 <alt_find_dev>
   6fb80:	e0bff815 	stw	r2,-32(fp)
   6fb84:	e0bff817 	ldw	r2,-32(fp)
   6fb88:	1000051e 	bne	r2,zero,6fba0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   6fb8c:	e13ffd17 	ldw	r4,-12(fp)
   6fb90:	006fef80 	call	6fef8 <alt_find_file>
   6fb94:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   6fb98:	00800044 	movi	r2,1
   6fb9c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   6fba0:	e0bff817 	ldw	r2,-32(fp)
   6fba4:	10002b26 	beq	r2,zero,6fc54 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   6fba8:	e13ff817 	ldw	r4,-32(fp)
   6fbac:	00700000 	call	70000 <alt_get_fd>
   6fbb0:	e0bff915 	stw	r2,-28(fp)
   6fbb4:	e0bff917 	ldw	r2,-28(fp)
   6fbb8:	1000030e 	bge	r2,zero,6fbc8 <open+0x84>
    {
      status = index;
   6fbbc:	e0bff917 	ldw	r2,-28(fp)
   6fbc0:	e0bffa15 	stw	r2,-24(fp)
   6fbc4:	00002506 	br	6fc5c <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   6fbc8:	01400304 	movi	r5,12
   6fbcc:	e13ff917 	ldw	r4,-28(fp)
   6fbd0:	00609000 	call	60900 <__mulsi3>
   6fbd4:	1007883a 	mov	r3,r2
   6fbd8:	008001f4 	movhi	r2,7
   6fbdc:	10849604 	addi	r2,r2,4696
   6fbe0:	1885883a 	add	r2,r3,r2
   6fbe4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   6fbe8:	e0fffe17 	ldw	r3,-8(fp)
   6fbec:	00900034 	movhi	r2,16384
   6fbf0:	10bfffc4 	addi	r2,r2,-1
   6fbf4:	1886703a 	and	r3,r3,r2
   6fbf8:	e0bffc17 	ldw	r2,-16(fp)
   6fbfc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   6fc00:	e0bffb17 	ldw	r2,-20(fp)
   6fc04:	1000051e 	bne	r2,zero,6fc1c <open+0xd8>
   6fc08:	e13ffc17 	ldw	r4,-16(fp)
   6fc0c:	006fa580 	call	6fa58 <alt_file_locked>
   6fc10:	e0bffa15 	stw	r2,-24(fp)
   6fc14:	e0bffa17 	ldw	r2,-24(fp)
   6fc18:	10001016 	blt	r2,zero,6fc5c <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   6fc1c:	e0bff817 	ldw	r2,-32(fp)
   6fc20:	10800317 	ldw	r2,12(r2)
   6fc24:	10000826 	beq	r2,zero,6fc48 <open+0x104>
   6fc28:	e0bff817 	ldw	r2,-32(fp)
   6fc2c:	10800317 	ldw	r2,12(r2)
   6fc30:	e1ffff17 	ldw	r7,-4(fp)
   6fc34:	e1bffe17 	ldw	r6,-8(fp)
   6fc38:	e17ffd17 	ldw	r5,-12(fp)
   6fc3c:	e13ffc17 	ldw	r4,-16(fp)
   6fc40:	103ee83a 	callr	r2
   6fc44:	00000106 	br	6fc4c <open+0x108>
   6fc48:	0005883a 	mov	r2,zero
   6fc4c:	e0bffa15 	stw	r2,-24(fp)
   6fc50:	00000206 	br	6fc5c <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   6fc54:	00bffb44 	movi	r2,-19
   6fc58:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   6fc5c:	e0bffa17 	ldw	r2,-24(fp)
   6fc60:	1000090e 	bge	r2,zero,6fc88 <open+0x144>
  {
    alt_release_fd (index);  
   6fc64:	e13ff917 	ldw	r4,-28(fp)
   6fc68:	006df640 	call	6df64 <alt_release_fd>
    ALT_ERRNO = -status;
   6fc6c:	006fa1c0 	call	6fa1c <alt_get_errno>
   6fc70:	1007883a 	mov	r3,r2
   6fc74:	e0bffa17 	ldw	r2,-24(fp)
   6fc78:	0085c83a 	sub	r2,zero,r2
   6fc7c:	18800015 	stw	r2,0(r3)
    return -1;
   6fc80:	00bfffc4 	movi	r2,-1
   6fc84:	00000106 	br	6fc8c <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   6fc88:	e0bff917 	ldw	r2,-28(fp)
}
   6fc8c:	e037883a 	mov	sp,fp
   6fc90:	dfc00117 	ldw	ra,4(sp)
   6fc94:	df000017 	ldw	fp,0(sp)
   6fc98:	dec00204 	addi	sp,sp,8
   6fc9c:	f800283a 	ret

0006fca0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   6fca0:	defffa04 	addi	sp,sp,-24
   6fca4:	df000515 	stw	fp,20(sp)
   6fca8:	df000504 	addi	fp,sp,20
   6fcac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   6fcb0:	0005303a 	rdctl	r2,status
   6fcb4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   6fcb8:	e0fffc17 	ldw	r3,-16(fp)
   6fcbc:	00bfff84 	movi	r2,-2
   6fcc0:	1884703a 	and	r2,r3,r2
   6fcc4:	1001703a 	wrctl	status,r2
  
  return context;
   6fcc8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   6fccc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   6fcd0:	e0bfff17 	ldw	r2,-4(fp)
   6fcd4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   6fcd8:	e0bffd17 	ldw	r2,-12(fp)
   6fcdc:	10800017 	ldw	r2,0(r2)
   6fce0:	e0fffd17 	ldw	r3,-12(fp)
   6fce4:	18c00117 	ldw	r3,4(r3)
   6fce8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   6fcec:	e0bffd17 	ldw	r2,-12(fp)
   6fcf0:	10800117 	ldw	r2,4(r2)
   6fcf4:	e0fffd17 	ldw	r3,-12(fp)
   6fcf8:	18c00017 	ldw	r3,0(r3)
   6fcfc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   6fd00:	e0bffd17 	ldw	r2,-12(fp)
   6fd04:	e0fffd17 	ldw	r3,-12(fp)
   6fd08:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   6fd0c:	e0bffd17 	ldw	r2,-12(fp)
   6fd10:	e0fffd17 	ldw	r3,-12(fp)
   6fd14:	10c00015 	stw	r3,0(r2)
   6fd18:	e0bffb17 	ldw	r2,-20(fp)
   6fd1c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   6fd20:	e0bffe17 	ldw	r2,-8(fp)
   6fd24:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   6fd28:	0001883a 	nop
   6fd2c:	e037883a 	mov	sp,fp
   6fd30:	df000017 	ldw	fp,0(sp)
   6fd34:	dec00104 	addi	sp,sp,4
   6fd38:	f800283a 	ret

0006fd3c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   6fd3c:	defffb04 	addi	sp,sp,-20
   6fd40:	dfc00415 	stw	ra,16(sp)
   6fd44:	df000315 	stw	fp,12(sp)
   6fd48:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   6fd4c:	d0a00e17 	ldw	r2,-32712(gp)
   6fd50:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   6fd54:	d0a70717 	ldw	r2,-25572(gp)
   6fd58:	10800044 	addi	r2,r2,1
   6fd5c:	d0a70715 	stw	r2,-25572(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   6fd60:	00002e06 	br	6fe1c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   6fd64:	e0bffd17 	ldw	r2,-12(fp)
   6fd68:	10800017 	ldw	r2,0(r2)
   6fd6c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   6fd70:	e0bffd17 	ldw	r2,-12(fp)
   6fd74:	10800403 	ldbu	r2,16(r2)
   6fd78:	10803fcc 	andi	r2,r2,255
   6fd7c:	10000426 	beq	r2,zero,6fd90 <alt_tick+0x54>
   6fd80:	d0a70717 	ldw	r2,-25572(gp)
   6fd84:	1000021e 	bne	r2,zero,6fd90 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   6fd88:	e0bffd17 	ldw	r2,-12(fp)
   6fd8c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   6fd90:	e0bffd17 	ldw	r2,-12(fp)
   6fd94:	10800217 	ldw	r2,8(r2)
   6fd98:	d0e70717 	ldw	r3,-25572(gp)
   6fd9c:	18801d36 	bltu	r3,r2,6fe14 <alt_tick+0xd8>
   6fda0:	e0bffd17 	ldw	r2,-12(fp)
   6fda4:	10800403 	ldbu	r2,16(r2)
   6fda8:	10803fcc 	andi	r2,r2,255
   6fdac:	1000191e 	bne	r2,zero,6fe14 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   6fdb0:	e0bffd17 	ldw	r2,-12(fp)
   6fdb4:	10800317 	ldw	r2,12(r2)
   6fdb8:	e0fffd17 	ldw	r3,-12(fp)
   6fdbc:	18c00517 	ldw	r3,20(r3)
   6fdc0:	1809883a 	mov	r4,r3
   6fdc4:	103ee83a 	callr	r2
   6fdc8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   6fdcc:	e0bfff17 	ldw	r2,-4(fp)
   6fdd0:	1000031e 	bne	r2,zero,6fde0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   6fdd4:	e13ffd17 	ldw	r4,-12(fp)
   6fdd8:	006fca00 	call	6fca0 <alt_alarm_stop>
   6fddc:	00000d06 	br	6fe14 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   6fde0:	e0bffd17 	ldw	r2,-12(fp)
   6fde4:	10c00217 	ldw	r3,8(r2)
   6fde8:	e0bfff17 	ldw	r2,-4(fp)
   6fdec:	1887883a 	add	r3,r3,r2
   6fdf0:	e0bffd17 	ldw	r2,-12(fp)
   6fdf4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   6fdf8:	e0bffd17 	ldw	r2,-12(fp)
   6fdfc:	10c00217 	ldw	r3,8(r2)
   6fe00:	d0a70717 	ldw	r2,-25572(gp)
   6fe04:	1880032e 	bgeu	r3,r2,6fe14 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   6fe08:	e0bffd17 	ldw	r2,-12(fp)
   6fe0c:	00c00044 	movi	r3,1
   6fe10:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   6fe14:	e0bffe17 	ldw	r2,-8(fp)
   6fe18:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   6fe1c:	e0fffd17 	ldw	r3,-12(fp)
   6fe20:	d0a00e04 	addi	r2,gp,-32712
   6fe24:	18bfcf1e 	bne	r3,r2,6fd64 <__alt_data_end+0xfffefd64>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   6fe28:	0001883a 	nop
}
   6fe2c:	0001883a 	nop
   6fe30:	e037883a 	mov	sp,fp
   6fe34:	dfc00117 	ldw	ra,4(sp)
   6fe38:	df000017 	ldw	fp,0(sp)
   6fe3c:	dec00204 	addi	sp,sp,8
   6fe40:	f800283a 	ret

0006fe44 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   6fe44:	deffff04 	addi	sp,sp,-4
   6fe48:	df000015 	stw	fp,0(sp)
   6fe4c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   6fe50:	000170fa 	wrctl	ienable,zero
}
   6fe54:	0001883a 	nop
   6fe58:	e037883a 	mov	sp,fp
   6fe5c:	df000017 	ldw	fp,0(sp)
   6fe60:	dec00104 	addi	sp,sp,4
   6fe64:	f800283a 	ret

0006fe68 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   6fe68:	defffa04 	addi	sp,sp,-24
   6fe6c:	dfc00515 	stw	ra,20(sp)
   6fe70:	df000415 	stw	fp,16(sp)
   6fe74:	df000404 	addi	fp,sp,16
   6fe78:	e13ffe15 	stw	r4,-8(fp)
   6fe7c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   6fe80:	e0bfff17 	ldw	r2,-4(fp)
   6fe84:	10800017 	ldw	r2,0(r2)
   6fe88:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   6fe8c:	e13ffe17 	ldw	r4,-8(fp)
   6fe90:	0060bb00 	call	60bb0 <strlen>
   6fe94:	10800044 	addi	r2,r2,1
   6fe98:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   6fe9c:	00000d06 	br	6fed4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   6fea0:	e0bffc17 	ldw	r2,-16(fp)
   6fea4:	10800217 	ldw	r2,8(r2)
   6fea8:	e0fffd17 	ldw	r3,-12(fp)
   6feac:	180d883a 	mov	r6,r3
   6feb0:	e17ffe17 	ldw	r5,-8(fp)
   6feb4:	1009883a 	mov	r4,r2
   6feb8:	00701ac0 	call	701ac <memcmp>
   6febc:	1000021e 	bne	r2,zero,6fec8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   6fec0:	e0bffc17 	ldw	r2,-16(fp)
   6fec4:	00000706 	br	6fee4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   6fec8:	e0bffc17 	ldw	r2,-16(fp)
   6fecc:	10800017 	ldw	r2,0(r2)
   6fed0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   6fed4:	e0fffc17 	ldw	r3,-16(fp)
   6fed8:	e0bfff17 	ldw	r2,-4(fp)
   6fedc:	18bff01e 	bne	r3,r2,6fea0 <__alt_data_end+0xfffefea0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   6fee0:	0005883a 	mov	r2,zero
}
   6fee4:	e037883a 	mov	sp,fp
   6fee8:	dfc00117 	ldw	ra,4(sp)
   6feec:	df000017 	ldw	fp,0(sp)
   6fef0:	dec00204 	addi	sp,sp,8
   6fef4:	f800283a 	ret

0006fef8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   6fef8:	defffb04 	addi	sp,sp,-20
   6fefc:	dfc00415 	stw	ra,16(sp)
   6ff00:	df000315 	stw	fp,12(sp)
   6ff04:	df000304 	addi	fp,sp,12
   6ff08:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   6ff0c:	d0a00617 	ldw	r2,-32744(gp)
   6ff10:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   6ff14:	00003106 	br	6ffdc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   6ff18:	e0bffd17 	ldw	r2,-12(fp)
   6ff1c:	10800217 	ldw	r2,8(r2)
   6ff20:	1009883a 	mov	r4,r2
   6ff24:	0060bb00 	call	60bb0 <strlen>
   6ff28:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   6ff2c:	e0bffd17 	ldw	r2,-12(fp)
   6ff30:	10c00217 	ldw	r3,8(r2)
   6ff34:	e0bffe17 	ldw	r2,-8(fp)
   6ff38:	10bfffc4 	addi	r2,r2,-1
   6ff3c:	1885883a 	add	r2,r3,r2
   6ff40:	10800003 	ldbu	r2,0(r2)
   6ff44:	10803fcc 	andi	r2,r2,255
   6ff48:	1080201c 	xori	r2,r2,128
   6ff4c:	10bfe004 	addi	r2,r2,-128
   6ff50:	10800bd8 	cmpnei	r2,r2,47
   6ff54:	1000031e 	bne	r2,zero,6ff64 <alt_find_file+0x6c>
    {
      len -= 1;
   6ff58:	e0bffe17 	ldw	r2,-8(fp)
   6ff5c:	10bfffc4 	addi	r2,r2,-1
   6ff60:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   6ff64:	e0bffe17 	ldw	r2,-8(fp)
   6ff68:	e0ffff17 	ldw	r3,-4(fp)
   6ff6c:	1885883a 	add	r2,r3,r2
   6ff70:	10800003 	ldbu	r2,0(r2)
   6ff74:	10803fcc 	andi	r2,r2,255
   6ff78:	1080201c 	xori	r2,r2,128
   6ff7c:	10bfe004 	addi	r2,r2,-128
   6ff80:	10800be0 	cmpeqi	r2,r2,47
   6ff84:	1000081e 	bne	r2,zero,6ffa8 <alt_find_file+0xb0>
   6ff88:	e0bffe17 	ldw	r2,-8(fp)
   6ff8c:	e0ffff17 	ldw	r3,-4(fp)
   6ff90:	1885883a 	add	r2,r3,r2
   6ff94:	10800003 	ldbu	r2,0(r2)
   6ff98:	10803fcc 	andi	r2,r2,255
   6ff9c:	1080201c 	xori	r2,r2,128
   6ffa0:	10bfe004 	addi	r2,r2,-128
   6ffa4:	10000a1e 	bne	r2,zero,6ffd0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   6ffa8:	e0bffd17 	ldw	r2,-12(fp)
   6ffac:	10800217 	ldw	r2,8(r2)
   6ffb0:	e0fffe17 	ldw	r3,-8(fp)
   6ffb4:	180d883a 	mov	r6,r3
   6ffb8:	e17fff17 	ldw	r5,-4(fp)
   6ffbc:	1009883a 	mov	r4,r2
   6ffc0:	00701ac0 	call	701ac <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   6ffc4:	1000021e 	bne	r2,zero,6ffd0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   6ffc8:	e0bffd17 	ldw	r2,-12(fp)
   6ffcc:	00000706 	br	6ffec <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   6ffd0:	e0bffd17 	ldw	r2,-12(fp)
   6ffd4:	10800017 	ldw	r2,0(r2)
   6ffd8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   6ffdc:	e0fffd17 	ldw	r3,-12(fp)
   6ffe0:	d0a00604 	addi	r2,gp,-32744
   6ffe4:	18bfcc1e 	bne	r3,r2,6ff18 <__alt_data_end+0xfffeff18>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   6ffe8:	0005883a 	mov	r2,zero
}
   6ffec:	e037883a 	mov	sp,fp
   6fff0:	dfc00117 	ldw	ra,4(sp)
   6fff4:	df000017 	ldw	fp,0(sp)
   6fff8:	dec00204 	addi	sp,sp,8
   6fffc:	f800283a 	ret

00070000 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   70000:	defffa04 	addi	sp,sp,-24
   70004:	dfc00515 	stw	ra,20(sp)
   70008:	df000415 	stw	fp,16(sp)
   7000c:	dc000315 	stw	r16,12(sp)
   70010:	df000404 	addi	fp,sp,16
   70014:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   70018:	00bffa04 	movi	r2,-24
   7001c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   70020:	e03ffc15 	stw	zero,-16(fp)
   70024:	00001d06 	br	7009c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   70028:	040001f4 	movhi	r16,7
   7002c:	84049604 	addi	r16,r16,4696
   70030:	e0bffc17 	ldw	r2,-16(fp)
   70034:	01400304 	movi	r5,12
   70038:	1009883a 	mov	r4,r2
   7003c:	00609000 	call	60900 <__mulsi3>
   70040:	8085883a 	add	r2,r16,r2
   70044:	10800017 	ldw	r2,0(r2)
   70048:	1000111e 	bne	r2,zero,70090 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   7004c:	040001f4 	movhi	r16,7
   70050:	84049604 	addi	r16,r16,4696
   70054:	e0bffc17 	ldw	r2,-16(fp)
   70058:	01400304 	movi	r5,12
   7005c:	1009883a 	mov	r4,r2
   70060:	00609000 	call	60900 <__mulsi3>
   70064:	8085883a 	add	r2,r16,r2
   70068:	e0fffe17 	ldw	r3,-8(fp)
   7006c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   70070:	d0e00a17 	ldw	r3,-32728(gp)
   70074:	e0bffc17 	ldw	r2,-16(fp)
   70078:	1880020e 	bge	r3,r2,70084 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   7007c:	e0bffc17 	ldw	r2,-16(fp)
   70080:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   70084:	e0bffc17 	ldw	r2,-16(fp)
   70088:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   7008c:	00000606 	br	700a8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   70090:	e0bffc17 	ldw	r2,-16(fp)
   70094:	10800044 	addi	r2,r2,1
   70098:	e0bffc15 	stw	r2,-16(fp)
   7009c:	e0bffc17 	ldw	r2,-16(fp)
   700a0:	10800810 	cmplti	r2,r2,32
   700a4:	103fe01e 	bne	r2,zero,70028 <__alt_data_end+0xffff0028>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   700a8:	e0bffd17 	ldw	r2,-12(fp)
}
   700ac:	e6ffff04 	addi	sp,fp,-4
   700b0:	dfc00217 	ldw	ra,8(sp)
   700b4:	df000117 	ldw	fp,4(sp)
   700b8:	dc000017 	ldw	r16,0(sp)
   700bc:	dec00304 	addi	sp,sp,12
   700c0:	f800283a 	ret

000700c4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   700c4:	defffe04 	addi	sp,sp,-8
   700c8:	df000115 	stw	fp,4(sp)
   700cc:	df000104 	addi	fp,sp,4
   700d0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   700d4:	e0bfff17 	ldw	r2,-4(fp)
   700d8:	10bffe84 	addi	r2,r2,-6
   700dc:	10c00428 	cmpgeui	r3,r2,16
   700e0:	18001a1e 	bne	r3,zero,7014c <alt_exception_cause_generated_bad_addr+0x88>
   700e4:	100690ba 	slli	r3,r2,2
   700e8:	008001f4 	movhi	r2,7
   700ec:	10803f04 	addi	r2,r2,252
   700f0:	1885883a 	add	r2,r3,r2
   700f4:	10800017 	ldw	r2,0(r2)
   700f8:	1000683a 	jmp	r2
   700fc:	0007013c 	xorhi	zero,zero,7172
   70100:	0007013c 	xorhi	zero,zero,7172
   70104:	0007014c 	andi	zero,zero,7173
   70108:	0007014c 	andi	zero,zero,7173
   7010c:	0007014c 	andi	zero,zero,7173
   70110:	0007013c 	xorhi	zero,zero,7172
   70114:	00070144 	movi	zero,7173
   70118:	0007014c 	andi	zero,zero,7173
   7011c:	0007013c 	xorhi	zero,zero,7172
   70120:	0007013c 	xorhi	zero,zero,7172
   70124:	0007014c 	andi	zero,zero,7173
   70128:	0007013c 	xorhi	zero,zero,7172
   7012c:	00070144 	movi	zero,7173
   70130:	0007014c 	andi	zero,zero,7173
   70134:	0007014c 	andi	zero,zero,7173
   70138:	0007013c 	xorhi	zero,zero,7172
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   7013c:	00800044 	movi	r2,1
   70140:	00000306 	br	70150 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   70144:	0005883a 	mov	r2,zero
   70148:	00000106 	br	70150 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   7014c:	0005883a 	mov	r2,zero
  }
}
   70150:	e037883a 	mov	sp,fp
   70154:	df000017 	ldw	fp,0(sp)
   70158:	dec00104 	addi	sp,sp,4
   7015c:	f800283a 	ret

00070160 <atexit>:
   70160:	200b883a 	mov	r5,r4
   70164:	000f883a 	mov	r7,zero
   70168:	000d883a 	mov	r6,zero
   7016c:	0009883a 	mov	r4,zero
   70170:	00702281 	jmpi	70228 <__register_exitproc>

00070174 <exit>:
   70174:	defffe04 	addi	sp,sp,-8
   70178:	000b883a 	mov	r5,zero
   7017c:	dc000015 	stw	r16,0(sp)
   70180:	dfc00115 	stw	ra,4(sp)
   70184:	2021883a 	mov	r16,r4
   70188:	00703400 	call	70340 <__call_exitprocs>
   7018c:	008001f4 	movhi	r2,7
   70190:	10890e04 	addi	r2,r2,9272
   70194:	11000017 	ldw	r4,0(r2)
   70198:	20800f17 	ldw	r2,60(r4)
   7019c:	10000126 	beq	r2,zero,701a4 <exit+0x30>
   701a0:	103ee83a 	callr	r2
   701a4:	8009883a 	mov	r4,r16
   701a8:	00704c00 	call	704c0 <_exit>

000701ac <memcmp>:
   701ac:	01c000c4 	movi	r7,3
   701b0:	3980192e 	bgeu	r7,r6,70218 <memcmp+0x6c>
   701b4:	2144b03a 	or	r2,r4,r5
   701b8:	11c4703a 	and	r2,r2,r7
   701bc:	10000f26 	beq	r2,zero,701fc <memcmp+0x50>
   701c0:	20800003 	ldbu	r2,0(r4)
   701c4:	28c00003 	ldbu	r3,0(r5)
   701c8:	10c0151e 	bne	r2,r3,70220 <memcmp+0x74>
   701cc:	31bfff84 	addi	r6,r6,-2
   701d0:	01ffffc4 	movi	r7,-1
   701d4:	00000406 	br	701e8 <memcmp+0x3c>
   701d8:	20800003 	ldbu	r2,0(r4)
   701dc:	28c00003 	ldbu	r3,0(r5)
   701e0:	31bfffc4 	addi	r6,r6,-1
   701e4:	10c00e1e 	bne	r2,r3,70220 <memcmp+0x74>
   701e8:	21000044 	addi	r4,r4,1
   701ec:	29400044 	addi	r5,r5,1
   701f0:	31fff91e 	bne	r6,r7,701d8 <__alt_data_end+0xffff01d8>
   701f4:	0005883a 	mov	r2,zero
   701f8:	f800283a 	ret
   701fc:	20c00017 	ldw	r3,0(r4)
   70200:	28800017 	ldw	r2,0(r5)
   70204:	18bfee1e 	bne	r3,r2,701c0 <__alt_data_end+0xffff01c0>
   70208:	31bfff04 	addi	r6,r6,-4
   7020c:	21000104 	addi	r4,r4,4
   70210:	29400104 	addi	r5,r5,4
   70214:	39bff936 	bltu	r7,r6,701fc <__alt_data_end+0xffff01fc>
   70218:	303fe91e 	bne	r6,zero,701c0 <__alt_data_end+0xffff01c0>
   7021c:	003ff506 	br	701f4 <__alt_data_end+0xffff01f4>
   70220:	10c5c83a 	sub	r2,r2,r3
   70224:	f800283a 	ret

00070228 <__register_exitproc>:
   70228:	defffa04 	addi	sp,sp,-24
   7022c:	dc000315 	stw	r16,12(sp)
   70230:	040001f4 	movhi	r16,7
   70234:	84090e04 	addi	r16,r16,9272
   70238:	80c00017 	ldw	r3,0(r16)
   7023c:	dc400415 	stw	r17,16(sp)
   70240:	dfc00515 	stw	ra,20(sp)
   70244:	18805217 	ldw	r2,328(r3)
   70248:	2023883a 	mov	r17,r4
   7024c:	10003726 	beq	r2,zero,7032c <__register_exitproc+0x104>
   70250:	10c00117 	ldw	r3,4(r2)
   70254:	010007c4 	movi	r4,31
   70258:	20c00e16 	blt	r4,r3,70294 <__register_exitproc+0x6c>
   7025c:	1a000044 	addi	r8,r3,1
   70260:	8800221e 	bne	r17,zero,702ec <__register_exitproc+0xc4>
   70264:	18c00084 	addi	r3,r3,2
   70268:	18c7883a 	add	r3,r3,r3
   7026c:	18c7883a 	add	r3,r3,r3
   70270:	12000115 	stw	r8,4(r2)
   70274:	10c7883a 	add	r3,r2,r3
   70278:	19400015 	stw	r5,0(r3)
   7027c:	0005883a 	mov	r2,zero
   70280:	dfc00517 	ldw	ra,20(sp)
   70284:	dc400417 	ldw	r17,16(sp)
   70288:	dc000317 	ldw	r16,12(sp)
   7028c:	dec00604 	addi	sp,sp,24
   70290:	f800283a 	ret
   70294:	00800034 	movhi	r2,0
   70298:	10800004 	addi	r2,r2,0
   7029c:	10002626 	beq	r2,zero,70338 <__register_exitproc+0x110>
   702a0:	01006404 	movi	r4,400
   702a4:	d9400015 	stw	r5,0(sp)
   702a8:	d9800115 	stw	r6,4(sp)
   702ac:	d9c00215 	stw	r7,8(sp)
   702b0:	00000000 	call	0 <__alt_mem_sdram_controller>
   702b4:	d9400017 	ldw	r5,0(sp)
   702b8:	d9800117 	ldw	r6,4(sp)
   702bc:	d9c00217 	ldw	r7,8(sp)
   702c0:	10001d26 	beq	r2,zero,70338 <__register_exitproc+0x110>
   702c4:	81000017 	ldw	r4,0(r16)
   702c8:	10000115 	stw	zero,4(r2)
   702cc:	02000044 	movi	r8,1
   702d0:	22405217 	ldw	r9,328(r4)
   702d4:	0007883a 	mov	r3,zero
   702d8:	12400015 	stw	r9,0(r2)
   702dc:	20805215 	stw	r2,328(r4)
   702e0:	10006215 	stw	zero,392(r2)
   702e4:	10006315 	stw	zero,396(r2)
   702e8:	883fde26 	beq	r17,zero,70264 <__alt_data_end+0xffff0264>
   702ec:	18c9883a 	add	r4,r3,r3
   702f0:	2109883a 	add	r4,r4,r4
   702f4:	1109883a 	add	r4,r2,r4
   702f8:	21802215 	stw	r6,136(r4)
   702fc:	01800044 	movi	r6,1
   70300:	12406217 	ldw	r9,392(r2)
   70304:	30cc983a 	sll	r6,r6,r3
   70308:	4992b03a 	or	r9,r9,r6
   7030c:	12406215 	stw	r9,392(r2)
   70310:	21c04215 	stw	r7,264(r4)
   70314:	01000084 	movi	r4,2
   70318:	893fd21e 	bne	r17,r4,70264 <__alt_data_end+0xffff0264>
   7031c:	11006317 	ldw	r4,396(r2)
   70320:	218cb03a 	or	r6,r4,r6
   70324:	11806315 	stw	r6,396(r2)
   70328:	003fce06 	br	70264 <__alt_data_end+0xffff0264>
   7032c:	18805304 	addi	r2,r3,332
   70330:	18805215 	stw	r2,328(r3)
   70334:	003fc606 	br	70250 <__alt_data_end+0xffff0250>
   70338:	00bfffc4 	movi	r2,-1
   7033c:	003fd006 	br	70280 <__alt_data_end+0xffff0280>

00070340 <__call_exitprocs>:
   70340:	defff504 	addi	sp,sp,-44
   70344:	df000915 	stw	fp,36(sp)
   70348:	dd400615 	stw	r21,24(sp)
   7034c:	dc800315 	stw	r18,12(sp)
   70350:	dfc00a15 	stw	ra,40(sp)
   70354:	ddc00815 	stw	r23,32(sp)
   70358:	dd800715 	stw	r22,28(sp)
   7035c:	dd000515 	stw	r20,20(sp)
   70360:	dcc00415 	stw	r19,16(sp)
   70364:	dc400215 	stw	r17,8(sp)
   70368:	dc000115 	stw	r16,4(sp)
   7036c:	d9000015 	stw	r4,0(sp)
   70370:	2839883a 	mov	fp,r5
   70374:	04800044 	movi	r18,1
   70378:	057fffc4 	movi	r21,-1
   7037c:	008001f4 	movhi	r2,7
   70380:	10890e04 	addi	r2,r2,9272
   70384:	12000017 	ldw	r8,0(r2)
   70388:	45005217 	ldw	r20,328(r8)
   7038c:	44c05204 	addi	r19,r8,328
   70390:	a0001c26 	beq	r20,zero,70404 <__call_exitprocs+0xc4>
   70394:	a0800117 	ldw	r2,4(r20)
   70398:	15ffffc4 	addi	r23,r2,-1
   7039c:	b8000d16 	blt	r23,zero,703d4 <__call_exitprocs+0x94>
   703a0:	14000044 	addi	r16,r2,1
   703a4:	8421883a 	add	r16,r16,r16
   703a8:	8421883a 	add	r16,r16,r16
   703ac:	84402004 	addi	r17,r16,128
   703b0:	a463883a 	add	r17,r20,r17
   703b4:	a421883a 	add	r16,r20,r16
   703b8:	e0001e26 	beq	fp,zero,70434 <__call_exitprocs+0xf4>
   703bc:	80804017 	ldw	r2,256(r16)
   703c0:	e0801c26 	beq	fp,r2,70434 <__call_exitprocs+0xf4>
   703c4:	bdffffc4 	addi	r23,r23,-1
   703c8:	843fff04 	addi	r16,r16,-4
   703cc:	8c7fff04 	addi	r17,r17,-4
   703d0:	bd7ff91e 	bne	r23,r21,703b8 <__alt_data_end+0xffff03b8>
   703d4:	00800034 	movhi	r2,0
   703d8:	10800004 	addi	r2,r2,0
   703dc:	10000926 	beq	r2,zero,70404 <__call_exitprocs+0xc4>
   703e0:	a0800117 	ldw	r2,4(r20)
   703e4:	1000301e 	bne	r2,zero,704a8 <__call_exitprocs+0x168>
   703e8:	a0800017 	ldw	r2,0(r20)
   703ec:	10003226 	beq	r2,zero,704b8 <__call_exitprocs+0x178>
   703f0:	a009883a 	mov	r4,r20
   703f4:	98800015 	stw	r2,0(r19)
   703f8:	00000000 	call	0 <__alt_mem_sdram_controller>
   703fc:	9d000017 	ldw	r20,0(r19)
   70400:	a03fe41e 	bne	r20,zero,70394 <__alt_data_end+0xffff0394>
   70404:	dfc00a17 	ldw	ra,40(sp)
   70408:	df000917 	ldw	fp,36(sp)
   7040c:	ddc00817 	ldw	r23,32(sp)
   70410:	dd800717 	ldw	r22,28(sp)
   70414:	dd400617 	ldw	r21,24(sp)
   70418:	dd000517 	ldw	r20,20(sp)
   7041c:	dcc00417 	ldw	r19,16(sp)
   70420:	dc800317 	ldw	r18,12(sp)
   70424:	dc400217 	ldw	r17,8(sp)
   70428:	dc000117 	ldw	r16,4(sp)
   7042c:	dec00b04 	addi	sp,sp,44
   70430:	f800283a 	ret
   70434:	a0800117 	ldw	r2,4(r20)
   70438:	80c00017 	ldw	r3,0(r16)
   7043c:	10bfffc4 	addi	r2,r2,-1
   70440:	15c01426 	beq	r2,r23,70494 <__call_exitprocs+0x154>
   70444:	80000015 	stw	zero,0(r16)
   70448:	183fde26 	beq	r3,zero,703c4 <__alt_data_end+0xffff03c4>
   7044c:	95c8983a 	sll	r4,r18,r23
   70450:	a0806217 	ldw	r2,392(r20)
   70454:	a5800117 	ldw	r22,4(r20)
   70458:	2084703a 	and	r2,r4,r2
   7045c:	10000b26 	beq	r2,zero,7048c <__call_exitprocs+0x14c>
   70460:	a0806317 	ldw	r2,396(r20)
   70464:	2088703a 	and	r4,r4,r2
   70468:	20000c1e 	bne	r4,zero,7049c <__call_exitprocs+0x15c>
   7046c:	89400017 	ldw	r5,0(r17)
   70470:	d9000017 	ldw	r4,0(sp)
   70474:	183ee83a 	callr	r3
   70478:	a0800117 	ldw	r2,4(r20)
   7047c:	15bfbf1e 	bne	r2,r22,7037c <__alt_data_end+0xffff037c>
   70480:	98800017 	ldw	r2,0(r19)
   70484:	153fcf26 	beq	r2,r20,703c4 <__alt_data_end+0xffff03c4>
   70488:	003fbc06 	br	7037c <__alt_data_end+0xffff037c>
   7048c:	183ee83a 	callr	r3
   70490:	003ff906 	br	70478 <__alt_data_end+0xffff0478>
   70494:	a5c00115 	stw	r23,4(r20)
   70498:	003feb06 	br	70448 <__alt_data_end+0xffff0448>
   7049c:	89000017 	ldw	r4,0(r17)
   704a0:	183ee83a 	callr	r3
   704a4:	003ff406 	br	70478 <__alt_data_end+0xffff0478>
   704a8:	a0800017 	ldw	r2,0(r20)
   704ac:	a027883a 	mov	r19,r20
   704b0:	1029883a 	mov	r20,r2
   704b4:	003fb606 	br	70390 <__alt_data_end+0xffff0390>
   704b8:	0005883a 	mov	r2,zero
   704bc:	003ffb06 	br	704ac <__alt_data_end+0xffff04ac>

000704c0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   704c0:	defffd04 	addi	sp,sp,-12
   704c4:	df000215 	stw	fp,8(sp)
   704c8:	df000204 	addi	fp,sp,8
   704cc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   704d0:	0001883a 	nop
   704d4:	e0bfff17 	ldw	r2,-4(fp)
   704d8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   704dc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   704e0:	10000226 	beq	r2,zero,704ec <_exit+0x2c>
    ALT_SIM_FAIL();
   704e4:	002af070 	cmpltui	zero,zero,43969
   704e8:	00000106 	br	704f0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   704ec:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   704f0:	003fff06 	br	704f0 <__alt_data_end+0xffff04f0>
